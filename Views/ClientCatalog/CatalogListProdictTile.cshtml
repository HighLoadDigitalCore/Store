@model StoreProduct
@{
    var shopcart = (ShopCart)ViewBag.ShopCart;
    var isFavorite = ViewBag.IsFavorite is bool && (bool)ViewBag.IsFavorite;
}
@if (Model != null)
{
    <div itemscope itemtype="http://schema.org/Product" itemprop="itemListElement" data-item_id="@Model.ID" data-is_favorite="@Model.IsUserFavorite" class="goods-cell goods_view_box @(Model.Weight.HasValue && Model.Weight.Value > 0 ? "has_weight" : "") @(shopcart.ActiveProducts.Any(z => z.ProductID == Model.ID) ? "selected" : "")">
        @if (Model.StoreProductBlocks.Any(x => x.GroupName == "trend"))
        {
            <div style="background-image: url('/content/theme_main/img/icon-trend-small.png')" class="promoaction_icon"></div>
        }
        else if (Model.DiscountTotal > 0)
        {
            <div style="background-image: url('/content/theme_main/img/favorite.png')" class="promoaction_icon">-@Model.DiscountTotal.ToString("##.##")%</div>
        }
        @if (HttpContext.Current.User.Identity.IsAuthenticated)
        {
            <div data-goodsid="@Model.ID" class="goods_favorite @(Model.IsUserFavorite == 1 ? "active" : "")">
                <div></div>
                <i class="icon_g_favorite-empty"></i>
            </div>
        }
        <a itemprop="url" title="@Model.NameOrDef" class="goods_caption" href="@Model.FullUrl">@Model.NameOrDef</a>
        <meta content="@Model.NameOrDef" itemprop="name" />

        <div style="clear: both; overflow: hidden">
            <div class="goods_pic">
                <div class="icon_goods @(shopcart.ActiveProducts.Any(z => z.ProductID == Model.ID) ? "goods_in_basket" : "")">@shopcart.ActiveProducts.Where(x => x.ProductID == Model.ID).Sum(x => x.Count)</div>
                <a href="@Model.FullUrl">
                    <img src="@Model.DefaultThumbURL" alt="@Model.DefaultAlt">
                </a>

                @if (Model.Weight.HasValue && Model.Weight.Value > 0)
                {
                    @*<div class="goods_weight"><i class="icon_weight"></i>@Model.Weight.Value.ToString("f2").Replace(".", ",") кг</div>*@
                }
            </div>

            <div class="goods_form">
                <div style="margin-top: 20px">

                    <div class="price @(Model.PriceModule.SitePriceWithoutDiscount > Model.PriceModule.ShopCartPrice ? "color_action" : "color_black")">
                        @if (Model.PriceModule.SitePriceWithoutDiscount > Model.PriceModule.ShopCartPrice)
                        {
                            <del>@Model.PriceModule.SitePriceWithoutDiscount.ToNiceDigit()<span>&nbsp;руб.</span></del>
                            <div itemtype="http://schema.org/Offer" itemscope itemprop="offers">
                                @Model.PriceModule.ShopCartPrice.ToNiceDigit()<span>&nbsp; руб.</span>
                                <meta content="@Model.PriceModule.ShopCartPrice.ToNiceDigit().Replace(" ", "")" itemprop="price">
                                <meta content="RUB" itemprop="priceCurrency">

                            </div>
                        }
                        else
                        {
                            <div itemtype="http://schema.org/Offer" itemscope itemprop="offers">
                                @Model.PriceModule.ShopCartPrice.ToNiceDigit()<span>&nbsp; руб.</span>
                                <meta content="@Model.PriceModule.ShopCartPrice.ToNiceDigit().Replace(" ", "")" itemprop="price">
                                <meta content="RUB" itemprop="priceCurrency">
                            </div>                     
                        }
                    </div>

                    @*
                        <div data-itemid="@Model.ID" class="rating_star small">
                            @for (int i = 5; i >= 1; i--)
                            {
                                <span data-ratingpos="@i" class="@(Math.Round(Model.VoteOverage, 0) >= i ? "selected" : "")"></span>
                            }
                        </div>
                    *@


                </div>

                <div class="el_form-quantity">
                    <a class="el_form small btn disabled bradius_c-r reduce"><i class="icon icon_minus"></i></a>
                    <input type="text" class="el_form small bradius_c-r bradius_c-l" min="1" name="count" value="1">
                    <a class="el_form small btn bradius_c-l increase"><i class="icon icon_plus"></i></a>
                </div>

                <button spec="0" arg="@Model.ID" rel="to-cart" class="el_form small btn @(shopcart.ActiveProducts.Any(z => z.ProductID == Model.ID) ? "btn_orange" : "btn_green") btn_toBasket" type="submit">@(shopcart.ActiveProducts.Any(z => z.ProductID == Model.ID) ? "В корзине" : "Купить")</button>
            </div>

        </div>
        @if (Model.NeedShowArticle)
        {
            <div class="signature text_11" style="margin: 10px 0 10px 3px;">Артикул: @Model.Article</div>
        }

        <div style="margin-top: 8px;">
            @Html.Partial("~/Views/ClientCatalog/Comparator.cshtml", new Comparator(Model.ID))
        </div>
        @if (isFavorite)
        {
            <div class="in_product_control">
                <label class="selector_container">
                    <input type="checkbox" value="@Model.ID" name="cbx_@Model.ID" class="selector"><span>Выбрать</span>
                </label><span class="deleter icon_list_delete" arg="@Model.ID"><span>Удалить</span></span>
            </div>
        }

    </div>
}