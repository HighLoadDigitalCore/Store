#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Smoking.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="boiler-gas.ru")]
	public partial class DB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSiteSetting(SiteSetting instance);
    partial void UpdateSiteSetting(SiteSetting instance);
    partial void DeleteSiteSetting(SiteSetting instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertMembershipData(MembershipData instance);
    partial void UpdateMembershipData(MembershipData instance);
    partial void DeleteMembershipData(MembershipData instance);
    partial void InsertMailingReplacement(MailingReplacement instance);
    partial void UpdateMailingReplacement(MailingReplacement instance);
    partial void DeleteMailingReplacement(MailingReplacement instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertLabelDictionary(LabelDictionary instance);
    partial void UpdateLabelDictionary(LabelDictionary instance);
    partial void DeleteLabelDictionary(LabelDictionary instance);
    partial void InsertLabelDictionaryLang(LabelDictionaryLang instance);
    partial void UpdateLabelDictionaryLang(LabelDictionaryLang instance);
    partial void DeleteLabelDictionaryLang(LabelDictionaryLang instance);
    partial void InsertCMSPageRoleRel(CMSPageRoleRel instance);
    partial void UpdateCMSPageRoleRel(CMSPageRoleRel instance);
    partial void DeleteCMSPageRoleRel(CMSPageRoleRel instance);
    partial void InsertMailingList(MailingList instance);
    partial void UpdateMailingList(MailingList instance);
    partial void DeleteMailingList(MailingList instance);
    partial void InsertLentaComment(LentaComment instance);
    partial void UpdateLentaComment(LentaComment instance);
    partial void DeleteLentaComment(LentaComment instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertCMSPageCellView(CMSPageCellView instance);
    partial void UpdateCMSPageCellView(CMSPageCellView instance);
    partial void DeleteCMSPageCellView(CMSPageCellView instance);
    partial void InsertLenta(Lenta instance);
    partial void UpdateLenta(Lenta instance);
    partial void DeleteLenta(Lenta instance);
    partial void InsertCMSPageCell(CMSPageCell instance);
    partial void UpdateCMSPageCell(CMSPageCell instance);
    partial void DeleteCMSPageCell(CMSPageCell instance);
    partial void InsertCMSPageTextData(CMSPageTextData instance);
    partial void UpdateCMSPageTextData(CMSPageTextData instance);
    partial void DeleteCMSPageTextData(CMSPageTextData instance);
    partial void InsertMapObjectType(MapObjectType instance);
    partial void UpdateMapObjectType(MapObjectType instance);
    partial void DeleteMapObjectType(MapObjectType instance);
    partial void InsertMapObject(MapObject instance);
    partial void UpdateMapObject(MapObject instance);
    partial void DeleteMapObject(MapObject instance);
    partial void InsertMapObjectPhoto(MapObjectPhoto instance);
    partial void UpdateMapObjectPhoto(MapObjectPhoto instance);
    partial void DeleteMapObjectPhoto(MapObjectPhoto instance);
    partial void InsertMapCoord(MapCoord instance);
    partial void UpdateMapCoord(MapCoord instance);
    partial void DeleteMapCoord(MapCoord instance);
    partial void InsertMapObjectFavorite(MapObjectFavorite instance);
    partial void UpdateMapObjectFavorite(MapObjectFavorite instance);
    partial void DeleteMapObjectFavorite(MapObjectFavorite instance);
    partial void InsertMapObjectComment(MapObjectComment instance);
    partial void UpdateMapObjectComment(MapObjectComment instance);
    partial void DeleteMapObjectComment(MapObjectComment instance);
    partial void InsertMapSelect(MapSelect instance);
    partial void UpdateMapSelect(MapSelect instance);
    partial void DeleteMapSelect(MapSelect instance);
    partial void InsertUserFavoriteLenta(UserFavoriteLenta instance);
    partial void UpdateUserFavoriteLenta(UserFavoriteLenta instance);
    partial void DeleteUserFavoriteLenta(UserFavoriteLenta instance);
    partial void InsertUserMessage(UserMessage instance);
    partial void UpdateUserMessage(UserMessage instance);
    partial void DeleteUserMessage(UserMessage instance);
    partial void InsertOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void UpdateOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void DeleteOrderDeliveryGroup(OrderDeliveryGroup instance);
    partial void InsertOrderDeliveryZone(OrderDeliveryZone instance);
    partial void UpdateOrderDeliveryZone(OrderDeliveryZone instance);
    partial void DeleteOrderDeliveryZone(OrderDeliveryZone instance);
    partial void InsertOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void UpdateOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void DeleteOrderDeliveryProvider(OrderDeliveryProvider instance);
    partial void InsertOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void UpdateOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void DeleteOrderDeliveryRegion(OrderDeliveryRegion instance);
    partial void InsertOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void UpdateOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void DeleteOrderDeliveryZoneInterval(OrderDeliveryZoneInterval instance);
    partial void InsertOrderPaymentProvider(OrderPaymentProvider instance);
    partial void UpdateOrderPaymentProvider(OrderPaymentProvider instance);
    partial void DeleteOrderPaymentProvider(OrderPaymentProvider instance);
    partial void InsertOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void UpdateOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void DeleteOrderPaymentDeliveryRel(OrderPaymentDeliveryRel instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertStoreProductsToCategory(StoreProductsToCategory instance);
    partial void UpdateStoreProductsToCategory(StoreProductsToCategory instance);
    partial void DeleteStoreProductsToCategory(StoreProductsToCategory instance);
    partial void InsertOrderComment(OrderComment instance);
    partial void UpdateOrderComment(OrderComment instance);
    partial void DeleteOrderComment(OrderComment instance);
    partial void InsertStorePhoto3D(StorePhoto3D instance);
    partial void UpdateStorePhoto3D(StorePhoto3D instance);
    partial void DeleteStorePhoto3D(StorePhoto3D instance);
    partial void InsertOrderedProduct(OrderedProduct instance);
    partial void UpdateOrderedProduct(OrderedProduct instance);
    partial void DeleteOrderedProduct(OrderedProduct instance);
    partial void InsertPageType(PageType instance);
    partial void UpdatePageType(PageType instance);
    partial void DeletePageType(PageType instance);
    partial void InsertCMSPageTemplate(CMSPageTemplate instance);
    partial void UpdateCMSPageTemplate(CMSPageTemplate instance);
    partial void DeleteCMSPageTemplate(CMSPageTemplate instance);
    partial void InsertEventCalendar(EventCalendar instance);
    partial void UpdateEventCalendar(EventCalendar instance);
    partial void DeleteEventCalendar(EventCalendar instance);
    partial void InsertStoreProductFavorite(StoreProductFavorite instance);
    partial void UpdateStoreProductFavorite(StoreProductFavorite instance);
    partial void DeleteStoreProductFavorite(StoreProductFavorite instance);
    partial void InsertStoreProductComment(StoreProductComment instance);
    partial void UpdateStoreProductComment(StoreProductComment instance);
    partial void DeleteStoreProductComment(StoreProductComment instance);
    partial void InsertCMSPageLang(CMSPageLang instance);
    partial void UpdateCMSPageLang(CMSPageLang instance);
    partial void DeleteCMSPageLang(CMSPageLang instance);
    partial void InsertCommentsRating(CommentsRating instance);
    partial void UpdateCommentsRating(CommentsRating instance);
    partial void DeleteCommentsRating(CommentsRating instance);
    partial void InsertSiteCounter(SiteCounter instance);
    partial void UpdateSiteCounter(SiteCounter instance);
    partial void DeleteSiteCounter(SiteCounter instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertOrderAdress(OrderAdress instance);
    partial void UpdateOrderAdress(OrderAdress instance);
    partial void DeleteOrderAdress(OrderAdress instance);
    partial void InsertStoreCharacterToProduct(StoreCharacterToProduct instance);
    partial void UpdateStoreCharacterToProduct(StoreCharacterToProduct instance);
    partial void DeleteStoreCharacterToProduct(StoreCharacterToProduct instance);
    partial void InsertStoreProductTagRel(StoreProductTagRel instance);
    partial void UpdateStoreProductTagRel(StoreProductTagRel instance);
    partial void DeleteStoreProductTagRel(StoreProductTagRel instance);
    partial void InsertStoreProductTag(StoreProductTag instance);
    partial void UpdateStoreProductTag(StoreProductTag instance);
    partial void DeleteStoreProductTag(StoreProductTag instance);
    partial void InsertStoreProductBlock(StoreProductBlock instance);
    partial void UpdateStoreProductBlock(StoreProductBlock instance);
    partial void DeleteStoreProductBlock(StoreProductBlock instance);
    partial void InsertCMSPageMenuCustom(CMSPageMenuCustom instance);
    partial void UpdateCMSPageMenuCustom(CMSPageMenuCustom instance);
    partial void DeleteCMSPageMenuCustom(CMSPageMenuCustom instance);
    partial void InsertCMSPageTemplateCell(CMSPageTemplateCell instance);
    partial void UpdateCMSPageTemplateCell(CMSPageTemplateCell instance);
    partial void DeleteCMSPageTemplateCell(CMSPageTemplateCell instance);
    partial void InsertTheme(Theme instance);
    partial void UpdateTheme(Theme instance);
    partial void DeleteTheme(Theme instance);
    partial void InsertThemeProperty(ThemeProperty instance);
    partial void UpdateThemeProperty(ThemeProperty instance);
    partial void DeleteThemeProperty(ThemeProperty instance);
    partial void InsertCharAnswerTemplate(CharAnswerTemplate instance);
    partial void UpdateCharAnswerTemplate(CharAnswerTemplate instance);
    partial void DeleteCharAnswerTemplate(CharAnswerTemplate instance);
    partial void InsertStoreCategory(StoreCategory instance);
    partial void UpdateStoreCategory(StoreCategory instance);
    partial void DeleteStoreCategory(StoreCategory instance);
    partial void InsertStoreImporter(StoreImporter instance);
    partial void UpdateStoreImporter(StoreImporter instance);
    partial void DeleteStoreImporter(StoreImporter instance);
    partial void InsertStoreCategoryRelation(StoreCategoryRelation instance);
    partial void UpdateStoreCategoryRelation(StoreCategoryRelation instance);
    partial void DeleteStoreCategoryRelation(StoreCategoryRelation instance);
    partial void InsertStoreProduct(StoreProduct instance);
    partial void UpdateStoreProduct(StoreProduct instance);
    partial void DeleteStoreProduct(StoreProduct instance);
    partial void InsertStoreProductRelation(StoreProductRelation instance);
    partial void UpdateStoreProductRelation(StoreProductRelation instance);
    partial void DeleteStoreProductRelation(StoreProductRelation instance);
    partial void InsertFilter(Filter instance);
    partial void UpdateFilter(Filter instance);
    partial void DeleteFilter(Filter instance);
    partial void InsertAnimeBlockItem(AnimeBlockItem instance);
    partial void UpdateAnimeBlockItem(AnimeBlockItem instance);
    partial void DeleteAnimeBlockItem(AnimeBlockItem instance);
    partial void InsertAnimeBlock(AnimeBlock instance);
    partial void UpdateAnimeBlock(AnimeBlock instance);
    partial void DeleteAnimeBlock(AnimeBlock instance);
    partial void InsertCMSPagePopupData(CMSPagePopupData instance);
    partial void UpdateCMSPagePopupData(CMSPagePopupData instance);
    partial void DeleteCMSPagePopupData(CMSPagePopupData instance);
    partial void InsertStoreProductListImage(StoreProductListImage instance);
    partial void UpdateStoreProductListImage(StoreProductListImage instance);
    partial void DeleteStoreProductListImage(StoreProductListImage instance);
    partial void InsertStoreProductListImageCategory(StoreProductListImageCategory instance);
    partial void UpdateStoreProductListImageCategory(StoreProductListImageCategory instance);
    partial void DeleteStoreProductListImageCategory(StoreProductListImageCategory instance);
    partial void InsertCMSAuthFile(CMSAuthFile instance);
    partial void UpdateCMSAuthFile(CMSAuthFile instance);
    partial void DeleteCMSAuthFile(CMSAuthFile instance);
    partial void InsertCMSPage(CMSPage instance);
    partial void UpdateCMSPage(CMSPage instance);
    partial void DeleteCMSPage(CMSPage instance);
    partial void InsertCMSPageAllowedClientModul(CMSPageAllowedClientModul instance);
    partial void UpdateCMSPageAllowedClientModul(CMSPageAllowedClientModul instance);
    partial void DeleteCMSPageAllowedClientModul(CMSPageAllowedClientModul instance);
    partial void InsertCMSPageSlider(CMSPageSlider instance);
    partial void UpdateCMSPageSlider(CMSPageSlider instance);
    partial void DeleteCMSPageSlider(CMSPageSlider instance);
    partial void InsertCMSPageCellViewSetting(CMSPageCellViewSetting instance);
    partial void UpdateCMSPageCellViewSetting(CMSPageCellViewSetting instance);
    partial void DeleteCMSPageCellViewSetting(CMSPageCellViewSetting instance);
    partial void InsertFilterItem(FilterItem instance);
    partial void UpdateFilterItem(FilterItem instance);
    partial void DeleteFilterItem(FilterItem instance);
    partial void InsertStoreCharacterValue(StoreCharacterValue instance);
    partial void UpdateStoreCharacterValue(StoreCharacterValue instance);
    partial void DeleteStoreCharacterValue(StoreCharacterValue instance);
    partial void InsertShopCart(ShopCart instance);
    partial void UpdateShopCart(ShopCart instance);
    partial void DeleteShopCart(ShopCart instance);
    partial void InsertShopCartItem(ShopCartItem instance);
    partial void UpdateShopCartItem(ShopCartItem instance);
    partial void DeleteShopCartItem(ShopCartItem instance);
    partial void InsertShopCartField(ShopCartField instance);
    partial void UpdateShopCartField(ShopCartField instance);
    partial void DeleteShopCartField(ShopCartField instance);
    partial void InsertStoreFile(StoreFile instance);
    partial void UpdateStoreFile(StoreFile instance);
    partial void DeleteStoreFile(StoreFile instance);
    partial void InsertStoreImage(StoreImage instance);
    partial void UpdateStoreImage(StoreImage instance);
    partial void DeleteStoreImage(StoreImage instance);
    partial void InsertStoreCharacter(StoreCharacter instance);
    partial void UpdateStoreCharacter(StoreCharacter instance);
    partial void DeleteStoreCharacter(StoreCharacter instance);
    partial void InsertCMSPageVideo(CMSPageVideo instance);
    partial void UpdateCMSPageVideo(CMSPageVideo instance);
    partial void DeleteCMSPageVideo(CMSPageVideo instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertUserRate(UserRate instance);
    partial void UpdateUserRate(UserRate instance);
    partial void DeleteUserRate(UserRate instance);
    partial void InsertUserImage(UserImage instance);
    partial void UpdateUserImage(UserImage instance);
    partial void DeleteUserImage(UserImage instance);
    #endregion
		
		public DB() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MsSqlConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SiteSetting> SiteSettings
		{
			get
			{
				return this.GetTable<SiteSetting>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<MembershipData> MembershipDatas
		{
			get
			{
				return this.GetTable<MembershipData>();
			}
		}
		
		public System.Data.Linq.Table<MailingReplacement> MailingReplacements
		{
			get
			{
				return this.GetTable<MailingReplacement>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<LabelDictionary> LabelDictionaries
		{
			get
			{
				return this.GetTable<LabelDictionary>();
			}
		}
		
		public System.Data.Linq.Table<LabelDictionaryLang> LabelDictionaryLangs
		{
			get
			{
				return this.GetTable<LabelDictionaryLang>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageRoleRel> CMSPageRoleRels
		{
			get
			{
				return this.GetTable<CMSPageRoleRel>();
			}
		}
		
		public System.Data.Linq.Table<MailingList> MailingLists
		{
			get
			{
				return this.GetTable<MailingList>();
			}
		}
		
		public System.Data.Linq.Table<LentaComment> LentaComments
		{
			get
			{
				return this.GetTable<LentaComment>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageCellView> CMSPageCellViews
		{
			get
			{
				return this.GetTable<CMSPageCellView>();
			}
		}
		
		public System.Data.Linq.Table<Lenta> Lentas
		{
			get
			{
				return this.GetTable<Lenta>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageCell> CMSPageCells
		{
			get
			{
				return this.GetTable<CMSPageCell>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageTextData> CMSPageTextDatas
		{
			get
			{
				return this.GetTable<CMSPageTextData>();
			}
		}
		
		public System.Data.Linq.Table<MapObjectType> MapObjectTypes
		{
			get
			{
				return this.GetTable<MapObjectType>();
			}
		}
		
		public System.Data.Linq.Table<MapObject> MapObjects
		{
			get
			{
				return this.GetTable<MapObject>();
			}
		}
		
		public System.Data.Linq.Table<MapObjectPhoto> MapObjectPhotos
		{
			get
			{
				return this.GetTable<MapObjectPhoto>();
			}
		}
		
		public System.Data.Linq.Table<MapCoord> MapCoords
		{
			get
			{
				return this.GetTable<MapCoord>();
			}
		}
		
		public System.Data.Linq.Table<MapObjectFavorite> MapObjectFavorites
		{
			get
			{
				return this.GetTable<MapObjectFavorite>();
			}
		}
		
		public System.Data.Linq.Table<MapObjectComment> MapObjectComments
		{
			get
			{
				return this.GetTable<MapObjectComment>();
			}
		}
		
		public System.Data.Linq.Table<MapSelect> MapSelects
		{
			get
			{
				return this.GetTable<MapSelect>();
			}
		}
		
		public System.Data.Linq.Table<UserFavoriteLenta> UserFavoriteLentas
		{
			get
			{
				return this.GetTable<UserFavoriteLenta>();
			}
		}
		
		public System.Data.Linq.Table<UserMessage> UserMessages
		{
			get
			{
				return this.GetTable<UserMessage>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryGroup> OrderDeliveryGroups
		{
			get
			{
				return this.GetTable<OrderDeliveryGroup>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryZone> OrderDeliveryZones
		{
			get
			{
				return this.GetTable<OrderDeliveryZone>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryProvider> OrderDeliveryProviders
		{
			get
			{
				return this.GetTable<OrderDeliveryProvider>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryRegion> OrderDeliveryRegions
		{
			get
			{
				return this.GetTable<OrderDeliveryRegion>();
			}
		}
		
		public System.Data.Linq.Table<OrderDeliveryZoneInterval> OrderDeliveryZoneIntervals
		{
			get
			{
				return this.GetTable<OrderDeliveryZoneInterval>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentProvider> OrderPaymentProviders
		{
			get
			{
				return this.GetTable<OrderPaymentProvider>();
			}
		}
		
		public System.Data.Linq.Table<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this.GetTable<OrderPaymentDeliveryRel>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductsToCategory> StoreProductsToCategories
		{
			get
			{
				return this.GetTable<StoreProductsToCategory>();
			}
		}
		
		public System.Data.Linq.Table<OrderComment> OrderComments
		{
			get
			{
				return this.GetTable<OrderComment>();
			}
		}
		
		public System.Data.Linq.Table<StorePhoto3D> StorePhoto3Ds
		{
			get
			{
				return this.GetTable<StorePhoto3D>();
			}
		}
		
		public System.Data.Linq.Table<OrderedProduct> OrderedProducts
		{
			get
			{
				return this.GetTable<OrderedProduct>();
			}
		}
		
		public System.Data.Linq.Table<PageType> PageTypes
		{
			get
			{
				return this.GetTable<PageType>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageTemplate> CMSPageTemplates
		{
			get
			{
				return this.GetTable<CMSPageTemplate>();
			}
		}
		
		public System.Data.Linq.Table<EventCalendar> EventCalendars
		{
			get
			{
				return this.GetTable<EventCalendar>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductFavorite> StoreProductFavorites
		{
			get
			{
				return this.GetTable<StoreProductFavorite>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductComment> StoreProductComments
		{
			get
			{
				return this.GetTable<StoreProductComment>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageLang> CMSPageLangs
		{
			get
			{
				return this.GetTable<CMSPageLang>();
			}
		}
		
		public System.Data.Linq.Table<CommentsRating> CommentsRatings
		{
			get
			{
				return this.GetTable<CommentsRating>();
			}
		}
		
		public System.Data.Linq.Table<SiteCounter> SiteCounters
		{
			get
			{
				return this.GetTable<SiteCounter>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<OrderAdress> OrderAdresses
		{
			get
			{
				return this.GetTable<OrderAdress>();
			}
		}
		
		public System.Data.Linq.Table<StoreCharacterToProduct> StoreCharacterToProducts
		{
			get
			{
				return this.GetTable<StoreCharacterToProduct>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductTagRel> StoreProductTagRels
		{
			get
			{
				return this.GetTable<StoreProductTagRel>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductTag> StoreProductTags
		{
			get
			{
				return this.GetTable<StoreProductTag>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductBlock> StoreProductBlocks
		{
			get
			{
				return this.GetTable<StoreProductBlock>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageMenuCustom> CMSPageMenuCustoms
		{
			get
			{
				return this.GetTable<CMSPageMenuCustom>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageTemplateCell> CMSPageTemplateCells
		{
			get
			{
				return this.GetTable<CMSPageTemplateCell>();
			}
		}
		
		public System.Data.Linq.Table<Theme> Themes
		{
			get
			{
				return this.GetTable<Theme>();
			}
		}
		
		public System.Data.Linq.Table<ThemeProperty> ThemeProperties
		{
			get
			{
				return this.GetTable<ThemeProperty>();
			}
		}
		
		public System.Data.Linq.Table<CharAnswerTemplate> CharAnswerTemplates
		{
			get
			{
				return this.GetTable<CharAnswerTemplate>();
			}
		}
		
		public System.Data.Linq.Table<StoreCategory> StoreCategories
		{
			get
			{
				return this.GetTable<StoreCategory>();
			}
		}
		
		public System.Data.Linq.Table<StoreImporter> StoreImporters
		{
			get
			{
				return this.GetTable<StoreImporter>();
			}
		}
		
		public System.Data.Linq.Table<StoreCategoryRelation> StoreCategoryRelations
		{
			get
			{
				return this.GetTable<StoreCategoryRelation>();
			}
		}
		
		public System.Data.Linq.Table<StoreProduct> StoreProducts
		{
			get
			{
				return this.GetTable<StoreProduct>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductRelation> StoreProductRelations
		{
			get
			{
				return this.GetTable<StoreProductRelation>();
			}
		}
		
		public System.Data.Linq.Table<Filter> Filters
		{
			get
			{
				return this.GetTable<Filter>();
			}
		}
		
		public System.Data.Linq.Table<AnimeBlockItem> AnimeBlockItems
		{
			get
			{
				return this.GetTable<AnimeBlockItem>();
			}
		}
		
		public System.Data.Linq.Table<AnimeBlock> AnimeBlocks
		{
			get
			{
				return this.GetTable<AnimeBlock>();
			}
		}
		
		public System.Data.Linq.Table<CMSPagePopupData> CMSPagePopupDatas
		{
			get
			{
				return this.GetTable<CMSPagePopupData>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductListImage> StoreProductListImages
		{
			get
			{
				return this.GetTable<StoreProductListImage>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductListImageCategory> StoreProductListImageCategories
		{
			get
			{
				return this.GetTable<StoreProductListImageCategory>();
			}
		}
		
		public System.Data.Linq.Table<CMSAuthFile> CMSAuthFiles
		{
			get
			{
				return this.GetTable<CMSAuthFile>();
			}
		}
		
		public System.Data.Linq.Table<CMSPage> CMSPages
		{
			get
			{
				return this.GetTable<CMSPage>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageAllowedClientModul> CMSPageAllowedClientModuls
		{
			get
			{
				return this.GetTable<CMSPageAllowedClientModul>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this.GetTable<CMSPageSlider>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageCellViewSetting> CMSPageCellViewSettings
		{
			get
			{
				return this.GetTable<CMSPageCellViewSetting>();
			}
		}
		
		public System.Data.Linq.Table<FilterItem> FilterItems
		{
			get
			{
				return this.GetTable<FilterItem>();
			}
		}
		
		public System.Data.Linq.Table<StoreCharacterValue> StoreCharacterValues
		{
			get
			{
				return this.GetTable<StoreCharacterValue>();
			}
		}
		
		public System.Data.Linq.Table<ShopCart> ShopCarts
		{
			get
			{
				return this.GetTable<ShopCart>();
			}
		}
		
		public System.Data.Linq.Table<ShopCartItem> ShopCartItems
		{
			get
			{
				return this.GetTable<ShopCartItem>();
			}
		}
		
		public System.Data.Linq.Table<ShopCartField> ShopCartFields
		{
			get
			{
				return this.GetTable<ShopCartField>();
			}
		}
		
		public System.Data.Linq.Table<StoreFile> StoreFiles
		{
			get
			{
				return this.GetTable<StoreFile>();
			}
		}
		
		public System.Data.Linq.Table<StoreImage> StoreImages
		{
			get
			{
				return this.GetTable<StoreImage>();
			}
		}
		
		public System.Data.Linq.Table<StoreCharacter> StoreCharacters
		{
			get
			{
				return this.GetTable<StoreCharacter>();
			}
		}
		
		public System.Data.Linq.Table<CMSPageVideo> CMSPageVideos
		{
			get
			{
				return this.GetTable<CMSPageVideo>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<UserRate> UserRates
		{
			get
			{
				return this.GetTable<UserRate>();
			}
		}
		
		public System.Data.Linq.Table<UserImage> UserImages
		{
			get
			{
				return this.GetTable<UserImage>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getIntListByJoinedString", IsComposable=true)]
		public IQueryable<getIntListByJoinedStringResult> getIntListByJoinedString([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RowData", DbType="NVarChar(MAX)")] string rowData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SplitOn", DbType="NVarChar(5)")] string splitOn)
		{
			return this.CreateMethodCallQuery<getIntListByJoinedStringResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rowData, splitOn);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ToDecimal", IsComposable=true)]
		public System.Nullable<decimal> ToDecimal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string p)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fSearch", IsComposable=true)]
		public IQueryable<fSearchResult> fSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string word, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> limit)
		{
			return this.CreateMethodCallQuery<fSearchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word, limit);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getPageList", IsComposable=true)]
		public IQueryable<getPageListResult> getPageList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(400)")] string parentURL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lid)
		{
			return this.CreateMethodCallQuery<getPageListResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentURL, lid);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteSettings")]
	public partial class SiteSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Setting;
		
		private string _Value;
		
		private string _Title;
		
		private int _OrderNum;
		
		private string _Editor;
		
		private string _ObjectType;
		
		private string _GroupName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSettingChanging(string value);
    partial void OnSettingChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public SiteSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setting", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Setting
		{
			get
			{
				return this._Setting;
			}
			set
			{
				if ((this._Setting != value))
				{
					this.OnSettingChanging(value);
					this.SendPropertyChanging();
					this._Setting = value;
					this.SendPropertyChanged("Setting");
					this.OnSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="NVarChar(50)")]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<MembershipData> _MembershipData;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<MapObject> _MapObjects;
		
		private EntitySet<MapObjectFavorite> _MapObjectFavorites;
		
		private EntitySet<UserFavoriteLenta> _UserFavoriteLentas;
		
		private EntitySet<UserMessage> _UserMessages;
		
		private EntitySet<UserMessage> _UserMessages1;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<StoreProductFavorite> _StoreProductFavorites;
		
		private EntitySet<CommentsRating> _CommentsRatings;
		
		private EntitySet<OrderAdress> _OrderAdresses;
		
		private EntitySet<ShopCart> _ShopCarts;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntitySet<UserRate> _UserRates;
		
		private EntitySet<UserImage> _UserImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._MembershipData = default(EntityRef<MembershipData>);
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._MapObjects = new EntitySet<MapObject>(new Action<MapObject>(this.attach_MapObjects), new Action<MapObject>(this.detach_MapObjects));
			this._MapObjectFavorites = new EntitySet<MapObjectFavorite>(new Action<MapObjectFavorite>(this.attach_MapObjectFavorites), new Action<MapObjectFavorite>(this.detach_MapObjectFavorites));
			this._UserFavoriteLentas = new EntitySet<UserFavoriteLenta>(new Action<UserFavoriteLenta>(this.attach_UserFavoriteLentas), new Action<UserFavoriteLenta>(this.detach_UserFavoriteLentas));
			this._UserMessages = new EntitySet<UserMessage>(new Action<UserMessage>(this.attach_UserMessages), new Action<UserMessage>(this.detach_UserMessages));
			this._UserMessages1 = new EntitySet<UserMessage>(new Action<UserMessage>(this.attach_UserMessages1), new Action<UserMessage>(this.detach_UserMessages1));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._StoreProductFavorites = new EntitySet<StoreProductFavorite>(new Action<StoreProductFavorite>(this.attach_StoreProductFavorites), new Action<StoreProductFavorite>(this.detach_StoreProductFavorites));
			this._CommentsRatings = new EntitySet<CommentsRating>(new Action<CommentsRating>(this.attach_CommentsRatings), new Action<CommentsRating>(this.detach_CommentsRatings));
			this._OrderAdresses = new EntitySet<OrderAdress>(new Action<OrderAdress>(this.attach_OrderAdresses), new Action<OrderAdress>(this.detach_OrderAdresses));
			this._ShopCarts = new EntitySet<ShopCart>(new Action<ShopCart>(this.attach_ShopCarts), new Action<ShopCart>(this.detach_ShopCarts));
			this._UserProfile = default(EntityRef<UserProfile>);
			this._UserRates = new EntitySet<UserRate>(new Action<UserRate>(this.attach_UserRates), new Action<UserRate>(this.detach_UserRates));
			this._UserImages = new EntitySet<UserImage>(new Action<UserImage>(this.attach_UserImages), new Action<UserImage>(this.detach_UserImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipData", Storage="_MembershipData", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipData MembershipData
		{
			get
			{
				return this._MembershipData.Entity;
			}
			set
			{
				MembershipData previousValue = this._MembershipData.Entity;
				if (((previousValue != value) 
							|| (this._MembershipData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipData.Entity = null;
						previousValue.User = null;
					}
					this._MembershipData.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("MembershipData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MapObject", Storage="_MapObjects", ThisKey="UserId", OtherKey="CreatorID")]
		public EntitySet<MapObject> MapObjects
		{
			get
			{
				return this._MapObjects;
			}
			set
			{
				this._MapObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MapObjectFavorite", Storage="_MapObjectFavorites", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<MapObjectFavorite> MapObjectFavorites
		{
			get
			{
				return this._MapObjectFavorites;
			}
			set
			{
				this._MapObjectFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteLenta", Storage="_UserFavoriteLentas", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<UserFavoriteLenta> UserFavoriteLentas
		{
			get
			{
				return this._UserFavoriteLentas;
			}
			set
			{
				this._UserFavoriteLentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMessage", Storage="_UserMessages", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<UserMessage> IncomingMessages
		{
			get
			{
				return this._UserMessages;
			}
			set
			{
				this._UserMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMessage1", Storage="_UserMessages1", ThisKey="UserId", OtherKey="Sender")]
		public EntitySet<UserMessage> OutcomingMessages
		{
			get
			{
				return this._UserMessages1;
			}
			set
			{
				this._UserMessages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreProductFavorite", Storage="_StoreProductFavorites", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<StoreProductFavorite> StoreProductFavorites
		{
			get
			{
				return this._StoreProductFavorites;
			}
			set
			{
				this._StoreProductFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentsRating", Storage="_CommentsRatings", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<CommentsRating> CommentsRatings
		{
			get
			{
				return this._CommentsRatings;
			}
			set
			{
				this._CommentsRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OrderAdress", Storage="_OrderAdresses", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<OrderAdress> OrderAdresses
		{
			get
			{
				return this._OrderAdresses;
			}
			set
			{
				this._OrderAdresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShopCart", Storage="_ShopCarts", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<ShopCart> ShopCarts
		{
			get
			{
				return this._ShopCarts;
			}
			set
			{
				this._ShopCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.User = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRate", Storage="_UserRates", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<UserRate> UserRates
		{
			get
			{
				return this._UserRates;
			}
			set
			{
				this._UserRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserImage", Storage="_UserImages", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<UserImage> UserImages
		{
			get
			{
				return this._UserImages;
			}
			set
			{
				this._UserImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MapObjects(MapObject entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MapObjects(MapObject entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MapObjectFavorites(MapObjectFavorite entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MapObjectFavorites(MapObjectFavorite entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserFavoriteLentas(UserFavoriteLenta entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserFavoriteLentas(UserFavoriteLenta entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserMessages(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Recipient = this;
		}
		
		private void detach_UserMessages(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Recipient = null;
		}
		
		private void attach_UserMessages1(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Poster = this;
		}
		
		private void detach_UserMessages1(UserMessage entity)
		{
			this.SendPropertyChanging();
			entity.Poster = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StoreProductFavorites(StoreProductFavorite entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StoreProductFavorites(StoreProductFavorite entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommentsRatings(CommentsRating entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommentsRatings(CommentsRating entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_OrderAdresses(OrderAdress entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_OrderAdresses(OrderAdress entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ShopCarts(ShopCart entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ShopCarts(ShopCart entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRates(UserRate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRates(UserRate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserImages(UserImage entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserImages(UserImage entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._User = default(EntityRef<User>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntitySet<CMSPageRoleRel> _CMSPageRoleRels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._CMSPageRoleRels = new EntitySet<CMSPageRoleRel>(new Action<CMSPageRoleRel>(this.attach_CMSPageRoleRels), new Action<CMSPageRoleRel>(this.detach_CMSPageRoleRels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_CMSPageRoleRel", Storage="_CMSPageRoleRels", ThisKey="RoleId", OtherKey="RoleID")]
		public EntitySet<CMSPageRoleRel> CMSPageRoleRels
		{
			get
			{
				return this._CMSPageRoleRels;
			}
			set
			{
				this._CMSPageRoleRels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_CMSPageRoleRels(CMSPageRoleRel entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_CMSPageRoleRels(CMSPageRoleRel entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class MembershipData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public MembershipData()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipData", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MembershipData = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MembershipData = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailingReplacements")]
	public partial class MailingReplacement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Replacement;
		
		private string _Description;
		
		private int _MailingID;
		
		private EntityRef<MailingList> _MailingList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReplacementChanging(string value);
    partial void OnReplacementChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMailingIDChanging(int value);
    partial void OnMailingIDChanged();
    #endregion
		
		public MailingReplacement()
		{
			this._MailingList = default(EntityRef<MailingList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Replacement", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Replacement
		{
			get
			{
				return this._Replacement;
			}
			set
			{
				if ((this._Replacement != value))
				{
					this.OnReplacementChanging(value);
					this.SendPropertyChanging();
					this._Replacement = value;
					this.SendPropertyChanged("Replacement");
					this.OnReplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingID", DbType="Int NOT NULL")]
		public int MailingID
		{
			get
			{
				return this._MailingID;
			}
			set
			{
				if ((this._MailingID != value))
				{
					if (this._MailingList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailingIDChanging(value);
					this.SendPropertyChanging();
					this._MailingID = value;
					this.SendPropertyChanged("MailingID");
					this.OnMailingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailingList_MailingReplacement", Storage="_MailingList", ThisKey="MailingID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MailingList MailingList
		{
			get
			{
				return this._MailingList.Entity;
			}
			set
			{
				MailingList previousValue = this._MailingList.Entity;
				if (((previousValue != value) 
							|| (this._MailingList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MailingList.Entity = null;
						previousValue.MailingReplacements.Remove(this);
					}
					this._MailingList.Entity = value;
					if ((value != null))
					{
						value.MailingReplacements.Add(this);
						this._MailingID = value.ID;
					}
					else
					{
						this._MailingID = default(int);
					}
					this.SendPropertyChanged("MailingList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ShortName;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Icon;
		
		private bool _Enabled;
		
		private bool _ByDef;
		
		private int _Ordernum;
		
		private EntitySet<LabelDictionaryLang> _LabelDictionaryLangs;
		
		private EntitySet<CMSPageTextData> _CMSPageTextDatas;
		
		private EntitySet<CMSPageLang> _CMSPageLangs;
		
		private EntitySet<CMSPagePopupData> _CMSPagePopupDatas;
		
		private EntitySet<CMSPageSlider> _CMSPageSliders;
		
		private EntitySet<CMSPageVideo> _CMSPageVideos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(System.Data.Linq.Binary value);
    partial void OnIconChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnByDefChanging(bool value);
    partial void OnByDefChanged();
    partial void OnOrdernumChanging(int value);
    partial void OnOrdernumChanged();
    #endregion
		
		public Language()
		{
			this._LabelDictionaryLangs = new EntitySet<LabelDictionaryLang>(new Action<LabelDictionaryLang>(this.attach_LabelDictionaryLangs), new Action<LabelDictionaryLang>(this.detach_LabelDictionaryLangs));
			this._CMSPageTextDatas = new EntitySet<CMSPageTextData>(new Action<CMSPageTextData>(this.attach_CMSPageTextDatas), new Action<CMSPageTextData>(this.detach_CMSPageTextDatas));
			this._CMSPageLangs = new EntitySet<CMSPageLang>(new Action<CMSPageLang>(this.attach_CMSPageLangs), new Action<CMSPageLang>(this.detach_CMSPageLangs));
			this._CMSPagePopupDatas = new EntitySet<CMSPagePopupData>(new Action<CMSPagePopupData>(this.attach_CMSPagePopupDatas), new Action<CMSPagePopupData>(this.detach_CMSPagePopupDatas));
			this._CMSPageSliders = new EntitySet<CMSPageSlider>(new Action<CMSPageSlider>(this.attach_CMSPageSliders), new Action<CMSPageSlider>(this.detach_CMSPageSliders));
			this._CMSPageVideos = new EntitySet<CMSPageVideo>(new Action<CMSPageVideo>(this.attach_CMSPageVideos), new Action<CMSPageVideo>(this.detach_CMSPageVideos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ByDef", DbType="Bit NOT NULL")]
		public bool ByDef
		{
			get
			{
				return this._ByDef;
			}
			set
			{
				if ((this._ByDef != value))
				{
					this.OnByDefChanging(value);
					this.SendPropertyChanging();
					this._ByDef = value;
					this.SendPropertyChanged("ByDef");
					this.OnByDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordernum", DbType="Int NOT NULL")]
		public int Ordernum
		{
			get
			{
				return this._Ordernum;
			}
			set
			{
				if ((this._Ordernum != value))
				{
					this.OnOrdernumChanging(value);
					this.SendPropertyChanging();
					this._Ordernum = value;
					this.SendPropertyChanged("Ordernum");
					this.OnOrdernumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_LabelDictionaryLang", Storage="_LabelDictionaryLangs", ThisKey="ID", OtherKey="LanguageID")]
		public EntitySet<LabelDictionaryLang> LabelDictionaryLangs
		{
			get
			{
				return this._LabelDictionaryLangs;
			}
			set
			{
				this._LabelDictionaryLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageTextData", Storage="_CMSPageTextDatas", ThisKey="ID", OtherKey="LangID")]
		public EntitySet<CMSPageTextData> CMSPageTextDatas
		{
			get
			{
				return this._CMSPageTextDatas;
			}
			set
			{
				this._CMSPageTextDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageLang", Storage="_CMSPageLangs", ThisKey="ID", OtherKey="LanguageID")]
		public EntitySet<CMSPageLang> CMSPageLangs
		{
			get
			{
				return this._CMSPageLangs;
			}
			set
			{
				this._CMSPageLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPagePopupData", Storage="_CMSPagePopupDatas", ThisKey="ID", OtherKey="LangID")]
		public EntitySet<CMSPagePopupData> CMSPagePopupDatas
		{
			get
			{
				return this._CMSPagePopupDatas;
			}
			set
			{
				this._CMSPagePopupDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageSlider", Storage="_CMSPageSliders", ThisKey="ID", OtherKey="LangID")]
		public EntitySet<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this._CMSPageSliders;
			}
			set
			{
				this._CMSPageSliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageVideo", Storage="_CMSPageVideos", ThisKey="ID", OtherKey="LangID")]
		public EntitySet<CMSPageVideo> CMSPageVideos
		{
			get
			{
				return this._CMSPageVideos;
			}
			set
			{
				this._CMSPageVideos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabelDictionaryLangs(LabelDictionaryLang entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_LabelDictionaryLangs(LabelDictionaryLang entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CMSPageLangs(CMSPageLang entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CMSPageLangs(CMSPageLang entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CMSPagePopupDatas(CMSPagePopupData entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CMSPagePopupDatas(CMSPagePopupData entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
		
		private void attach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabelDictionary")]
	public partial class LabelDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TextKey;
		
		private EntitySet<LabelDictionaryLang> _LabelDictionaryLangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextKeyChanging(string value);
    partial void OnTextKeyChanged();
    #endregion
		
		public LabelDictionary()
		{
			this._LabelDictionaryLangs = new EntitySet<LabelDictionaryLang>(new Action<LabelDictionaryLang>(this.attach_LabelDictionaryLangs), new Action<LabelDictionaryLang>(this.detach_LabelDictionaryLangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextKey", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string TextKey
		{
			get
			{
				return this._TextKey;
			}
			set
			{
				if ((this._TextKey != value))
				{
					this.OnTextKeyChanging(value);
					this.SendPropertyChanging();
					this._TextKey = value;
					this.SendPropertyChanged("TextKey");
					this.OnTextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabelDictionary_LabelDictionaryLang", Storage="_LabelDictionaryLangs", ThisKey="ID", OtherKey="LabelID")]
		public EntitySet<LabelDictionaryLang> LabelDictionaryLangs
		{
			get
			{
				return this._LabelDictionaryLangs;
			}
			set
			{
				this._LabelDictionaryLangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabelDictionaryLangs(LabelDictionaryLang entity)
		{
			this.SendPropertyChanging();
			entity.LabelDictionary = this;
		}
		
		private void detach_LabelDictionaryLangs(LabelDictionaryLang entity)
		{
			this.SendPropertyChanging();
			entity.LabelDictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabelDictionaryLangs")]
	public partial class LabelDictionaryLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TranslatedLabel;
		
		private int _LabelID;
		
		private int _LanguageID;
		
		private EntityRef<LabelDictionary> _LabelDictionary;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTranslatedLabelChanging(string value);
    partial void OnTranslatedLabelChanged();
    partial void OnLabelIDChanging(int value);
    partial void OnLabelIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    #endregion
		
		public LabelDictionaryLang()
		{
			this._LabelDictionary = default(EntityRef<LabelDictionary>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranslatedLabel", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string TranslatedLabel
		{
			get
			{
				return this._TranslatedLabel;
			}
			set
			{
				if ((this._TranslatedLabel != value))
				{
					this.OnTranslatedLabelChanging(value);
					this.SendPropertyChanging();
					this._TranslatedLabel = value;
					this.SendPropertyChanged("TranslatedLabel");
					this.OnTranslatedLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelID", DbType="Int NOT NULL")]
		public int LabelID
		{
			get
			{
				return this._LabelID;
			}
			set
			{
				if ((this._LabelID != value))
				{
					if (this._LabelDictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabelIDChanging(value);
					this.SendPropertyChanging();
					this._LabelID = value;
					this.SendPropertyChanged("LabelID");
					this.OnLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabelDictionary_LabelDictionaryLang", Storage="_LabelDictionary", ThisKey="LabelID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LabelDictionary LabelDictionary
		{
			get
			{
				return this._LabelDictionary.Entity;
			}
			set
			{
				LabelDictionary previousValue = this._LabelDictionary.Entity;
				if (((previousValue != value) 
							|| (this._LabelDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabelDictionary.Entity = null;
						previousValue.LabelDictionaryLangs.Remove(this);
					}
					this._LabelDictionary.Entity = value;
					if ((value != null))
					{
						value.LabelDictionaryLangs.Add(this);
						this._LabelID = value.ID;
					}
					else
					{
						this._LabelID = default(int);
					}
					this.SendPropertyChanged("LabelDictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_LabelDictionaryLang", Storage="_Language", ThisKey="LanguageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.LabelDictionaryLangs.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.LabelDictionaryLangs.Add(this);
						this._LanguageID = value.ID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageRoleRels")]
	public partial class CMSPageRoleRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PageID;
		
		private System.Nullable<System.Guid> _RoleID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnRoleIDChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIDChanged();
    #endregion
		
		public CMSPageRoleRel()
		{
			this._Role = default(EntityRef<Role>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_CMSPageRoleRel", Storage="_Role", ThisKey="RoleID", OtherKey="RoleId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.CMSPageRoleRels.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.CMSPageRoleRels.Add(this);
						this._RoleID = value.RoleId;
					}
					else
					{
						this._RoleID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageRoleRel", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.CMSPageRoleRels.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.CMSPageRoleRels.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailingList")]
	public partial class MailingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Header;
		
		private string _Letter;
		
		private string _LetterKey;
		
		private string _Name;
		
		private bool _IsForAdmin;
		
		private string _TargetMail;
		
		private bool _Enabled;
		
		private EntitySet<MailingReplacement> _MailingReplacements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnLetterChanging(string value);
    partial void OnLetterChanged();
    partial void OnLetterKeyChanging(string value);
    partial void OnLetterKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsForAdminChanging(bool value);
    partial void OnIsForAdminChanged();
    partial void OnTargetMailChanging(string value);
    partial void OnTargetMailChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public MailingList()
		{
			this._MailingReplacements = new EntitySet<MailingReplacement>(new Action<MailingReplacement>(this.attach_MailingReplacements), new Action<MailingReplacement>(this.detach_MailingReplacements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Letter", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Letter
		{
			get
			{
				return this._Letter;
			}
			set
			{
				if ((this._Letter != value))
				{
					this.OnLetterChanging(value);
					this.SendPropertyChanging();
					this._Letter = value;
					this.SendPropertyChanged("Letter");
					this.OnLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LetterKey
		{
			get
			{
				return this._LetterKey;
			}
			set
			{
				if ((this._LetterKey != value))
				{
					this.OnLetterKeyChanging(value);
					this.SendPropertyChanging();
					this._LetterKey = value;
					this.SendPropertyChanged("LetterKey");
					this.OnLetterKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForAdmin", DbType="Bit NOT NULL")]
		public bool IsForAdmin
		{
			get
			{
				return this._IsForAdmin;
			}
			set
			{
				if ((this._IsForAdmin != value))
				{
					this.OnIsForAdminChanging(value);
					this.SendPropertyChanging();
					this._IsForAdmin = value;
					this.SendPropertyChanged("IsForAdmin");
					this.OnIsForAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetMail", DbType="NVarChar(1000)")]
		public string TargetMail
		{
			get
			{
				return this._TargetMail;
			}
			set
			{
				if ((this._TargetMail != value))
				{
					this.OnTargetMailChanging(value);
					this.SendPropertyChanging();
					this._TargetMail = value;
					this.SendPropertyChanged("TargetMail");
					this.OnTargetMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailingList_MailingReplacement", Storage="_MailingReplacements", ThisKey="ID", OtherKey="MailingID")]
		public EntitySet<MailingReplacement> MailingReplacements
		{
			get
			{
				return this._MailingReplacements;
			}
			set
			{
				this._MailingReplacements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MailingReplacements(MailingReplacement entity)
		{
			this.SendPropertyChanging();
			entity.MailingList = this;
		}
		
		private void detach_MailingReplacements(MailingReplacement entity)
		{
			this.SendPropertyChanging();
			entity.MailingList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LentaComments")]
	public partial class LentaComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CommentID;
		
		private int _LentaID;
		
		private EntityRef<Comment> _Comment;
		
		private EntityRef<Lenta> _Lenta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnLentaIDChanging(int value);
    partial void OnLentaIDChanged();
    #endregion
		
		public LentaComment()
		{
			this._Comment = default(EntityRef<Comment>);
			this._Lenta = default(EntityRef<Lenta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="Int NOT NULL")]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LentaID", DbType="Int NOT NULL")]
		public int LentaID
		{
			get
			{
				return this._LentaID;
			}
			set
			{
				if ((this._LentaID != value))
				{
					if (this._Lenta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLentaIDChanging(value);
					this.SendPropertyChanging();
					this._LentaID = value;
					this.SendPropertyChanged("LentaID");
					this.OnLentaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_LentaComment", Storage="_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.LentaComments.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.LentaComments.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(int);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lenta_LentaComment", Storage="_Lenta", ThisKey="LentaID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Lenta Lenta
		{
			get
			{
				return this._Lenta.Entity;
			}
			set
			{
				Lenta previousValue = this._Lenta.Entity;
				if (((previousValue != value) 
							|| (this._Lenta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lenta.Entity = null;
						previousValue.LentaComments.Remove(this);
					}
					this._Lenta.Entity = value;
					if ((value != null))
					{
						value.LentaComments.Add(this);
						this._LentaID = value.ID;
					}
					else
					{
						this._LentaID = default(int);
					}
					this.SendPropertyChanged("Lenta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private string _CommentText;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _ParentCommentID;
		
		private EntitySet<LentaComment> _LentaComments;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<MapObjectComment> _MapObjectComments;
		
		private EntitySet<StoreProductComment> _StoreProductComments;
		
		private EntitySet<CommentsRating> _CommentsRatings;
		
		private EntityRef<User> _User;
		
		private EntityRef<Comment> _Comment2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnParentCommentIDChanging(System.Nullable<int> value);
    partial void OnParentCommentIDChanged();
    #endregion
		
		public Comment()
		{
			this._LentaComments = new EntitySet<LentaComment>(new Action<LentaComment>(this.attach_LentaComments), new Action<LentaComment>(this.detach_LentaComments));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._MapObjectComments = new EntitySet<MapObjectComment>(new Action<MapObjectComment>(this.attach_MapObjectComments), new Action<MapObjectComment>(this.detach_MapObjectComments));
			this._StoreProductComments = new EntitySet<StoreProductComment>(new Action<StoreProductComment>(this.attach_StoreProductComments), new Action<StoreProductComment>(this.detach_StoreProductComments));
			this._CommentsRatings = new EntitySet<CommentsRating>(new Action<CommentsRating>(this.attach_CommentsRatings), new Action<CommentsRating>(this.detach_CommentsRatings));
			this._User = default(EntityRef<User>);
			this._Comment2 = default(EntityRef<Comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Comment", Storage="_CommentText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCommentID", DbType="Int")]
		public System.Nullable<int> ParentCommentID
		{
			get
			{
				return this._ParentCommentID;
			}
			set
			{
				if ((this._ParentCommentID != value))
				{
					if (this._Comment2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCommentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCommentID = value;
					this.SendPropertyChanged("ParentCommentID");
					this.OnParentCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_LentaComment", Storage="_LentaComments", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<LentaComment> LentaComments
		{
			get
			{
				return this._LentaComments;
			}
			set
			{
				this._LentaComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comments", ThisKey="ID", OtherKey="ParentCommentID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_MapObjectComment", Storage="_MapObjectComments", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<MapObjectComment> MapObjectComments
		{
			get
			{
				return this._MapObjectComments;
			}
			set
			{
				this._MapObjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_StoreProductComment", Storage="_StoreProductComments", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<StoreProductComment> StoreProductComments
		{
			get
			{
				return this._StoreProductComments;
			}
			set
			{
				this._StoreProductComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_CommentsRating", Storage="_CommentsRatings", ThisKey="ID", OtherKey="CommentID")]
		public EntitySet<CommentsRating> CommentsRatings
		{
			get
			{
				return this._CommentsRatings;
			}
			set
			{
				this._CommentsRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comment2", ThisKey="ParentCommentID", OtherKey="ID", IsForeignKey=true)]
		public Comment Comment2
		{
			get
			{
				return this._Comment2.Entity;
			}
			set
			{
				Comment previousValue = this._Comment2.Entity;
				if (((previousValue != value) 
							|| (this._Comment2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment2.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Comment2.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._ParentCommentID = value.ID;
					}
					else
					{
						this._ParentCommentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comment2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LentaComments(LentaComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_LentaComments(LentaComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment2 = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment2 = null;
		}
		
		private void attach_MapObjectComments(MapObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_MapObjectComments(MapObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
		
		private void attach_StoreProductComments(StoreProductComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_StoreProductComments(StoreProductComment entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
		
		private void attach_CommentsRatings(CommentsRating entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_CommentsRatings(CommentsRating entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageCellView")]
	public partial class CMSPageCellView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CellID;
		
		private string _Controller;
		
		private string _Action;
		
		private int _OrderNum;
		
		private string _Path;
		
		private System.Nullable<int> _PageID;
		
		private EntitySet<CMSPageTextData> _CMSPageTextDatas;
		
		private EntitySet<CMSPagePopupData> _CMSPagePopupDatas;
		
		private EntitySet<CMSPageSlider> _CMSPageSliders;
		
		private EntitySet<CMSPageCellViewSetting> _CMSPageCellViewSettings;
		
		private EntitySet<CMSPageVideo> _CMSPageVideos;
		
		private EntityRef<CMSPageCell> _CMSPageCell;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCellIDChanging(int value);
    partial void OnCellIDChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    #endregion
		
		public CMSPageCellView()
		{
			this._CMSPageTextDatas = new EntitySet<CMSPageTextData>(new Action<CMSPageTextData>(this.attach_CMSPageTextDatas), new Action<CMSPageTextData>(this.detach_CMSPageTextDatas));
			this._CMSPagePopupDatas = new EntitySet<CMSPagePopupData>(new Action<CMSPagePopupData>(this.attach_CMSPagePopupDatas), new Action<CMSPagePopupData>(this.detach_CMSPagePopupDatas));
			this._CMSPageSliders = new EntitySet<CMSPageSlider>(new Action<CMSPageSlider>(this.attach_CMSPageSliders), new Action<CMSPageSlider>(this.detach_CMSPageSliders));
			this._CMSPageCellViewSettings = new EntitySet<CMSPageCellViewSetting>(new Action<CMSPageCellViewSetting>(this.attach_CMSPageCellViewSettings), new Action<CMSPageCellViewSetting>(this.detach_CMSPageCellViewSettings));
			this._CMSPageVideos = new EntitySet<CMSPageVideo>(new Action<CMSPageVideo>(this.attach_CMSPageVideos), new Action<CMSPageVideo>(this.detach_CMSPageVideos));
			this._CMSPageCell = default(EntityRef<CMSPageCell>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellID", DbType="Int NOT NULL")]
		public int CellID
		{
			get
			{
				return this._CellID;
			}
			set
			{
				if ((this._CellID != value))
				{
					if (this._CMSPageCell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCellIDChanging(value);
					this.SendPropertyChanging();
					this._CellID = value;
					this.SendPropertyChanged("CellID");
					this.OnCellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NULL")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageTextData", Storage="_CMSPageTextDatas", ThisKey="ID", OtherKey="ViewID")]
		public EntitySet<CMSPageTextData> CMSPageTextDatas
		{
			get
			{
				return this._CMSPageTextDatas;
			}
			set
			{
				this._CMSPageTextDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPagePopupData", Storage="_CMSPagePopupDatas", ThisKey="ID", OtherKey="ViewID")]
		public EntitySet<CMSPagePopupData> CMSPagePopupDatas
		{
			get
			{
				return this._CMSPagePopupDatas;
			}
			set
			{
				this._CMSPagePopupDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageSlider", Storage="_CMSPageSliders", ThisKey="ID", OtherKey="ViewID")]
		public EntitySet<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this._CMSPageSliders;
			}
			set
			{
				this._CMSPageSliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageCellViewSetting", Storage="_CMSPageCellViewSettings", ThisKey="ID", OtherKey="ViewID")]
		public EntitySet<CMSPageCellViewSetting> CMSPageCellViewSettings
		{
			get
			{
				return this._CMSPageCellViewSettings;
			}
			set
			{
				this._CMSPageCellViewSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageVideo", Storage="_CMSPageVideos", ThisKey="ID", OtherKey="ViewID")]
		public EntitySet<CMSPageVideo> CMSPageVideos
		{
			get
			{
				return this._CMSPageVideos;
			}
			set
			{
				this._CMSPageVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCell_CMSPageCellView", Storage="_CMSPageCell", ThisKey="CellID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageCell CMSPageCell
		{
			get
			{
				return this._CMSPageCell.Entity;
			}
			set
			{
				CMSPageCell previousValue = this._CMSPageCell.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCell.Entity = null;
						previousValue.CMSPageCellViews.Remove(this);
					}
					this._CMSPageCell.Entity = value;
					if ((value != null))
					{
						value.CMSPageCellViews.Add(this);
						this._CellID = value.ID;
					}
					else
					{
						this._CellID = default(int);
					}
					this.SendPropertyChanged("CMSPageCell");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = this;
		}
		
		private void detach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = null;
		}
		
		private void attach_CMSPagePopupDatas(CMSPagePopupData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = this;
		}
		
		private void detach_CMSPagePopupDatas(CMSPagePopupData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = null;
		}
		
		private void attach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = this;
		}
		
		private void detach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = null;
		}
		
		private void attach_CMSPageCellViewSettings(CMSPageCellViewSetting entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = this;
		}
		
		private void detach_CMSPageCellViewSettings(CMSPageCellViewSetting entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = null;
		}
		
		private void attach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = this;
		}
		
		private void detach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCellView = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lenta")]
	public partial class Lenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PageID;
		
		private int _CellID;
		
		private string _TypeClass;
		
		private string _HeaderText;
		
		private string _Link;
		
		private System.Data.Linq.Binary _Image;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Author;
		
		private string _Text;
		
		private string _CSS1;
		
		private string _CSS2;
		
		private string _CSS3;
		
		private string _CSS4;
		
		private string _CSS5;
		
		private bool _ShowInfo;
		
		private bool _ShowTime;
		
		private System.DateTime _CreateDate;
		
		private bool _Visible;
		
		private string _FullText;
		
		private System.Nullable<int> _ViewAmount;
		
		private string _CategoryName;
		
		private EntitySet<LentaComment> _LentaComments;
		
		private EntitySet<UserFavoriteLenta> _UserFavoriteLentas;
		
		private EntityRef<CMSPageCell> _CMSPageCell;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnCellIDChanging(int value);
    partial void OnCellIDChanged();
    partial void OnTypeClassChanging(string value);
    partial void OnTypeClassChanged();
    partial void OnHeaderTextChanging(string value);
    partial void OnHeaderTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCSS1Changing(string value);
    partial void OnCSS1Changed();
    partial void OnCSS2Changing(string value);
    partial void OnCSS2Changed();
    partial void OnCSS3Changing(string value);
    partial void OnCSS3Changed();
    partial void OnCSS4Changing(string value);
    partial void OnCSS4Changed();
    partial void OnCSS5Changing(string value);
    partial void OnCSS5Changed();
    partial void OnShowInfoChanging(bool value);
    partial void OnShowInfoChanged();
    partial void OnShowTimeChanging(bool value);
    partial void OnShowTimeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnFullTextChanging(string value);
    partial void OnFullTextChanged();
    partial void OnViewAmountChanging(System.Nullable<int> value);
    partial void OnViewAmountChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public Lenta()
		{
			this._LentaComments = new EntitySet<LentaComment>(new Action<LentaComment>(this.attach_LentaComments), new Action<LentaComment>(this.detach_LentaComments));
			this._UserFavoriteLentas = new EntitySet<UserFavoriteLenta>(new Action<UserFavoriteLenta>(this.attach_UserFavoriteLentas), new Action<UserFavoriteLenta>(this.detach_UserFavoriteLentas));
			this._CMSPageCell = default(EntityRef<CMSPageCell>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellID", DbType="Int NOT NULL")]
		public int CellID
		{
			get
			{
				return this._CellID;
			}
			set
			{
				if ((this._CellID != value))
				{
					if (this._CMSPageCell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCellIDChanging(value);
					this.SendPropertyChanging();
					this._CellID = value;
					this.SendPropertyChanged("CellID");
					this.OnCellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeClass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeClass
		{
			get
			{
				return this._TypeClass;
			}
			set
			{
				if ((this._TypeClass != value))
				{
					this.OnTypeClassChanging(value);
					this.SendPropertyChanging();
					this._TypeClass = value;
					this.SendPropertyChanged("TypeClass");
					this.OnTypeClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderText", DbType="NVarChar(200)")]
		public string HeaderText
		{
			get
			{
				return this._HeaderText;
			}
			set
			{
				if ((this._HeaderText != value))
				{
					this.OnHeaderTextChanging(value);
					this.SendPropertyChanging();
					this._HeaderText = value;
					this.SendPropertyChanged("HeaderText");
					this.OnHeaderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(500)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS1", DbType="NVarChar(50)")]
		public string CSS1
		{
			get
			{
				return this._CSS1;
			}
			set
			{
				if ((this._CSS1 != value))
				{
					this.OnCSS1Changing(value);
					this.SendPropertyChanging();
					this._CSS1 = value;
					this.SendPropertyChanged("CSS1");
					this.OnCSS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS2", DbType="NVarChar(50)")]
		public string CSS2
		{
			get
			{
				return this._CSS2;
			}
			set
			{
				if ((this._CSS2 != value))
				{
					this.OnCSS2Changing(value);
					this.SendPropertyChanging();
					this._CSS2 = value;
					this.SendPropertyChanged("CSS2");
					this.OnCSS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS3", DbType="NVarChar(50)")]
		public string CSS3
		{
			get
			{
				return this._CSS3;
			}
			set
			{
				if ((this._CSS3 != value))
				{
					this.OnCSS3Changing(value);
					this.SendPropertyChanging();
					this._CSS3 = value;
					this.SendPropertyChanged("CSS3");
					this.OnCSS3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS4", DbType="NVarChar(50)")]
		public string CSS4
		{
			get
			{
				return this._CSS4;
			}
			set
			{
				if ((this._CSS4 != value))
				{
					this.OnCSS4Changing(value);
					this.SendPropertyChanging();
					this._CSS4 = value;
					this.SendPropertyChanged("CSS4");
					this.OnCSS4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS5", DbType="NVarChar(50)")]
		public string CSS5
		{
			get
			{
				return this._CSS5;
			}
			set
			{
				if ((this._CSS5 != value))
				{
					this.OnCSS5Changing(value);
					this.SendPropertyChanging();
					this._CSS5 = value;
					this.SendPropertyChanged("CSS5");
					this.OnCSS5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInfo", DbType="Bit NOT NULL")]
		public bool ShowInfo
		{
			get
			{
				return this._ShowInfo;
			}
			set
			{
				if ((this._ShowInfo != value))
				{
					this.OnShowInfoChanging(value);
					this.SendPropertyChanging();
					this._ShowInfo = value;
					this.SendPropertyChanged("ShowInfo");
					this.OnShowInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="Bit NOT NULL")]
		public bool ShowTime
		{
			get
			{
				return this._ShowTime;
			}
			set
			{
				if ((this._ShowTime != value))
				{
					this.OnShowTimeChanging(value);
					this.SendPropertyChanging();
					this._ShowTime = value;
					this.SendPropertyChanged("ShowTime");
					this.OnShowTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullText", DbType="NVarChar(MAX)")]
		public string FullText
		{
			get
			{
				return this._FullText;
			}
			set
			{
				if ((this._FullText != value))
				{
					this.OnFullTextChanging(value);
					this.SendPropertyChanging();
					this._FullText = value;
					this.SendPropertyChanged("FullText");
					this.OnFullTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewAmount", DbType="Int")]
		public System.Nullable<int> ViewAmount
		{
			get
			{
				return this._ViewAmount;
			}
			set
			{
				if ((this._ViewAmount != value))
				{
					this.OnViewAmountChanging(value);
					this.SendPropertyChanging();
					this._ViewAmount = value;
					this.SendPropertyChanged("ViewAmount");
					this.OnViewAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(200)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lenta_LentaComment", Storage="_LentaComments", ThisKey="ID", OtherKey="LentaID")]
		public EntitySet<LentaComment> LentaComments
		{
			get
			{
				return this._LentaComments;
			}
			set
			{
				this._LentaComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lenta_UserFavoriteLenta", Storage="_UserFavoriteLentas", ThisKey="ID", OtherKey="LentaID")]
		public EntitySet<UserFavoriteLenta> UserFavoriteLentas
		{
			get
			{
				return this._UserFavoriteLentas;
			}
			set
			{
				this._UserFavoriteLentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCell_Lenta", Storage="_CMSPageCell", ThisKey="CellID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageCell CMSPageCell
		{
			get
			{
				return this._CMSPageCell.Entity;
			}
			set
			{
				CMSPageCell previousValue = this._CMSPageCell.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCell.Entity = null;
						previousValue.Lentas.Remove(this);
					}
					this._CMSPageCell.Entity = value;
					if ((value != null))
					{
						value.Lentas.Add(this);
						this._CellID = value.ID;
					}
					else
					{
						this._CellID = default(int);
					}
					this.SendPropertyChanged("CMSPageCell");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_Lenta", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.Lentas.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.Lentas.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LentaComments(LentaComment entity)
		{
			this.SendPropertyChanging();
			entity.Lenta = this;
		}
		
		private void detach_LentaComments(LentaComment entity)
		{
			this.SendPropertyChanging();
			entity.Lenta = null;
		}
		
		private void attach_UserFavoriteLentas(UserFavoriteLenta entity)
		{
			this.SendPropertyChanging();
			entity.Lenta = this;
		}
		
		private void detach_UserFavoriteLentas(UserFavoriteLenta entity)
		{
			this.SendPropertyChanging();
			entity.Lenta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageCells")]
	public partial class CMSPageCell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ColumnName;
		
		private int _TypeID;
		
		private string _Description;
		
		private bool _Hidden;
		
		private string _CSS;
		
		private EntitySet<CMSPageCellView> _CMSPageCellViews;
		
		private EntitySet<Lenta> _Lentas;
		
		private EntityRef<PageType> _PageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    partial void OnCSSChanging(string value);
    partial void OnCSSChanged();
    #endregion
		
		public CMSPageCell()
		{
			this._CMSPageCellViews = new EntitySet<CMSPageCellView>(new Action<CMSPageCellView>(this.attach_CMSPageCellViews), new Action<CMSPageCellView>(this.detach_CMSPageCellViews));
			this._Lentas = new EntitySet<Lenta>(new Action<Lenta>(this.attach_Lentas), new Action<Lenta>(this.detach_Lentas));
			this._PageType = default(EntityRef<PageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._PageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL")]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSS", DbType="NVarChar(50)")]
		public string CSS
		{
			get
			{
				return this._CSS;
			}
			set
			{
				if ((this._CSS != value))
				{
					this.OnCSSChanging(value);
					this.SendPropertyChanging();
					this._CSS = value;
					this.SendPropertyChanged("CSS");
					this.OnCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCell_CMSPageCellView", Storage="_CMSPageCellViews", ThisKey="ID", OtherKey="CellID")]
		public EntitySet<CMSPageCellView> CMSPageCellViews
		{
			get
			{
				return this._CMSPageCellViews;
			}
			set
			{
				this._CMSPageCellViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCell_Lenta", Storage="_Lentas", ThisKey="ID", OtherKey="CellID")]
		public EntitySet<Lenta> Lentas
		{
			get
			{
				return this._Lentas;
			}
			set
			{
				this._Lentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPageCell", Storage="_PageType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public PageType PageType
		{
			get
			{
				return this._PageType.Entity;
			}
			set
			{
				PageType previousValue = this._PageType.Entity;
				if (((previousValue != value) 
							|| (this._PageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageType.Entity = null;
						previousValue.CMSPageCells.Remove(this);
					}
					this._PageType.Entity = value;
					if ((value != null))
					{
						value.CMSPageCells.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("PageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMSPageCellViews(CMSPageCellView entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCell = this;
		}
		
		private void detach_CMSPageCellViews(CMSPageCellView entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCell = null;
		}
		
		private void attach_Lentas(Lenta entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCell = this;
		}
		
		private void detach_Lentas(Lenta entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageCell = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageTextData")]
	public partial class CMSPageTextData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CMSPageID;
		
		private int _LangID;
		
		private string _Text;
		
		private int _ViewID;
		
		private bool _Visible;
		
		private int _OrderNum;
		
		private EntityRef<CMSPageCellView> _CMSPageCellView;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCMSPageIDChanging(int value);
    partial void OnCMSPageIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnViewIDChanging(int value);
    partial void OnViewIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public CMSPageTextData()
		{
			this._CMSPageCellView = default(EntityRef<CMSPageCellView>);
			this._Language = default(EntityRef<Language>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSPageID", DbType="Int NOT NULL")]
		public int CMSPageID
		{
			get
			{
				return this._CMSPageID;
			}
			set
			{
				if ((this._CMSPageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMSPageIDChanging(value);
					this.SendPropertyChanging();
					this._CMSPageID = value;
					this.SendPropertyChanged("CMSPageID");
					this.OnCMSPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="Int NOT NULL")]
		public int ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					if (this._CMSPageCellView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageTextData", Storage="_CMSPageCellView", ThisKey="ViewID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageCellView CMSPageCellView
		{
			get
			{
				return this._CMSPageCellView.Entity;
			}
			set
			{
				CMSPageCellView previousValue = this._CMSPageCellView.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCellView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCellView.Entity = null;
						previousValue.CMSPageTextDatas.Remove(this);
					}
					this._CMSPageCellView.Entity = value;
					if ((value != null))
					{
						value.CMSPageTextDatas.Add(this);
						this._ViewID = value.ID;
					}
					else
					{
						this._ViewID = default(int);
					}
					this.SendPropertyChanged("CMSPageCellView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageTextData", Storage="_Language", ThisKey="LangID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CMSPageTextDatas.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CMSPageTextDatas.Add(this);
						this._LangID = value.ID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageTextData", Storage="_CMSPage", ThisKey="CMSPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.CMSPageTextDatas.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.CMSPageTextDatas.Add(this);
						this._CMSPageID = value.ID;
					}
					else
					{
						this._CMSPageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapObjectTypes")]
	public partial class MapObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private string _Icon;
		
		private int _OrderNum;
		
		private EntitySet<MapObject> _MapObjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public MapObjectType()
		{
			this._MapObjects = new EntitySet<MapObject>(new Action<MapObject>(this.attach_MapObjects), new Action<MapObject>(this.detach_MapObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObjectType_MapObject", Storage="_MapObjects", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<MapObject> MapObjects
		{
			get
			{
				return this._MapObjects;
			}
			set
			{
				this._MapObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapObjects(MapObject entity)
		{
			this.SendPropertyChanging();
			entity.MapObjectType = this;
		}
		
		private void detach_MapObjects(MapObject entity)
		{
			this.SendPropertyChanging();
			entity.MapObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapObjects")]
	public partial class MapObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _TypeID;
		
		private System.Guid _CreatorID;
		
		private System.DateTime _CreateDate;
		
		private int _ObjectType;
		
		private string _Address;
		
		private string _Description;
		
		private EntityRef<MapObjectPhoto> _MapObjectPhoto;
		
		private EntitySet<MapCoord> _MapCoords;
		
		private EntitySet<MapObjectFavorite> _MapObjectFavorites;
		
		private EntitySet<MapObjectComment> _MapObjectComments;
		
		private EntityRef<User> _User;
		
		private EntityRef<MapObjectType> _MapObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCreatorIDChanging(System.Guid value);
    partial void OnCreatorIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnObjectTypeChanging(int value);
    partial void OnObjectTypeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public MapObject()
		{
			this._MapObjectPhoto = default(EntityRef<MapObjectPhoto>);
			this._MapCoords = new EntitySet<MapCoord>(new Action<MapCoord>(this.attach_MapCoords), new Action<MapCoord>(this.detach_MapCoords));
			this._MapObjectFavorites = new EntitySet<MapObjectFavorite>(new Action<MapObjectFavorite>(this.attach_MapObjectFavorites), new Action<MapObjectFavorite>(this.detach_MapObjectFavorites));
			this._MapObjectComments = new EntitySet<MapObjectComment>(new Action<MapObjectComment>(this.attach_MapObjectComments), new Action<MapObjectComment>(this.detach_MapObjectComments));
			this._User = default(EntityRef<User>);
			this._MapObjectType = default(EntityRef<MapObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._MapObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="Int NOT NULL")]
		public int ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectPhoto", Storage="_MapObjectPhoto", ThisKey="ID", OtherKey="ObjectID", IsUnique=true, IsForeignKey=false)]
		public MapObjectPhoto MapObjectPhoto
		{
			get
			{
				return this._MapObjectPhoto.Entity;
			}
			set
			{
				MapObjectPhoto previousValue = this._MapObjectPhoto.Entity;
				if (((previousValue != value) 
							|| (this._MapObjectPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObjectPhoto.Entity = null;
						previousValue.MapObject = null;
					}
					this._MapObjectPhoto.Entity = value;
					if ((value != null))
					{
						value.MapObject = this;
					}
					this.SendPropertyChanged("MapObjectPhoto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapCoord", Storage="_MapCoords", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<MapCoord> MapCoords
		{
			get
			{
				return this._MapCoords;
			}
			set
			{
				this._MapCoords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectFavorite", Storage="_MapObjectFavorites", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<MapObjectFavorite> MapObjectFavorites
		{
			get
			{
				return this._MapObjectFavorites;
			}
			set
			{
				this._MapObjectFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectComment", Storage="_MapObjectComments", ThisKey="ID", OtherKey="ObjectID")]
		public EntitySet<MapObjectComment> MapObjectComments
		{
			get
			{
				return this._MapObjectComments;
			}
			set
			{
				this._MapObjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MapObject", Storage="_User", ThisKey="CreatorID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MapObjects.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MapObjects.Add(this);
						this._CreatorID = value.UserId;
					}
					else
					{
						this._CreatorID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObjectType_MapObject", Storage="_MapObjectType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MapObjectType MapObjectType
		{
			get
			{
				return this._MapObjectType.Entity;
			}
			set
			{
				MapObjectType previousValue = this._MapObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MapObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObjectType.Entity = null;
						previousValue.MapObjects.Remove(this);
					}
					this._MapObjectType.Entity = value;
					if ((value != null))
					{
						value.MapObjects.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("MapObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MapCoords(MapCoord entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = this;
		}
		
		private void detach_MapCoords(MapCoord entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = null;
		}
		
		private void attach_MapObjectFavorites(MapObjectFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = this;
		}
		
		private void detach_MapObjectFavorites(MapObjectFavorite entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = null;
		}
		
		private void attach_MapObjectComments(MapObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = this;
		}
		
		private void detach_MapObjectComments(MapObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.MapObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapObjectPhotos")]
	public partial class MapObjectPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectID;
		
		private System.Data.Linq.Binary _RawData;
		
		private EntityRef<MapObject> _MapObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnRawDataChanging(System.Data.Linq.Binary value);
    partial void OnRawDataChanged();
    #endregion
		
		public MapObjectPhoto()
		{
			this._MapObject = default(EntityRef<MapObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._MapObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RawData
		{
			get
			{
				return this._RawData;
			}
			set
			{
				if ((this._RawData != value))
				{
					this.OnRawDataChanging(value);
					this.SendPropertyChanging();
					this._RawData = value;
					this.SendPropertyChanged("RawData");
					this.OnRawDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectPhoto", Storage="_MapObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MapObject MapObject
		{
			get
			{
				return this._MapObject.Entity;
			}
			set
			{
				MapObject previousValue = this._MapObject.Entity;
				if (((previousValue != value) 
							|| (this._MapObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObject.Entity = null;
						previousValue.MapObjectPhoto = null;
					}
					this._MapObject.Entity = value;
					if ((value != null))
					{
						value.MapObjectPhoto = this;
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("MapObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapCoords")]
	public partial class MapCoord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _XPos;
		
		private decimal _YPos;
		
		private int _ObjectID;
		
		private int _OrderNum;
		
		private bool _IsMarker;
		
		private EntityRef<MapObject> _MapObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnXPosChanging(decimal value);
    partial void OnXPosChanged();
    partial void OnYPosChanging(decimal value);
    partial void OnYPosChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnIsMarkerChanging(bool value);
    partial void OnIsMarkerChanged();
    #endregion
		
		public MapCoord()
		{
			this._MapObject = default(EntityRef<MapObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPos", DbType="Decimal(18,12) NOT NULL")]
		public decimal XPos
		{
			get
			{
				return this._XPos;
			}
			set
			{
				if ((this._XPos != value))
				{
					this.OnXPosChanging(value);
					this.SendPropertyChanging();
					this._XPos = value;
					this.SendPropertyChanged("XPos");
					this.OnXPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YPos", DbType="Decimal(18,12) NOT NULL")]
		public decimal YPos
		{
			get
			{
				return this._YPos;
			}
			set
			{
				if ((this._YPos != value))
				{
					this.OnYPosChanging(value);
					this.SendPropertyChanging();
					this._YPos = value;
					this.SendPropertyChanged("YPos");
					this.OnYPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._MapObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMarker", DbType="Bit NOT NULL")]
		public bool IsMarker
		{
			get
			{
				return this._IsMarker;
			}
			set
			{
				if ((this._IsMarker != value))
				{
					this.OnIsMarkerChanging(value);
					this.SendPropertyChanging();
					this._IsMarker = value;
					this.SendPropertyChanged("IsMarker");
					this.OnIsMarkerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapCoord", Storage="_MapObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MapObject MapObject
		{
			get
			{
				return this._MapObject.Entity;
			}
			set
			{
				MapObject previousValue = this._MapObject.Entity;
				if (((previousValue != value) 
							|| (this._MapObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObject.Entity = null;
						previousValue.MapCoords.Remove(this);
					}
					this._MapObject.Entity = value;
					if ((value != null))
					{
						value.MapCoords.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("MapObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapObjectFavorites")]
	public partial class MapObjectFavorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private int _ObjectID;
		
		private EntityRef<User> _User;
		
		private EntityRef<MapObject> _MapObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    #endregion
		
		public MapObjectFavorite()
		{
			this._User = default(EntityRef<User>);
			this._MapObject = default(EntityRef<MapObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._MapObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MapObjectFavorite", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MapObjectFavorites.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MapObjectFavorites.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectFavorite", Storage="_MapObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MapObject MapObject
		{
			get
			{
				return this._MapObject.Entity;
			}
			set
			{
				MapObject previousValue = this._MapObject.Entity;
				if (((previousValue != value) 
							|| (this._MapObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObject.Entity = null;
						previousValue.MapObjectFavorites.Remove(this);
					}
					this._MapObject.Entity = value;
					if ((value != null))
					{
						value.MapObjectFavorites.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("MapObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapObjectComments")]
	public partial class MapObjectComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CommentID;
		
		private int _ObjectID;
		
		private EntityRef<Comment> _Comment;
		
		private EntityRef<MapObject> _MapObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnObjectIDChanging(int value);
    partial void OnObjectIDChanged();
    #endregion
		
		public MapObjectComment()
		{
			this._Comment = default(EntityRef<Comment>);
			this._MapObject = default(EntityRef<MapObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="Int NOT NULL")]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					if (this._MapObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_MapObjectComment", Storage="_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.MapObjectComments.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.MapObjectComments.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(int);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MapObject_MapObjectComment", Storage="_MapObject", ThisKey="ObjectID", OtherKey="ID", IsForeignKey=true)]
		public MapObject MapObject
		{
			get
			{
				return this._MapObject.Entity;
			}
			set
			{
				MapObject previousValue = this._MapObject.Entity;
				if (((previousValue != value) 
							|| (this._MapObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MapObject.Entity = null;
						previousValue.MapObjectComments.Remove(this);
					}
					this._MapObject.Entity = value;
					if ((value != null))
					{
						value.MapObjectComments.Add(this);
						this._ObjectID = value.ID;
					}
					else
					{
						this._ObjectID = default(int);
					}
					this.SendPropertyChanged("MapObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapSelect")]
	public partial class MapSelect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Lat;
		
		private decimal _Lng;
		
		private string _Name;
		
		private int _Zoom;
		
		private bool _Visible;
		
		private int _OrderNum;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLatChanging(decimal value);
    partial void OnLatChanged();
    partial void OnLngChanging(decimal value);
    partial void OnLngChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnZoomChanging(int value);
    partial void OnZoomChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public MapSelect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Decimal(18,12) NOT NULL")]
		public decimal Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Decimal(18,12) NOT NULL")]
		public decimal Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zoom", DbType="Int NOT NULL")]
		public int Zoom
		{
			get
			{
				return this._Zoom;
			}
			set
			{
				if ((this._Zoom != value))
				{
					this.OnZoomChanging(value);
					this.SendPropertyChanging();
					this._Zoom = value;
					this.SendPropertyChanged("Zoom");
					this.OnZoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFavoriteLenta")]
	public partial class UserFavoriteLenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private int _LentaID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Lenta> _Lenta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnLentaIDChanging(int value);
    partial void OnLentaIDChanged();
    #endregion
		
		public UserFavoriteLenta()
		{
			this._User = default(EntityRef<User>);
			this._Lenta = default(EntityRef<Lenta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LentaID", DbType="Int NOT NULL")]
		public int LentaID
		{
			get
			{
				return this._LentaID;
			}
			set
			{
				if ((this._LentaID != value))
				{
					if (this._Lenta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLentaIDChanging(value);
					this.SendPropertyChanging();
					this._LentaID = value;
					this.SendPropertyChanged("LentaID");
					this.OnLentaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteLenta", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserFavoriteLentas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteLentas.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lenta_UserFavoriteLenta", Storage="_Lenta", ThisKey="LentaID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Lenta Lenta
		{
			get
			{
				return this._Lenta.Entity;
			}
			set
			{
				Lenta previousValue = this._Lenta.Entity;
				if (((previousValue != value) 
							|| (this._Lenta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lenta.Entity = null;
						previousValue.UserFavoriteLentas.Remove(this);
					}
					this._Lenta.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteLentas.Add(this);
						this._LentaID = value.ID;
					}
					else
					{
						this._LentaID = default(int);
					}
					this.SendPropertyChanged("Lenta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMessages")]
	public partial class UserMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private string _Message;
		
		private System.DateTime _Date;
		
		private System.Guid _Sender;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSenderChanging(System.Guid value);
    partial void OnSenderChanged();
    #endregion
		
		public UserMessage()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMessage", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User Recipient
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.IncomingMessages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.IncomingMessages.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("Recipient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserMessage1", Storage="_User1", ThisKey="Sender", OtherKey="UserId", IsForeignKey=true)]
		public User Poster
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.OutcomingMessages.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.OutcomingMessages.Add(this);
						this._Sender = value.UserId;
					}
					else
					{
						this._Sender = default(System.Guid);
					}
					this.SendPropertyChanged("Poster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryGroups")]
	public partial class OrderDeliveryGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private int _OrderNum;
		
		private EntitySet<OrderDeliveryProvider> _OrderDeliveryProviders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public OrderDeliveryGroup()
		{
			this._OrderDeliveryProviders = new EntitySet<OrderDeliveryProvider>(new Action<OrderDeliveryProvider>(this.attach_OrderDeliveryProviders), new Action<OrderDeliveryProvider>(this.detach_OrderDeliveryProviders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryGroup_OrderDeliveryProvider", Storage="_OrderDeliveryProviders", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<OrderDeliveryProvider> OrderDeliveryProviders
		{
			get
			{
				return this._OrderDeliveryProviders;
			}
			set
			{
				this._OrderDeliveryProviders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryProviders(OrderDeliveryProvider entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryGroup = this;
		}
		
		private void detach_OrderDeliveryProviders(OrderDeliveryProvider entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryZones")]
	public partial class OrderDeliveryZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsWeightZone;
		
		private System.Nullable<decimal> _WeightThreshold;
		
		private System.Nullable<int> _AlternativeZone;
		
		private EntitySet<OrderDeliveryZone> _OrderDeliveryZones;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegions;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegions1;
		
		private EntitySet<OrderDeliveryZoneInterval> _OrderDeliveryZoneIntervals;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsWeightZoneChanging(bool value);
    partial void OnIsWeightZoneChanged();
    partial void OnWeightThresholdChanging(System.Nullable<decimal> value);
    partial void OnWeightThresholdChanged();
    partial void OnAlternativeZoneChanging(System.Nullable<int> value);
    partial void OnAlternativeZoneChanged();
    #endregion
		
		public OrderDeliveryZone()
		{
			this._OrderDeliveryZones = new EntitySet<OrderDeliveryZone>(new Action<OrderDeliveryZone>(this.attach_OrderDeliveryZones), new Action<OrderDeliveryZone>(this.detach_OrderDeliveryZones));
			this._OrderDeliveryRegions = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegions), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegions));
			this._OrderDeliveryRegions1 = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegions1), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegions1));
			this._OrderDeliveryZoneIntervals = new EntitySet<OrderDeliveryZoneInterval>(new Action<OrderDeliveryZoneInterval>(this.attach_OrderDeliveryZoneIntervals), new Action<OrderDeliveryZoneInterval>(this.detach_OrderDeliveryZoneIntervals));
			this._OrderDeliveryZone1 = default(EntityRef<OrderDeliveryZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWeightZone", DbType="Bit NOT NULL")]
		public bool IsWeightZone
		{
			get
			{
				return this._IsWeightZone;
			}
			set
			{
				if ((this._IsWeightZone != value))
				{
					this.OnIsWeightZoneChanging(value);
					this.SendPropertyChanging();
					this._IsWeightZone = value;
					this.SendPropertyChanged("IsWeightZone");
					this.OnIsWeightZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightThreshold", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightThreshold
		{
			get
			{
				return this._WeightThreshold;
			}
			set
			{
				if ((this._WeightThreshold != value))
				{
					this.OnWeightThresholdChanging(value);
					this.SendPropertyChanging();
					this._WeightThreshold = value;
					this.SendPropertyChanged("WeightThreshold");
					this.OnWeightThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeZone", DbType="Int")]
		public System.Nullable<int> AlternativeZone
		{
			get
			{
				return this._AlternativeZone;
			}
			set
			{
				if ((this._AlternativeZone != value))
				{
					if (this._OrderDeliveryZone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlternativeZoneChanging(value);
					this.SendPropertyChanging();
					this._AlternativeZone = value;
					this.SendPropertyChanged("AlternativeZone");
					this.OnAlternativeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZone", Storage="_OrderDeliveryZones", ThisKey="ID", OtherKey="AlternativeZone")]
		public EntitySet<OrderDeliveryZone> AlternativeOrderDeliveryZones
		{
			get
			{
				return this._OrderDeliveryZones;
			}
			set
			{
				this._OrderDeliveryZones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion", Storage="_OrderDeliveryRegions", ThisKey="ID", OtherKey="DistanceZoneID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegionsByDZone
		{
			get
			{
				return this._OrderDeliveryRegions;
			}
			set
			{
				this._OrderDeliveryRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion1", Storage="_OrderDeliveryRegions1", ThisKey="ID", OtherKey="WeightZoneID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegionsByWZone
		{
			get
			{
				return this._OrderDeliveryRegions1;
			}
			set
			{
				this._OrderDeliveryRegions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZoneInterval", Storage="_OrderDeliveryZoneIntervals", ThisKey="ID", OtherKey="ZoneID")]
		public EntitySet<OrderDeliveryZoneInterval> OrderDeliveryZoneIntervals
		{
			get
			{
				return this._OrderDeliveryZoneIntervals;
			}
			set
			{
				this._OrderDeliveryZoneIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZone", Storage="_OrderDeliveryZone1", ThisKey="AlternativeZone", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone AlternativeOrderDeliveryZone
		{
			get
			{
				return this._OrderDeliveryZone1.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone1.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone1.Entity = null;
						previousValue.AlternativeOrderDeliveryZones.Remove(this);
					}
					this._OrderDeliveryZone1.Entity = value;
					if ((value != null))
					{
						value.AlternativeOrderDeliveryZones.Add(this);
						this._AlternativeZone = value.ID;
					}
					else
					{
						this._AlternativeZone = default(Nullable<int>);
					}
					this.SendPropertyChanged("AlternativeOrderDeliveryZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryZones(OrderDeliveryZone entity)
		{
			this.SendPropertyChanging();
			entity.AlternativeOrderDeliveryZone = this;
		}
		
		private void detach_OrderDeliveryZones(OrderDeliveryZone entity)
		{
			this.SendPropertyChanging();
			entity.AlternativeOrderDeliveryZone = null;
		}
		
		private void attach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryDistanceZone = this;
		}
		
		private void detach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryDistanceZone = null;
		}
		
		private void attach_OrderDeliveryRegions1(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryWeightZone = this;
		}
		
		private void detach_OrderDeliveryRegions1(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryWeightZone = null;
		}
		
		private void attach_OrderDeliveryZoneIntervals(OrderDeliveryZoneInterval entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryZone = this;
		}
		
		private void detach_OrderDeliveryZoneIntervals(OrderDeliveryZoneInterval entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryZone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryProviders")]
	public partial class OrderDeliveryProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UID;
		
		private int _OrderNum;
		
		private int _GroupID;
		
		private bool _ShowAdress;
		
		private bool _ShowTime;
		
		private bool _ShowTown;
		
		private bool _ShowRegions;
		
		private bool _ShowOrgData;
		
		private string _ListType;
		
		private string _DefaultCity;
		
		private bool _ShowIndex;
		
		private int _SprinterID;
		
		private System.Nullable<decimal> _DiscountThreshold;
		
		private EntitySet<OrderDeliveryRegion> _OrderDeliveryRegions;
		
		private EntitySet<OrderPaymentDeliveryRel> _OrderPaymentDeliveryRels;
		
		private EntityRef<OrderDeliveryGroup> _OrderDeliveryGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnShowAdressChanging(bool value);
    partial void OnShowAdressChanged();
    partial void OnShowTimeChanging(bool value);
    partial void OnShowTimeChanged();
    partial void OnShowTownChanging(bool value);
    partial void OnShowTownChanged();
    partial void OnShowRegionsChanging(bool value);
    partial void OnShowRegionsChanged();
    partial void OnShowOrgDataChanging(bool value);
    partial void OnShowOrgDataChanged();
    partial void OnListTypeChanging(string value);
    partial void OnListTypeChanged();
    partial void OnDefaultCityChanging(string value);
    partial void OnDefaultCityChanged();
    partial void OnShowIndexChanging(bool value);
    partial void OnShowIndexChanged();
    partial void OnSprinterIDChanging(int value);
    partial void OnSprinterIDChanged();
    partial void OnDiscountThresholdChanging(System.Nullable<decimal> value);
    partial void OnDiscountThresholdChanged();
    #endregion
		
		public OrderDeliveryProvider()
		{
			this._OrderDeliveryRegions = new EntitySet<OrderDeliveryRegion>(new Action<OrderDeliveryRegion>(this.attach_OrderDeliveryRegions), new Action<OrderDeliveryRegion>(this.detach_OrderDeliveryRegions));
			this._OrderPaymentDeliveryRels = new EntitySet<OrderPaymentDeliveryRel>(new Action<OrderPaymentDeliveryRel>(this.attach_OrderPaymentDeliveryRels), new Action<OrderPaymentDeliveryRel>(this.detach_OrderPaymentDeliveryRels));
			this._OrderDeliveryGroup = default(EntityRef<OrderDeliveryGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._OrderDeliveryGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAdress", DbType="Bit NOT NULL")]
		public bool ShowAdress
		{
			get
			{
				return this._ShowAdress;
			}
			set
			{
				if ((this._ShowAdress != value))
				{
					this.OnShowAdressChanging(value);
					this.SendPropertyChanging();
					this._ShowAdress = value;
					this.SendPropertyChanged("ShowAdress");
					this.OnShowAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="Bit NOT NULL")]
		public bool ShowTime
		{
			get
			{
				return this._ShowTime;
			}
			set
			{
				if ((this._ShowTime != value))
				{
					this.OnShowTimeChanging(value);
					this.SendPropertyChanging();
					this._ShowTime = value;
					this.SendPropertyChanged("ShowTime");
					this.OnShowTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTown", DbType="Bit NOT NULL")]
		public bool ShowTown
		{
			get
			{
				return this._ShowTown;
			}
			set
			{
				if ((this._ShowTown != value))
				{
					this.OnShowTownChanging(value);
					this.SendPropertyChanging();
					this._ShowTown = value;
					this.SendPropertyChanged("ShowTown");
					this.OnShowTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRegions", DbType="Bit NOT NULL")]
		public bool ShowRegions
		{
			get
			{
				return this._ShowRegions;
			}
			set
			{
				if ((this._ShowRegions != value))
				{
					this.OnShowRegionsChanging(value);
					this.SendPropertyChanging();
					this._ShowRegions = value;
					this.SendPropertyChanged("ShowRegions");
					this.OnShowRegionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOrgData", DbType="Bit NOT NULL")]
		public bool ShowOrgData
		{
			get
			{
				return this._ShowOrgData;
			}
			set
			{
				if ((this._ShowOrgData != value))
				{
					this.OnShowOrgDataChanging(value);
					this.SendPropertyChanging();
					this._ShowOrgData = value;
					this.SendPropertyChanged("ShowOrgData");
					this.OnShowOrgDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListType", DbType="NVarChar(50)")]
		public string ListType
		{
			get
			{
				return this._ListType;
			}
			set
			{
				if ((this._ListType != value))
				{
					this.OnListTypeChanging(value);
					this.SendPropertyChanging();
					this._ListType = value;
					this.SendPropertyChanged("ListType");
					this.OnListTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCity", DbType="NVarChar(50)")]
		public string DefaultCity
		{
			get
			{
				return this._DefaultCity;
			}
			set
			{
				if ((this._DefaultCity != value))
				{
					this.OnDefaultCityChanging(value);
					this.SendPropertyChanging();
					this._DefaultCity = value;
					this.SendPropertyChanged("DefaultCity");
					this.OnDefaultCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowIndex", DbType="Bit NOT NULL")]
		public bool ShowIndex
		{
			get
			{
				return this._ShowIndex;
			}
			set
			{
				if ((this._ShowIndex != value))
				{
					this.OnShowIndexChanging(value);
					this.SendPropertyChanging();
					this._ShowIndex = value;
					this.SendPropertyChanged("ShowIndex");
					this.OnShowIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SprinterID", DbType="Int NOT NULL")]
		public int SprinterID
		{
			get
			{
				return this._SprinterID;
			}
			set
			{
				if ((this._SprinterID != value))
				{
					this.OnSprinterIDChanging(value);
					this.SendPropertyChanging();
					this._SprinterID = value;
					this.SendPropertyChanged("SprinterID");
					this.OnSprinterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountThreshold", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountThreshold
		{
			get
			{
				return this._DiscountThreshold;
			}
			set
			{
				if ((this._DiscountThreshold != value))
				{
					this.OnDiscountThresholdChanging(value);
					this.SendPropertyChanging();
					this._DiscountThreshold = value;
					this.SendPropertyChanged("DiscountThreshold");
					this.OnDiscountThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderDeliveryRegion", Storage="_OrderDeliveryRegions", ThisKey="ID", OtherKey="DeliveryProviderID")]
		public EntitySet<OrderDeliveryRegion> OrderDeliveryRegions
		{
			get
			{
				return this._OrderDeliveryRegions;
			}
			set
			{
				this._OrderDeliveryRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentDeliveryRels", ThisKey="ID", OtherKey="DeliveryProviderID")]
		public EntitySet<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this._OrderPaymentDeliveryRels;
			}
			set
			{
				this._OrderPaymentDeliveryRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryGroup_OrderDeliveryProvider", Storage="_OrderDeliveryGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryGroup OrderDeliveryGroup
		{
			get
			{
				return this._OrderDeliveryGroup.Entity;
			}
			set
			{
				OrderDeliveryGroup previousValue = this._OrderDeliveryGroup.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryGroup.Entity = null;
						previousValue.OrderDeliveryProviders.Remove(this);
					}
					this._OrderDeliveryGroup.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryProviders.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = this;
		}
		
		private void detach_OrderDeliveryRegions(OrderDeliveryRegion entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = null;
		}
		
		private void attach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = this;
		}
		
		private void detach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryRegions")]
	public partial class OrderDeliveryRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ImportID;
		
		private System.Nullable<int> _DeliveryProviderID;
		
		private decimal _Price;
		
		private int _DeliveryTime;
		
		private System.Nullable<decimal> _RegionDistance;
		
		private System.Nullable<int> _DistanceZoneID;
		
		private System.Nullable<int> _WeightZoneID;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<OrderDeliveryProvider> _OrderDeliveryProvider;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImportIDChanging(System.Nullable<int> value);
    partial void OnImportIDChanged();
    partial void OnDeliveryProviderIDChanging(System.Nullable<int> value);
    partial void OnDeliveryProviderIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDeliveryTimeChanging(int value);
    partial void OnDeliveryTimeChanged();
    partial void OnRegionDistanceChanging(System.Nullable<decimal> value);
    partial void OnRegionDistanceChanged();
    partial void OnDistanceZoneIDChanging(System.Nullable<int> value);
    partial void OnDistanceZoneIDChanged();
    partial void OnWeightZoneIDChanging(System.Nullable<int> value);
    partial void OnWeightZoneIDChanged();
    #endregion
		
		public OrderDeliveryRegion()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._OrderDeliveryProvider = default(EntityRef<OrderDeliveryProvider>);
			this._OrderDeliveryZone = default(EntityRef<OrderDeliveryZone>);
			this._OrderDeliveryZone1 = default(EntityRef<OrderDeliveryZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="Int")]
		public System.Nullable<int> ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryProviderID", DbType="Int")]
		public System.Nullable<int> DeliveryProviderID
		{
			get
			{
				return this._DeliveryProviderID;
			}
			set
			{
				if ((this._DeliveryProviderID != value))
				{
					if (this._OrderDeliveryProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryProviderIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryProviderID = value;
					this.SendPropertyChanged("DeliveryProviderID");
					this.OnDeliveryProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="Int NOT NULL")]
		public int DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDistance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RegionDistance
		{
			get
			{
				return this._RegionDistance;
			}
			set
			{
				if ((this._RegionDistance != value))
				{
					this.OnRegionDistanceChanging(value);
					this.SendPropertyChanging();
					this._RegionDistance = value;
					this.SendPropertyChanged("RegionDistance");
					this.OnRegionDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceZoneID", DbType="Int")]
		public System.Nullable<int> DistanceZoneID
		{
			get
			{
				return this._DistanceZoneID;
			}
			set
			{
				if ((this._DistanceZoneID != value))
				{
					if (this._OrderDeliveryZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistanceZoneIDChanging(value);
					this.SendPropertyChanging();
					this._DistanceZoneID = value;
					this.SendPropertyChanged("DistanceZoneID");
					this.OnDistanceZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightZoneID", DbType="Int")]
		public System.Nullable<int> WeightZoneID
		{
			get
			{
				return this._WeightZoneID;
			}
			set
			{
				if ((this._WeightZoneID != value))
				{
					if (this._OrderDeliveryZone1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeightZoneIDChanging(value);
					this.SendPropertyChanging();
					this._WeightZoneID = value;
					this.SendPropertyChanged("WeightZoneID");
					this.OnWeightZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryRegion_OrderDetail", Storage="_OrderDetails", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderDeliveryRegion", Storage="_OrderDeliveryProvider", ThisKey="DeliveryProviderID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public OrderDeliveryProvider OrderDeliveryProvider
		{
			get
			{
				return this._OrderDeliveryProvider.Entity;
			}
			set
			{
				OrderDeliveryProvider previousValue = this._OrderDeliveryProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryProvider.Entity = null;
						previousValue.OrderDeliveryRegions.Remove(this);
					}
					this._OrderDeliveryProvider.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegions.Add(this);
						this._DeliveryProviderID = value.ID;
					}
					else
					{
						this._DeliveryProviderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion", Storage="_OrderDeliveryZone", ThisKey="DistanceZoneID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone OrderDeliveryDistanceZone
		{
			get
			{
				return this._OrderDeliveryZone.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone.Entity = null;
						previousValue.OrderDeliveryRegionsByDZone.Remove(this);
					}
					this._OrderDeliveryZone.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegionsByDZone.Add(this);
						this._DistanceZoneID = value.ID;
					}
					else
					{
						this._DistanceZoneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryDistanceZone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryRegion1", Storage="_OrderDeliveryZone1", ThisKey="WeightZoneID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryZone OrderDeliveryWeightZone
		{
			get
			{
				return this._OrderDeliveryZone1.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone1.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone1.Entity = null;
						previousValue.OrderDeliveryRegionsByWZone.Remove(this);
					}
					this._OrderDeliveryZone1.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryRegionsByWZone.Add(this);
						this._WeightZoneID = value.ID;
					}
					else
					{
						this._WeightZoneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryWeightZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryRegion = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderDeliveryRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDeliveryZoneIntervals")]
	public partial class OrderDeliveryZoneInterval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ZoneID;
		
		private decimal _MinInterval;
		
		private decimal _MaxInterval;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _WeightLimit;
		
		private System.Nullable<decimal> _OverWeightCost;
		
		private System.Nullable<decimal> _OverWeightUnit;
		
		private EntityRef<OrderDeliveryZone> _OrderDeliveryZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnZoneIDChanging(int value);
    partial void OnZoneIDChanged();
    partial void OnMinIntervalChanging(decimal value);
    partial void OnMinIntervalChanged();
    partial void OnMaxIntervalChanging(decimal value);
    partial void OnMaxIntervalChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnWeightLimitChanging(System.Nullable<decimal> value);
    partial void OnWeightLimitChanged();
    partial void OnOverWeightCostChanging(System.Nullable<decimal> value);
    partial void OnOverWeightCostChanged();
    partial void OnOverWeightUnitChanging(System.Nullable<decimal> value);
    partial void OnOverWeightUnitChanged();
    #endregion
		
		public OrderDeliveryZoneInterval()
		{
			this._OrderDeliveryZone = default(EntityRef<OrderDeliveryZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="Int NOT NULL")]
		public int ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._OrderDeliveryZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinInterval", DbType="Decimal(18,2) NOT NULL")]
		public decimal MinInterval
		{
			get
			{
				return this._MinInterval;
			}
			set
			{
				if ((this._MinInterval != value))
				{
					this.OnMinIntervalChanging(value);
					this.SendPropertyChanging();
					this._MinInterval = value;
					this.SendPropertyChanged("MinInterval");
					this.OnMinIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxInterval", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaxInterval
		{
			get
			{
				return this._MaxInterval;
			}
			set
			{
				if ((this._MaxInterval != value))
				{
					this.OnMaxIntervalChanging(value);
					this.SendPropertyChanging();
					this._MaxInterval = value;
					this.SendPropertyChanged("MaxInterval");
					this.OnMaxIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightLimit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightLimit
		{
			get
			{
				return this._WeightLimit;
			}
			set
			{
				if ((this._WeightLimit != value))
				{
					this.OnWeightLimitChanging(value);
					this.SendPropertyChanging();
					this._WeightLimit = value;
					this.SendPropertyChanged("WeightLimit");
					this.OnWeightLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverWeightCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OverWeightCost
		{
			get
			{
				return this._OverWeightCost;
			}
			set
			{
				if ((this._OverWeightCost != value))
				{
					this.OnOverWeightCostChanging(value);
					this.SendPropertyChanging();
					this._OverWeightCost = value;
					this.SendPropertyChanged("OverWeightCost");
					this.OnOverWeightCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverWeightUnit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OverWeightUnit
		{
			get
			{
				return this._OverWeightUnit;
			}
			set
			{
				if ((this._OverWeightUnit != value))
				{
					this.OnOverWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._OverWeightUnit = value;
					this.SendPropertyChanged("OverWeightUnit");
					this.OnOverWeightUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryZone_OrderDeliveryZoneInterval", Storage="_OrderDeliveryZone", ThisKey="ZoneID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryZone OrderDeliveryZone
		{
			get
			{
				return this._OrderDeliveryZone.Entity;
			}
			set
			{
				OrderDeliveryZone previousValue = this._OrderDeliveryZone.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryZone.Entity = null;
						previousValue.OrderDeliveryZoneIntervals.Remove(this);
					}
					this._OrderDeliveryZone.Entity = value;
					if ((value != null))
					{
						value.OrderDeliveryZoneIntervals.Add(this);
						this._ZoneID = value.ID;
					}
					else
					{
						this._ZoneID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentProviders")]
	public partial class OrderPaymentProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SprinterUID;
		
		private string _Code;
		
		private EntitySet<OrderPaymentDeliveryRel> _OrderPaymentDeliveryRels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSprinterUIDChanging(int value);
    partial void OnSprinterUIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public OrderPaymentProvider()
		{
			this._OrderPaymentDeliveryRels = new EntitySet<OrderPaymentDeliveryRel>(new Action<OrderPaymentDeliveryRel>(this.attach_OrderPaymentDeliveryRels), new Action<OrderPaymentDeliveryRel>(this.detach_OrderPaymentDeliveryRels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SprinterUID", DbType="Int NOT NULL")]
		public int SprinterUID
		{
			get
			{
				return this._SprinterUID;
			}
			set
			{
				if ((this._SprinterUID != value))
				{
					this.OnSprinterUIDChanging(value);
					this.SendPropertyChanging();
					this._SprinterUID = value;
					this.SendPropertyChanged("SprinterUID");
					this.OnSprinterUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentDeliveryRels", ThisKey="ID", OtherKey="PaymentProviderID")]
		public EntitySet<OrderPaymentDeliveryRel> OrderPaymentDeliveryRels
		{
			get
			{
				return this._OrderPaymentDeliveryRels;
			}
			set
			{
				this._OrderPaymentDeliveryRels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentProvider = this;
		}
		
		private void detach_OrderPaymentDeliveryRels(OrderPaymentDeliveryRel entity)
		{
			this.SendPropertyChanging();
			entity.OrderPaymentProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPaymentDeliveryRels")]
	public partial class OrderPaymentDeliveryRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DeliveryProviderID;
		
		private int _PaymentProviderID;
		
		private EntityRef<OrderDeliveryProvider> _OrderDeliveryProvider;
		
		private EntityRef<OrderPaymentProvider> _OrderPaymentProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeliveryProviderIDChanging(int value);
    partial void OnDeliveryProviderIDChanged();
    partial void OnPaymentProviderIDChanging(int value);
    partial void OnPaymentProviderIDChanged();
    #endregion
		
		public OrderPaymentDeliveryRel()
		{
			this._OrderDeliveryProvider = default(EntityRef<OrderDeliveryProvider>);
			this._OrderPaymentProvider = default(EntityRef<OrderPaymentProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryProviderID", DbType="Int NOT NULL")]
		public int DeliveryProviderID
		{
			get
			{
				return this._DeliveryProviderID;
			}
			set
			{
				if ((this._DeliveryProviderID != value))
				{
					if (this._OrderDeliveryProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryProviderIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryProviderID = value;
					this.SendPropertyChanged("DeliveryProviderID");
					this.OnDeliveryProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentProviderID", DbType="Int NOT NULL")]
		public int PaymentProviderID
		{
			get
			{
				return this._PaymentProviderID;
			}
			set
			{
				if ((this._PaymentProviderID != value))
				{
					if (this._OrderPaymentProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentProviderIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentProviderID = value;
					this.SendPropertyChanged("PaymentProviderID");
					this.OnPaymentProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryProvider_OrderPaymentDeliveryRel", Storage="_OrderDeliveryProvider", ThisKey="DeliveryProviderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderDeliveryProvider OrderDeliveryProvider
		{
			get
			{
				return this._OrderDeliveryProvider.Entity;
			}
			set
			{
				OrderDeliveryProvider previousValue = this._OrderDeliveryProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryProvider.Entity = null;
						previousValue.OrderPaymentDeliveryRels.Remove(this);
					}
					this._OrderDeliveryProvider.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentDeliveryRels.Add(this);
						this._DeliveryProviderID = value.ID;
					}
					else
					{
						this._DeliveryProviderID = default(int);
					}
					this.SendPropertyChanged("OrderDeliveryProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderPaymentProvider_OrderPaymentDeliveryRel", Storage="_OrderPaymentProvider", ThisKey="PaymentProviderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderPaymentProvider OrderPaymentProvider
		{
			get
			{
				return this._OrderPaymentProvider.Entity;
			}
			set
			{
				OrderPaymentProvider previousValue = this._OrderPaymentProvider.Entity;
				if (((previousValue != value) 
							|| (this._OrderPaymentProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderPaymentProvider.Entity = null;
						previousValue.OrderPaymentDeliveryRels.Remove(this);
					}
					this._OrderPaymentProvider.Entity = value;
					if ((value != null))
					{
						value.OrderPaymentDeliveryRels.Add(this);
						this._PaymentProviderID = value.ID;
					}
					else
					{
						this._PaymentProviderID = default(int);
					}
					this.SendPropertyChanged("OrderPaymentProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Status;
		
		private string _EngName;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_Orders", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private System.DateTime _CreateDate;
		
		private string _ImportID;
		
		private int _StatusID;
		
		private System.Nullable<int> _Number;
		
		private EntitySet<OrderComment> _OrderComments;
		
		private EntitySet<OrderedProduct> _OrderedProducts;
		
		private EntityRef<OrderDetail> _OrderDetail;
		
		private EntityRef<User> _User;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnImportIDChanging(string value);
    partial void OnImportIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public Order()
		{
			this._OrderComments = new EntitySet<OrderComment>(new Action<OrderComment>(this.attach_OrderComments), new Action<OrderComment>(this.detach_OrderComments));
			this._OrderedProducts = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProducts), new Action<OrderedProduct>(this.detach_OrderedProducts));
			this._OrderDetail = default(EntityRef<OrderDetail>);
			this._User = default(EntityRef<User>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportID", DbType="NVarChar(50)")]
		public string ImportID
		{
			get
			{
				return this._ImportID;
			}
			set
			{
				if ((this._ImportID != value))
				{
					this.OnImportIDChanging(value);
					this.SendPropertyChanging();
					this._ImportID = value;
					this.SendPropertyChanged("ImportID");
					this.OnImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComment", Storage="_OrderComments", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderComment> OrderComments
		{
			get
			{
				return this._OrderComments;
			}
			set
			{
				this._OrderComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedProduct", Storage="_OrderedProducts", ThisKey="ID", OtherKey="OrderID")]
		public EntitySet<OrderedProduct> OrderedProducts
		{
			get
			{
				return this._OrderedProducts;
			}
			set
			{
				this._OrderedProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetail", ThisKey="ID", OtherKey="OrderID", IsUnique=true, IsForeignKey=false)]
		public OrderDetail OrderDetail
		{
			get
			{
				return this._OrderDetail.Entity;
			}
			set
			{
				OrderDetail previousValue = this._OrderDetail.Entity;
				if (((previousValue != value) 
							|| (this._OrderDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDetail.Entity = null;
						previousValue.Order = null;
					}
					this._OrderDetail.Entity = value;
					if ((value != null))
					{
						value.Order = this;
					}
					this.SendPropertyChanged("OrderDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderComments(OrderComment entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderComments(OrderComment entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductsToCategories")]
	public partial class StoreProductsToCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _CategoryID;
		
		private int _OrderNum;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public StoreProductsToCategory()
		{
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreProductsToCategory", Storage="_StoreCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.StoreProductsToCategories.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.StoreProductsToCategories.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductsToCategory", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreProductsToCategories.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductsToCategories.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderComments")]
	public partial class OrderComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _Comment;
		
		private int _OrderID;
		
		private string _Author;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    #endregion
		
		public OrderComment()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(500)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderComment", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderComments.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderComments.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorePhoto3D")]
	public partial class StorePhoto3D : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _URL;
		
		private int _ProductID;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public StorePhoto3D()
		{
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StorePhoto3D", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StorePhoto3Ds.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StorePhoto3Ds.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderedProducts")]
	public partial class OrderedProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProductID;
		
		private decimal _SalePrice;
		
		private int _Amount;
		
		private string _ImportUID;
		
		private int _OrderID;
		
		private string _ProductName;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnSalePriceChanging(decimal value);
    partial void OnSalePriceChanged();
    partial void OnAmountChanging(int value);
    partial void OnAmountChanged();
    partial void OnImportUIDChanging(string value);
    partial void OnImportUIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    #endregion
		
		public OrderedProduct()
		{
			this._Order = default(EntityRef<Order>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int NOT NULL")]
		public int Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUID", DbType="NVarChar(50)")]
		public string ImportUID
		{
			get
			{
				return this._ImportUID;
			}
			set
			{
				if ((this._ImportUID != value))
				{
					this.OnImportUIDChanging(value);
					this.SendPropertyChanging();
					this._ImportUID = value;
					this.SendPropertyChanged("ImportUID");
					this.OnImportUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(500)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderedProduct", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderedProducts.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderedProducts.Add(this);
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_OrderedProduct", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.OrderedProducts.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.OrderedProducts.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageTypes")]
	public partial class PageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private string _Description;
		
		private int _Ordernum;
		
		private bool _Enabled;
		
		private int _TemplateID;
		
		private EntitySet<CMSPageCell> _CMSPageCells;
		
		private EntitySet<CMSPage> _CMSPages;
		
		private EntityRef<CMSPageTemplate> _CMSPageTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrdernumChanging(int value);
    partial void OnOrdernumChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    #endregion
		
		public PageType()
		{
			this._CMSPageCells = new EntitySet<CMSPageCell>(new Action<CMSPageCell>(this.attach_CMSPageCells), new Action<CMSPageCell>(this.detach_CMSPageCells));
			this._CMSPages = new EntitySet<CMSPage>(new Action<CMSPage>(this.attach_CMSPages), new Action<CMSPage>(this.detach_CMSPages));
			this._CMSPageTemplate = default(EntityRef<CMSPageTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordernum", DbType="Int NOT NULL")]
		public int Ordernum
		{
			get
			{
				return this._Ordernum;
			}
			set
			{
				if ((this._Ordernum != value))
				{
					this.OnOrdernumChanging(value);
					this.SendPropertyChanging();
					this._Ordernum = value;
					this.SendPropertyChanged("Ordernum");
					this.OnOrdernumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int NOT NULL")]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					if (this._CMSPageTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPageCell", Storage="_CMSPageCells", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<CMSPageCell> CMSPageCells
		{
			get
			{
				return this._CMSPageCells;
			}
			set
			{
				this._CMSPageCells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPage", Storage="_CMSPages", ThisKey="ID", OtherKey="Type")]
		public EntitySet<CMSPage> CMSPages
		{
			get
			{
				return this._CMSPages;
			}
			set
			{
				this._CMSPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageTemplate_PageType", Storage="_CMSPageTemplate", ThisKey="TemplateID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageTemplate CMSPageTemplate
		{
			get
			{
				return this._CMSPageTemplate.Entity;
			}
			set
			{
				CMSPageTemplate previousValue = this._CMSPageTemplate.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageTemplate.Entity = null;
						previousValue.PageTypes.Remove(this);
					}
					this._CMSPageTemplate.Entity = value;
					if ((value != null))
					{
						value.PageTypes.Add(this);
						this._TemplateID = value.ID;
					}
					else
					{
						this._TemplateID = default(int);
					}
					this.SendPropertyChanged("CMSPageTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMSPageCells(CMSPageCell entity)
		{
			this.SendPropertyChanging();
			entity.PageType = this;
		}
		
		private void detach_CMSPageCells(CMSPageCell entity)
		{
			this.SendPropertyChanging();
			entity.PageType = null;
		}
		
		private void attach_CMSPages(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.PageType = this;
		}
		
		private void detach_CMSPages(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.PageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageTemplates")]
	public partial class CMSPageTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TemplateName;
		
		private bool _IsActive;
		
		private string _Layout;
		
		private EntitySet<PageType> _PageTypes;
		
		private EntitySet<CMSPageTemplateCell> _CMSPageTemplateCells;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTemplateNameChanging(string value);
    partial void OnTemplateNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLayoutChanging(string value);
    partial void OnLayoutChanged();
    #endregion
		
		public CMSPageTemplate()
		{
			this._PageTypes = new EntitySet<PageType>(new Action<PageType>(this.attach_PageTypes), new Action<PageType>(this.detach_PageTypes));
			this._CMSPageTemplateCells = new EntitySet<CMSPageTemplateCell>(new Action<CMSPageTemplateCell>(this.attach_CMSPageTemplateCells), new Action<CMSPageTemplateCell>(this.detach_CMSPageTemplateCells));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TemplateName
		{
			get
			{
				return this._TemplateName;
			}
			set
			{
				if ((this._TemplateName != value))
				{
					this.OnTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._TemplateName = value;
					this.SendPropertyChanged("TemplateName");
					this.OnTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layout", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Layout
		{
			get
			{
				return this._Layout;
			}
			set
			{
				if ((this._Layout != value))
				{
					this.OnLayoutChanging(value);
					this.SendPropertyChanging();
					this._Layout = value;
					this.SendPropertyChanged("Layout");
					this.OnLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageTemplate_PageType", Storage="_PageTypes", ThisKey="ID", OtherKey="TemplateID")]
		public EntitySet<PageType> PageTypes
		{
			get
			{
				return this._PageTypes;
			}
			set
			{
				this._PageTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageTemplate_CMSPageTemplateCell", Storage="_CMSPageTemplateCells", ThisKey="ID", OtherKey="TemplateID")]
		public EntitySet<CMSPageTemplateCell> CMSPageTemplateCells
		{
			get
			{
				return this._CMSPageTemplateCells;
			}
			set
			{
				this._CMSPageTemplateCells.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageTypes(PageType entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageTemplate = this;
		}
		
		private void detach_PageTypes(PageType entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageTemplate = null;
		}
		
		private void attach_CMSPageTemplateCells(CMSPageTemplateCell entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageTemplate = this;
		}
		
		private void detach_CMSPageTemplateCells(CMSPageTemplateCell entity)
		{
			this.SendPropertyChanging();
			entity.CMSPageTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventCalendar")]
	public partial class EventCalendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DayOfWeek;
		
		private decimal _PricePercent;
		
		private int _Direction;
		
		private System.TimeSpan _StartTime;
		
		private System.TimeSpan _EndTime;
		
		private int _EventGroup;
		
		private bool _ShowDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDayOfWeekChanging(int value);
    partial void OnDayOfWeekChanged();
    partial void OnPricePercentChanging(decimal value);
    partial void OnPricePercentChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    partial void OnStartTimeChanging(System.TimeSpan value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.TimeSpan value);
    partial void OnEndTimeChanged();
    partial void OnEventGroupChanging(int value);
    partial void OnEventGroupChanged();
    partial void OnShowDiscountChanging(bool value);
    partial void OnShowDiscountChanged();
    #endregion
		
		public EventCalendar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="Int NOT NULL")]
		public int DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePercent", DbType="Decimal(18,2) NOT NULL")]
		public decimal PricePercent
		{
			get
			{
				return this._PricePercent;
			}
			set
			{
				if ((this._PricePercent != value))
				{
					this.OnPricePercentChanging(value);
					this.SendPropertyChanging();
					this._PricePercent = value;
					this.SendPropertyChanged("PricePercent");
					this.OnPricePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time NOT NULL")]
		public System.TimeSpan StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time NOT NULL")]
		public System.TimeSpan EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventGroup", DbType="Int NOT NULL")]
		public int EventGroup
		{
			get
			{
				return this._EventGroup;
			}
			set
			{
				if ((this._EventGroup != value))
				{
					this.OnEventGroupChanging(value);
					this.SendPropertyChanging();
					this._EventGroup = value;
					this.SendPropertyChanged("EventGroup");
					this.OnEventGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDiscount", DbType="Bit NOT NULL")]
		public bool ShowDiscount
		{
			get
			{
				return this._ShowDiscount;
			}
			set
			{
				if ((this._ShowDiscount != value))
				{
					this.OnShowDiscountChanging(value);
					this.SendPropertyChanging();
					this._ShowDiscount = value;
					this.SendPropertyChanged("ShowDiscount");
					this.OnShowDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductFavorites")]
	public partial class StoreProductFavorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private int _ProductID;
		
		private EntityRef<User> _User;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public StoreProductFavorite()
		{
			this._User = default(EntityRef<User>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoreProductFavorite", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoreProductFavorites.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoreProductFavorites.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductFavorite", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreProductFavorites.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductFavorites.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductComments")]
	public partial class StoreProductComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CommentID;
		
		private System.Nullable<int> _ProductID;
		
		private EntityRef<Comment> _Comment;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCommentIDChanging(System.Nullable<int> value);
    partial void OnCommentIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    #endregion
		
		public StoreProductComment()
		{
			this._Comment = default(EntityRef<Comment>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="Int")]
		public System.Nullable<int> CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_StoreProductComment", Storage="_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.StoreProductComments.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.StoreProductComments.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductComment", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreProductComments.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductComments.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageLangs")]
	public partial class CMSPageLang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LanguageID;
		
		private int _CMSPageID;
		
		private string _PageName;
		
		private string _Title;
		
		private string _Keywords;
		
		private string _Description;
		
		private string _FullName;
		
		private string _FullNameH2;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCMSPageIDChanging(int value);
    partial void OnCMSPageIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnFullNameH2Changing(string value);
    partial void OnFullNameH2Changed();
    #endregion
		
		public CMSPageLang()
		{
			this._Language = default(EntityRef<Language>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSPageID", DbType="Int NOT NULL")]
		public int CMSPageID
		{
			get
			{
				return this._CMSPageID;
			}
			set
			{
				if ((this._CMSPageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMSPageIDChanging(value);
					this.SendPropertyChanging();
					this._CMSPageID = value;
					this.SendPropertyChanged("CMSPageID");
					this.OnCMSPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameH2", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FullNameH2
		{
			get
			{
				return this._FullNameH2;
			}
			set
			{
				if ((this._FullNameH2 != value))
				{
					this.OnFullNameH2Changing(value);
					this.SendPropertyChanging();
					this._FullNameH2 = value;
					this.SendPropertyChanged("FullNameH2");
					this.OnFullNameH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageLang", Storage="_Language", ThisKey="LanguageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CMSPageLangs.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CMSPageLangs.Add(this);
						this._LanguageID = value.ID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageLang", Storage="_CMSPage", ThisKey="CMSPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.CMSPageLangs.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.CMSPageLangs.Add(this);
						this._CMSPageID = value.ID;
					}
					else
					{
						this._CMSPageID = default(int);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentsRatings")]
	public partial class CommentsRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private bool _Useful;
		
		private int _CommentID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Comment> _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUsefulChanging(bool value);
    partial void OnUsefulChanged();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    #endregion
		
		public CommentsRating()
		{
			this._User = default(EntityRef<User>);
			this._Comment = default(EntityRef<Comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Useful", DbType="Bit NOT NULL")]
		public bool Useful
		{
			get
			{
				return this._Useful;
			}
			set
			{
				if ((this._Useful != value))
				{
					this.OnUsefulChanging(value);
					this.SendPropertyChanging();
					this._Useful = value;
					this.SendPropertyChanged("Useful");
					this.OnUsefulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="Int NOT NULL")]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentsRating", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommentsRatings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommentsRatings.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_CommentsRating", Storage="_Comment", ThisKey="CommentID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.CommentsRatings.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.CommentsRatings.Add(this);
						this._CommentID = value.ID;
					}
					else
					{
						this._CommentID = default(int);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteCounters")]
	public partial class SiteCounter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public SiteCounter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<int> _RegionID;
		
		private int _PaymentType;
		
		private int _DeliveryType;
		
		private decimal _DeliveryCost;
		
		private string _PaymentTXN;
		
		private System.Nullable<decimal> _OrderCost;
		
		private System.Nullable<decimal> _DiscountCost;
		
		private string _Address;
		
		private decimal _Volume;
		
		private decimal _Weight;
		
		private int _AddressID;
		
		private EntityRef<OrderDeliveryRegion> _OrderDeliveryRegion;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnDeliveryTypeChanging(int value);
    partial void OnDeliveryTypeChanged();
    partial void OnDeliveryCostChanging(decimal value);
    partial void OnDeliveryCostChanged();
    partial void OnPaymentTXNChanging(string value);
    partial void OnPaymentTXNChanged();
    partial void OnOrderCostChanging(System.Nullable<decimal> value);
    partial void OnOrderCostChanged();
    partial void OnDiscountCostChanging(System.Nullable<decimal> value);
    partial void OnDiscountCostChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnVolumeChanging(decimal value);
    partial void OnVolumeChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    #endregion
		
		public OrderDetail()
		{
			this._OrderDeliveryRegion = default(EntityRef<OrderDeliveryRegion>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._OrderDeliveryRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryType", DbType="Int NOT NULL")]
		public int DeliveryType
		{
			get
			{
				return this._DeliveryType;
			}
			set
			{
				if ((this._DeliveryType != value))
				{
					this.OnDeliveryTypeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryType = value;
					this.SendPropertyChanged("DeliveryType");
					this.OnDeliveryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal DeliveryCost
		{
			get
			{
				return this._DeliveryCost;
			}
			set
			{
				if ((this._DeliveryCost != value))
				{
					this.OnDeliveryCostChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCost = value;
					this.SendPropertyChanged("DeliveryCost");
					this.OnDeliveryCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTXN", DbType="NVarChar(50)")]
		public string PaymentTXN
		{
			get
			{
				return this._PaymentTXN;
			}
			set
			{
				if ((this._PaymentTXN != value))
				{
					this.OnPaymentTXNChanging(value);
					this.SendPropertyChanging();
					this._PaymentTXN = value;
					this.SendPropertyChanged("PaymentTXN");
					this.OnPaymentTXNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OrderCost
		{
			get
			{
				return this._OrderCost;
			}
			set
			{
				if ((this._OrderCost != value))
				{
					this.OnOrderCostChanging(value);
					this.SendPropertyChanging();
					this._OrderCost = value;
					this.SendPropertyChanged("OrderCost");
					this.OnOrderCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountCost
		{
			get
			{
				return this._DiscountCost;
			}
			set
			{
				if ((this._DiscountCost != value))
				{
					this.OnDiscountCostChanging(value);
					this.SendPropertyChanging();
					this._DiscountCost = value;
					this.SendPropertyChanged("DiscountCost");
					this.OnDiscountCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(18,2) NOT NULL")]
		public decimal Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL")]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderDeliveryRegion_OrderDetail", Storage="_OrderDeliveryRegion", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public OrderDeliveryRegion OrderDeliveryRegion
		{
			get
			{
				return this._OrderDeliveryRegion.Entity;
			}
			set
			{
				OrderDeliveryRegion previousValue = this._OrderDeliveryRegion.Entity;
				if (((previousValue != value) 
							|| (this._OrderDeliveryRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderDeliveryRegion.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._OrderDeliveryRegion.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderDeliveryRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetail = null;
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetail = this;
						this._OrderID = value.ID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderAdresses")]
	public partial class OrderAdress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Town;
		
		private string _Street;
		
		private string _House;
		
		private string _Building;
		
		private string _BuildingPart;
		
		private string _Doorway;
		
		private string _Floor;
		
		private string _Flat;
		
		private string _Comment;
		
		private decimal _Lat;
		
		private decimal _Lng;
		
		private int _Zoom;
		
		private System.Guid _UserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnBuildingChanging(string value);
    partial void OnBuildingChanged();
    partial void OnBuildingPartChanging(string value);
    partial void OnBuildingPartChanged();
    partial void OnDoorwayChanging(string value);
    partial void OnDoorwayChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLatChanging(decimal value);
    partial void OnLatChanged();
    partial void OnLngChanging(decimal value);
    partial void OnLngChanged();
    partial void OnZoomChanging(int value);
    partial void OnZoomChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public OrderAdress()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(200)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(200)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(200)")]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="NVarChar(200)")]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingPart", DbType="NVarChar(200)")]
		public string BuildingPart
		{
			get
			{
				return this._BuildingPart;
			}
			set
			{
				if ((this._BuildingPart != value))
				{
					this.OnBuildingPartChanging(value);
					this.SendPropertyChanging();
					this._BuildingPart = value;
					this.SendPropertyChanged("BuildingPart");
					this.OnBuildingPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doorway", DbType="NVarChar(200)")]
		public string Doorway
		{
			get
			{
				return this._Doorway;
			}
			set
			{
				if ((this._Doorway != value))
				{
					this.OnDoorwayChanging(value);
					this.SendPropertyChanging();
					this._Doorway = value;
					this.SendPropertyChanged("Doorway");
					this.OnDoorwayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(200)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(200)")]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="Decimal(18,12) NOT NULL")]
		public decimal Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="Decimal(18,12) NOT NULL")]
		public decimal Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zoom", DbType="Int NOT NULL")]
		public int Zoom
		{
			get
			{
				return this._Zoom;
			}
			set
			{
				if ((this._Zoom != value))
				{
					this.OnZoomChanging(value);
					this.SendPropertyChanging();
					this._Zoom = value;
					this.SendPropertyChanged("Zoom");
					this.OnZoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OrderAdress", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.OrderAdresses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.OrderAdresses.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreCharacterToProducts")]
	public partial class StoreCharacterToProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProductID;
		
		private int _CharacterValueID;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
		private EntityRef<StoreCharacterValue> _StoreCharacterValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnCharacterValueIDChanging(int value);
    partial void OnCharacterValueIDChanged();
    #endregion
		
		public StoreCharacterToProduct()
		{
			this._StoreProduct = default(EntityRef<StoreProduct>);
			this._StoreCharacterValue = default(EntityRef<StoreCharacterValue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterValueID", DbType="Int NOT NULL")]
		public int CharacterValueID
		{
			get
			{
				return this._CharacterValueID;
			}
			set
			{
				if ((this._CharacterValueID != value))
				{
					if (this._StoreCharacterValue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterValueIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterValueID = value;
					this.SendPropertyChanged("CharacterValueID");
					this.OnCharacterValueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreCharacterToProduct", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreCharacterToProducts.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreCharacterToProducts.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCharacterValue_StoreCharacterToProduct", Storage="_StoreCharacterValue", ThisKey="CharacterValueID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCharacterValue StoreCharacterValue
		{
			get
			{
				return this._StoreCharacterValue.Entity;
			}
			set
			{
				StoreCharacterValue previousValue = this._StoreCharacterValue.Entity;
				if (((previousValue != value) 
							|| (this._StoreCharacterValue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCharacterValue.Entity = null;
						previousValue.StoreCharacterToProducts.Remove(this);
					}
					this._StoreCharacterValue.Entity = value;
					if ((value != null))
					{
						value.StoreCharacterToProducts.Add(this);
						this._CharacterValueID = value.ID;
					}
					else
					{
						this._CharacterValueID = default(int);
					}
					this.SendPropertyChanged("StoreCharacterValue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductTagRels")]
	public partial class StoreProductTagRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TagID;
		
		private int _ProductID;
		
		private EntityRef<StoreProductTag> _StoreProductTag;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public StoreProductTagRel()
		{
			this._StoreProductTag = default(EntityRef<StoreProductTag>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL")]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._StoreProductTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProductTag_StoreProductTagRel", Storage="_StoreProductTag", ThisKey="TagID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProductTag StoreProductTag
		{
			get
			{
				return this._StoreProductTag.Entity;
			}
			set
			{
				StoreProductTag previousValue = this._StoreProductTag.Entity;
				if (((previousValue != value) 
							|| (this._StoreProductTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProductTag.Entity = null;
						previousValue.StoreProductTagRels.Remove(this);
					}
					this._StoreProductTag.Entity = value;
					if ((value != null))
					{
						value.StoreProductTagRels.Add(this);
						this._TagID = value.ID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("StoreProductTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductTagRel", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreProductTagRels.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductTagRels.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductTags")]
	public partial class StoreProductTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tag;
		
		private EntitySet<StoreProductTagRel> _StoreProductTagRels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public StoreProductTag()
		{
			this._StoreProductTagRels = new EntitySet<StoreProductTagRel>(new Action<StoreProductTagRel>(this.attach_StoreProductTagRels), new Action<StoreProductTagRel>(this.detach_StoreProductTagRels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProductTag_StoreProductTagRel", Storage="_StoreProductTagRels", ThisKey="ID", OtherKey="TagID")]
		public EntitySet<StoreProductTagRel> StoreProductTagRels
		{
			get
			{
				return this._StoreProductTagRels;
			}
			set
			{
				this._StoreProductTagRels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreProductTagRels(StoreProductTagRel entity)
		{
			this.SendPropertyChanging();
			entity.StoreProductTag = this;
		}
		
		private void detach_StoreProductTagRels(StoreProductTagRel entity)
		{
			this.SendPropertyChanging();
			entity.StoreProductTag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductBlocks")]
	public partial class StoreProductBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProductID;
		
		private string _GroupName;
		
		private int _OrderNum;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public StoreProductBlock()
		{
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductBlock", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreProductBlocks.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductBlocks.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageMenuCustom")]
	public partial class CMSPageMenuCustom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _Visible;
		
		private string _UID;
		
		private string _URL;
		
		private int _OrderNum;
		
		private System.Data.Linq.Binary _Image;
		
		private bool _IsHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnIsHeaderChanging(bool value);
    partial void OnIsHeaderChanged();
    #endregion
		
		public CMSPageMenuCustom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHeader", DbType="Bit NOT NULL")]
		public bool IsHeader
		{
			get
			{
				return this._IsHeader;
			}
			set
			{
				if ((this._IsHeader != value))
				{
					this.OnIsHeaderChanging(value);
					this.SendPropertyChanging();
					this._IsHeader = value;
					this.SendPropertyChanged("IsHeader");
					this.OnIsHeaderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageTemplateCells")]
	public partial class CMSPageTemplateCell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CellName;
		
		private string _CellID;
		
		private int _RowNum;
		
		private int _ColNum;
		
		private int _RowSpan;
		
		private int _ColSpan;
		
		private int _TemplateID;
		
		private int _MinHeight;
		
		private EntityRef<CMSPageTemplate> _CMSPageTemplate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCellNameChanging(string value);
    partial void OnCellNameChanged();
    partial void OnCellIDChanging(string value);
    partial void OnCellIDChanged();
    partial void OnRowNumChanging(int value);
    partial void OnRowNumChanged();
    partial void OnColNumChanging(int value);
    partial void OnColNumChanged();
    partial void OnRowSpanChanging(int value);
    partial void OnRowSpanChanged();
    partial void OnColSpanChanging(int value);
    partial void OnColSpanChanged();
    partial void OnTemplateIDChanging(int value);
    partial void OnTemplateIDChanged();
    partial void OnMinHeightChanging(int value);
    partial void OnMinHeightChanged();
    #endregion
		
		public CMSPageTemplateCell()
		{
			this._CMSPageTemplate = default(EntityRef<CMSPageTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CellName
		{
			get
			{
				return this._CellName;
			}
			set
			{
				if ((this._CellName != value))
				{
					this.OnCellNameChanging(value);
					this.SendPropertyChanging();
					this._CellName = value;
					this.SendPropertyChanged("CellName");
					this.OnCellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CellID
		{
			get
			{
				return this._CellID;
			}
			set
			{
				if ((this._CellID != value))
				{
					this.OnCellIDChanging(value);
					this.SendPropertyChanging();
					this._CellID = value;
					this.SendPropertyChanged("CellID");
					this.OnCellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="Int NOT NULL")]
		public int RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColNum", DbType="Int NOT NULL")]
		public int ColNum
		{
			get
			{
				return this._ColNum;
			}
			set
			{
				if ((this._ColNum != value))
				{
					this.OnColNumChanging(value);
					this.SendPropertyChanging();
					this._ColNum = value;
					this.SendPropertyChanged("ColNum");
					this.OnColNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowSpan", DbType="Int NOT NULL")]
		public int RowSpan
		{
			get
			{
				return this._RowSpan;
			}
			set
			{
				if ((this._RowSpan != value))
				{
					this.OnRowSpanChanging(value);
					this.SendPropertyChanging();
					this._RowSpan = value;
					this.SendPropertyChanged("RowSpan");
					this.OnRowSpanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColSpan", DbType="Int NOT NULL")]
		public int ColSpan
		{
			get
			{
				return this._ColSpan;
			}
			set
			{
				if ((this._ColSpan != value))
				{
					this.OnColSpanChanging(value);
					this.SendPropertyChanging();
					this._ColSpan = value;
					this.SendPropertyChanged("ColSpan");
					this.OnColSpanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int NOT NULL")]
		public int TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					if (this._CMSPageTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHeight", DbType="Int NOT NULL")]
		public int MinHeight
		{
			get
			{
				return this._MinHeight;
			}
			set
			{
				if ((this._MinHeight != value))
				{
					this.OnMinHeightChanging(value);
					this.SendPropertyChanging();
					this._MinHeight = value;
					this.SendPropertyChanged("MinHeight");
					this.OnMinHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageTemplate_CMSPageTemplateCell", Storage="_CMSPageTemplate", ThisKey="TemplateID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageTemplate CMSPageTemplate
		{
			get
			{
				return this._CMSPageTemplate.Entity;
			}
			set
			{
				CMSPageTemplate previousValue = this._CMSPageTemplate.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageTemplate.Entity = null;
						previousValue.CMSPageTemplateCells.Remove(this);
					}
					this._CMSPageTemplate.Entity = value;
					if ((value != null))
					{
						value.CMSPageTemplateCells.Add(this);
						this._TemplateID = value.ID;
					}
					else
					{
						this._TemplateID = default(int);
					}
					this.SendPropertyChanged("CMSPageTemplate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Themes")]
	public partial class Theme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<ThemeProperty> _ThemeProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Theme()
		{
			this._ThemeProperties = new EntitySet<ThemeProperty>(new Action<ThemeProperty>(this.attach_ThemeProperties), new Action<ThemeProperty>(this.detach_ThemeProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theme_ThemeProperty", Storage="_ThemeProperties", ThisKey="ID", OtherKey="ThemeID")]
		public EntitySet<ThemeProperty> ThemeProperties
		{
			get
			{
				return this._ThemeProperties;
			}
			set
			{
				this._ThemeProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThemeProperties(ThemeProperty entity)
		{
			this.SendPropertyChanging();
			entity.Theme = this;
		}
		
		private void detach_ThemeProperties(ThemeProperty entity)
		{
			this.SendPropertyChanging();
			entity.Theme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThemeProperties")]
	public partial class ThemeProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _GroupName;
		
		private int _OrderNum;
		
		private int _ThemeID;
		
		private System.Data.Linq.Binary _ValueBinary;
		
		private string _ValueText;
		
		private string _ValuePropName;
		
		private string _ClassName;
		
		private string _Editor;
		
		private string _HelpImagePath;
		
		private string _ValueTemplate;
		
		private EntityRef<Theme> _Theme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnThemeIDChanging(int value);
    partial void OnThemeIDChanged();
    partial void OnValueBinaryChanging(System.Data.Linq.Binary value);
    partial void OnValueBinaryChanged();
    partial void OnValueTextChanging(string value);
    partial void OnValueTextChanged();
    partial void OnValuePropNameChanging(string value);
    partial void OnValuePropNameChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnHelpImagePathChanging(string value);
    partial void OnHelpImagePathChanged();
    partial void OnValueTemplateChanging(string value);
    partial void OnValueTemplateChanged();
    #endregion
		
		public ThemeProperty()
		{
			this._Theme = default(EntityRef<Theme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", DbType="Int NOT NULL")]
		public int ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					if (this._Theme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueBinary", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ValueBinary
		{
			get
			{
				return this._ValueBinary;
			}
			set
			{
				if ((this._ValueBinary != value))
				{
					this.OnValueBinaryChanging(value);
					this.SendPropertyChanging();
					this._ValueBinary = value;
					this.SendPropertyChanged("ValueBinary");
					this.OnValueBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueText", DbType="NVarChar(MAX)")]
		public string ValueText
		{
			get
			{
				return this._ValueText;
			}
			set
			{
				if ((this._ValueText != value))
				{
					this.OnValueTextChanging(value);
					this.SendPropertyChanging();
					this._ValueText = value;
					this.SendPropertyChanged("ValueText");
					this.OnValueTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValuePropName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ValuePropName
		{
			get
			{
				return this._ValuePropName;
			}
			set
			{
				if ((this._ValuePropName != value))
				{
					this.OnValuePropNameChanging(value);
					this.SendPropertyChanging();
					this._ValuePropName = value;
					this.SendPropertyChanged("ValuePropName");
					this.OnValuePropNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpImagePath", DbType="NVarChar(500)")]
		public string HelpImagePath
		{
			get
			{
				return this._HelpImagePath;
			}
			set
			{
				if ((this._HelpImagePath != value))
				{
					this.OnHelpImagePathChanging(value);
					this.SendPropertyChanging();
					this._HelpImagePath = value;
					this.SendPropertyChanged("HelpImagePath");
					this.OnHelpImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTemplate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ValueTemplate
		{
			get
			{
				return this._ValueTemplate;
			}
			set
			{
				if ((this._ValueTemplate != value))
				{
					this.OnValueTemplateChanging(value);
					this.SendPropertyChanging();
					this._ValueTemplate = value;
					this.SendPropertyChanged("ValueTemplate");
					this.OnValueTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theme_ThemeProperty", Storage="_Theme", ThisKey="ThemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Theme Theme
		{
			get
			{
				return this._Theme.Entity;
			}
			set
			{
				Theme previousValue = this._Theme.Entity;
				if (((previousValue != value) 
							|| (this._Theme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theme.Entity = null;
						previousValue.ThemeProperties.Remove(this);
					}
					this._Theme.Entity = value;
					if ((value != null))
					{
						value.ThemeProperties.Add(this);
						this._ThemeID = value.ID;
					}
					else
					{
						this._ThemeID = default(int);
					}
					this.SendPropertyChanged("Theme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharAnswerTemplate")]
	public partial class CharAnswerTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public CharAnswerTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreCategories")]
	public partial class StoreCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _Description;
		
		private string _Slug;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private int _OrderNum;
		
		private string _PageHeader;
		
		private string _PageSubHeader;
		
		private System.Data.Linq.Binary _Image;
		
		private string _StaticDescription;
		
		private string _StaticDescriptionLower;
		
		private string _PageHeaderH3;
		
		private string _PageTextH3Upper;
		
		private string _PageTextH3Lower;
		
		private bool _ShowArticles;
		
		private string _MenuUpperText;
		
		private string _MenuImage;
		
		private bool _Deleted;
		
		private bool _ShowSlider;
		
		private bool _ShowInMenu;
		
		private bool _ShowInCatalog;
		
		private bool _ShowInBreadcrumb;
		
		private System.Data.Linq.Binary _CategoryImage;
		
		private string _CategoryImageAlt;
		
		private string _CategoryImageTitle;
		
		private string _TagList;
		
		private string _MenuImageAlt;
		
		private string _MenuImageTitle;
		
		private System.DateTime _LastMod;
		
		private bool _ShowDescrAnim1;
		
		private bool _ShowDescrAnim2;
		
		private bool _ShowBigIcons;
		
		private bool _ShowDescrAnim3;
		
		private bool _ShowDescrAnim4;
		
		private bool _ShowDescrAnim5;
		
		private string _StaticDescriptionA;
		
		private string _StaticDescriptionB;
		
		private string _StaticDescriptionC;
		
		private EntitySet<StoreProductsToCategory> _StoreProductsToCategories;
		
		private EntitySet<StoreCategory> _Children;
		
		private EntitySet<StoreCategoryRelation> _StoreCategoryRelations;
		
		private EntitySet<Filter> _Filters;
		
		private EntitySet<AnimeBlock> _AnimeBlocks;
		
		private EntitySet<StoreProductListImageCategory> _StoreProductListImageCategories;
		
		private EntitySet<CMSPageSlider> _CMSPageSliders;
		
		private EntitySet<StoreFile> _StoreFiles;
		
		private EntitySet<CMSPageVideo> _CMSPageVideos;
		
		private EntityRef<StoreCategory> _Parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnPageHeaderChanging(string value);
    partial void OnPageHeaderChanged();
    partial void OnPageSubHeaderChanging(string value);
    partial void OnPageSubHeaderChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnStaticDescriptionChanging(string value);
    partial void OnStaticDescriptionChanged();
    partial void OnStaticDescriptionLowerChanging(string value);
    partial void OnStaticDescriptionLowerChanged();
    partial void OnPageHeaderH3Changing(string value);
    partial void OnPageHeaderH3Changed();
    partial void OnPageTextH3UpperChanging(string value);
    partial void OnPageTextH3UpperChanged();
    partial void OnPageTextH3LowerChanging(string value);
    partial void OnPageTextH3LowerChanged();
    partial void OnShowArticlesChanging(bool value);
    partial void OnShowArticlesChanged();
    partial void OnMenuUpperTextChanging(string value);
    partial void OnMenuUpperTextChanged();
    partial void OnMenuImageChanging(string value);
    partial void OnMenuImageChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnShowSliderChanging(bool value);
    partial void OnShowSliderChanged();
    partial void OnShowInMenuChanging(bool value);
    partial void OnShowInMenuChanged();
    partial void OnShowInCatalogChanging(bool value);
    partial void OnShowInCatalogChanged();
    partial void OnShowInBreadcrumbChanging(bool value);
    partial void OnShowInBreadcrumbChanged();
    partial void OnCategoryImageChanging(System.Data.Linq.Binary value);
    partial void OnCategoryImageChanged();
    partial void OnCategoryImageAltChanging(string value);
    partial void OnCategoryImageAltChanged();
    partial void OnCategoryImageTitleChanging(string value);
    partial void OnCategoryImageTitleChanged();
    partial void OnTagListChanging(string value);
    partial void OnTagListChanged();
    partial void OnMenuImageAltChanging(string value);
    partial void OnMenuImageAltChanged();
    partial void OnMenuImageTitleChanging(string value);
    partial void OnMenuImageTitleChanged();
    partial void OnLastModChanging(System.DateTime value);
    partial void OnLastModChanged();
    partial void OnShowDescrAnim1Changing(bool value);
    partial void OnShowDescrAnim1Changed();
    partial void OnShowDescrAnim2Changing(bool value);
    partial void OnShowDescrAnim2Changed();
    partial void OnShowBigIconsChanging(bool value);
    partial void OnShowBigIconsChanged();
    partial void OnShowDescrAnim3Changing(bool value);
    partial void OnShowDescrAnim3Changed();
    partial void OnShowDescrAnim4Changing(bool value);
    partial void OnShowDescrAnim4Changed();
    partial void OnShowDescrAnim5Changing(bool value);
    partial void OnShowDescrAnim5Changed();
    partial void OnStaticDescriptionAChanging(string value);
    partial void OnStaticDescriptionAChanged();
    partial void OnStaticDescriptionBChanging(string value);
    partial void OnStaticDescriptionBChanged();
    partial void OnStaticDescriptionCChanging(string value);
    partial void OnStaticDescriptionCChanged();
    #endregion
		
		public StoreCategory()
		{
			this._StoreProductsToCategories = new EntitySet<StoreProductsToCategory>(new Action<StoreProductsToCategory>(this.attach_StoreProductsToCategories), new Action<StoreProductsToCategory>(this.detach_StoreProductsToCategories));
			this._Children = new EntitySet<StoreCategory>(new Action<StoreCategory>(this.attach_Children), new Action<StoreCategory>(this.detach_Children));
			this._StoreCategoryRelations = new EntitySet<StoreCategoryRelation>(new Action<StoreCategoryRelation>(this.attach_StoreCategoryRelations), new Action<StoreCategoryRelation>(this.detach_StoreCategoryRelations));
			this._Filters = new EntitySet<Filter>(new Action<Filter>(this.attach_Filters), new Action<Filter>(this.detach_Filters));
			this._AnimeBlocks = new EntitySet<AnimeBlock>(new Action<AnimeBlock>(this.attach_AnimeBlocks), new Action<AnimeBlock>(this.detach_AnimeBlocks));
			this._StoreProductListImageCategories = new EntitySet<StoreProductListImageCategory>(new Action<StoreProductListImageCategory>(this.attach_StoreProductListImageCategories), new Action<StoreProductListImageCategory>(this.detach_StoreProductListImageCategories));
			this._CMSPageSliders = new EntitySet<CMSPageSlider>(new Action<CMSPageSlider>(this.attach_CMSPageSliders), new Action<CMSPageSlider>(this.detach_CMSPageSliders));
			this._StoreFiles = new EntitySet<StoreFile>(new Action<StoreFile>(this.attach_StoreFiles), new Action<StoreFile>(this.detach_StoreFiles));
			this._CMSPageVideos = new EntitySet<CMSPageVideo>(new Action<CMSPageVideo>(this.attach_CMSPageVideos), new Action<CMSPageVideo>(this.detach_CMSPageVideos));
			this._Parent = default(EntityRef<StoreCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(128)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="NVarChar(MAX)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="NVarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="NVarChar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHeader", DbType="NVarChar(MAX)")]
		public string PageHeader
		{
			get
			{
				return this._PageHeader;
			}
			set
			{
				if ((this._PageHeader != value))
				{
					this.OnPageHeaderChanging(value);
					this.SendPropertyChanging();
					this._PageHeader = value;
					this.SendPropertyChanged("PageHeader");
					this.OnPageHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSubHeader", DbType="NVarChar(MAX)")]
		public string PageSubHeader
		{
			get
			{
				return this._PageSubHeader;
			}
			set
			{
				if ((this._PageSubHeader != value))
				{
					this.OnPageSubHeaderChanging(value);
					this.SendPropertyChanging();
					this._PageSubHeader = value;
					this.SendPropertyChanged("PageSubHeader");
					this.OnPageSubHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescription", DbType="NVarChar(MAX)")]
		public string StaticDescription
		{
			get
			{
				return this._StaticDescription;
			}
			set
			{
				if ((this._StaticDescription != value))
				{
					this.OnStaticDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StaticDescription = value;
					this.SendPropertyChanged("StaticDescription");
					this.OnStaticDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionLower", DbType="NVarChar(MAX)")]
		public string StaticDescriptionLower
		{
			get
			{
				return this._StaticDescriptionLower;
			}
			set
			{
				if ((this._StaticDescriptionLower != value))
				{
					this.OnStaticDescriptionLowerChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionLower = value;
					this.SendPropertyChanged("StaticDescriptionLower");
					this.OnStaticDescriptionLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHeaderH3", DbType="NVarChar(MAX)")]
		public string PageHeaderH3
		{
			get
			{
				return this._PageHeaderH3;
			}
			set
			{
				if ((this._PageHeaderH3 != value))
				{
					this.OnPageHeaderH3Changing(value);
					this.SendPropertyChanging();
					this._PageHeaderH3 = value;
					this.SendPropertyChanged("PageHeaderH3");
					this.OnPageHeaderH3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTextH3Upper", DbType="NVarChar(MAX)")]
		public string PageTextH3Upper
		{
			get
			{
				return this._PageTextH3Upper;
			}
			set
			{
				if ((this._PageTextH3Upper != value))
				{
					this.OnPageTextH3UpperChanging(value);
					this.SendPropertyChanging();
					this._PageTextH3Upper = value;
					this.SendPropertyChanged("PageTextH3Upper");
					this.OnPageTextH3UpperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTextH3Lower", DbType="NVarChar(MAX)")]
		public string PageTextH3Lower
		{
			get
			{
				return this._PageTextH3Lower;
			}
			set
			{
				if ((this._PageTextH3Lower != value))
				{
					this.OnPageTextH3LowerChanging(value);
					this.SendPropertyChanging();
					this._PageTextH3Lower = value;
					this.SendPropertyChanged("PageTextH3Lower");
					this.OnPageTextH3LowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowArticles", DbType="Bit NOT NULL")]
		public bool ShowArticles
		{
			get
			{
				return this._ShowArticles;
			}
			set
			{
				if ((this._ShowArticles != value))
				{
					this.OnShowArticlesChanging(value);
					this.SendPropertyChanging();
					this._ShowArticles = value;
					this.SendPropertyChanged("ShowArticles");
					this.OnShowArticlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuUpperText", DbType="NVarChar(MAX)")]
		public string MenuUpperText
		{
			get
			{
				return this._MenuUpperText;
			}
			set
			{
				if ((this._MenuUpperText != value))
				{
					this.OnMenuUpperTextChanging(value);
					this.SendPropertyChanging();
					this._MenuUpperText = value;
					this.SendPropertyChanged("MenuUpperText");
					this.OnMenuUpperTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuImage", DbType="NVarChar(400)")]
		public string MenuImage
		{
			get
			{
				return this._MenuImage;
			}
			set
			{
				if ((this._MenuImage != value))
				{
					this.OnMenuImageChanging(value);
					this.SendPropertyChanging();
					this._MenuImage = value;
					this.SendPropertyChanged("MenuImage");
					this.OnMenuImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowSlider", DbType="Bit NOT NULL")]
		public bool ShowSlider
		{
			get
			{
				return this._ShowSlider;
			}
			set
			{
				if ((this._ShowSlider != value))
				{
					this.OnShowSliderChanging(value);
					this.SendPropertyChanging();
					this._ShowSlider = value;
					this.SendPropertyChanged("ShowSlider");
					this.OnShowSliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInMenu", DbType="Bit NOT NULL")]
		public bool ShowInMenu
		{
			get
			{
				return this._ShowInMenu;
			}
			set
			{
				if ((this._ShowInMenu != value))
				{
					this.OnShowInMenuChanging(value);
					this.SendPropertyChanging();
					this._ShowInMenu = value;
					this.SendPropertyChanged("ShowInMenu");
					this.OnShowInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInCatalog", DbType="Bit NOT NULL")]
		public bool ShowInCatalog
		{
			get
			{
				return this._ShowInCatalog;
			}
			set
			{
				if ((this._ShowInCatalog != value))
				{
					this.OnShowInCatalogChanging(value);
					this.SendPropertyChanging();
					this._ShowInCatalog = value;
					this.SendPropertyChanged("ShowInCatalog");
					this.OnShowInCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInBreadcrumb", DbType="Bit NOT NULL")]
		public bool ShowInBreadcrumb
		{
			get
			{
				return this._ShowInBreadcrumb;
			}
			set
			{
				if ((this._ShowInBreadcrumb != value))
				{
					this.OnShowInBreadcrumbChanging(value);
					this.SendPropertyChanging();
					this._ShowInBreadcrumb = value;
					this.SendPropertyChanged("ShowInBreadcrumb");
					this.OnShowInBreadcrumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CategoryImage
		{
			get
			{
				return this._CategoryImage;
			}
			set
			{
				if ((this._CategoryImage != value))
				{
					this.OnCategoryImageChanging(value);
					this.SendPropertyChanging();
					this._CategoryImage = value;
					this.SendPropertyChanged("CategoryImage");
					this.OnCategoryImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryImageAlt", DbType="NVarChar(MAX)")]
		public string CategoryImageAlt
		{
			get
			{
				return this._CategoryImageAlt;
			}
			set
			{
				if ((this._CategoryImageAlt != value))
				{
					this.OnCategoryImageAltChanging(value);
					this.SendPropertyChanging();
					this._CategoryImageAlt = value;
					this.SendPropertyChanged("CategoryImageAlt");
					this.OnCategoryImageAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryImageTitle", DbType="NVarChar(MAX)")]
		public string CategoryImageTitle
		{
			get
			{
				return this._CategoryImageTitle;
			}
			set
			{
				if ((this._CategoryImageTitle != value))
				{
					this.OnCategoryImageTitleChanging(value);
					this.SendPropertyChanging();
					this._CategoryImageTitle = value;
					this.SendPropertyChanged("CategoryImageTitle");
					this.OnCategoryImageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagList", DbType="NVarChar(MAX)")]
		public string TagList
		{
			get
			{
				return this._TagList;
			}
			set
			{
				if ((this._TagList != value))
				{
					this.OnTagListChanging(value);
					this.SendPropertyChanging();
					this._TagList = value;
					this.SendPropertyChanged("TagList");
					this.OnTagListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuImageAlt", DbType="NVarChar(MAX)")]
		public string MenuImageAlt
		{
			get
			{
				return this._MenuImageAlt;
			}
			set
			{
				if ((this._MenuImageAlt != value))
				{
					this.OnMenuImageAltChanging(value);
					this.SendPropertyChanging();
					this._MenuImageAlt = value;
					this.SendPropertyChanged("MenuImageAlt");
					this.OnMenuImageAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuImageTitle", DbType="NVarChar(MAX)")]
		public string MenuImageTitle
		{
			get
			{
				return this._MenuImageTitle;
			}
			set
			{
				if ((this._MenuImageTitle != value))
				{
					this.OnMenuImageTitleChanging(value);
					this.SendPropertyChanging();
					this._MenuImageTitle = value;
					this.SendPropertyChanged("MenuImageTitle");
					this.OnMenuImageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMod", DbType="DateTime NOT NULL")]
		public System.DateTime LastMod
		{
			get
			{
				return this._LastMod;
			}
			set
			{
				if ((this._LastMod != value))
				{
					this.OnLastModChanging(value);
					this.SendPropertyChanging();
					this._LastMod = value;
					this.SendPropertyChanged("LastMod");
					this.OnLastModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim1", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim1
		{
			get
			{
				return this._ShowDescrAnim1;
			}
			set
			{
				if ((this._ShowDescrAnim1 != value))
				{
					this.OnShowDescrAnim1Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim1 = value;
					this.SendPropertyChanged("ShowDescrAnim1");
					this.OnShowDescrAnim1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim2", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim2
		{
			get
			{
				return this._ShowDescrAnim2;
			}
			set
			{
				if ((this._ShowDescrAnim2 != value))
				{
					this.OnShowDescrAnim2Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim2 = value;
					this.SendPropertyChanged("ShowDescrAnim2");
					this.OnShowDescrAnim2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowBigIcons", DbType="Bit NOT NULL")]
		public bool ShowBigIcons
		{
			get
			{
				return this._ShowBigIcons;
			}
			set
			{
				if ((this._ShowBigIcons != value))
				{
					this.OnShowBigIconsChanging(value);
					this.SendPropertyChanging();
					this._ShowBigIcons = value;
					this.SendPropertyChanged("ShowBigIcons");
					this.OnShowBigIconsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim3", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim3
		{
			get
			{
				return this._ShowDescrAnim3;
			}
			set
			{
				if ((this._ShowDescrAnim3 != value))
				{
					this.OnShowDescrAnim3Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim3 = value;
					this.SendPropertyChanged("ShowDescrAnim3");
					this.OnShowDescrAnim3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim4", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim4
		{
			get
			{
				return this._ShowDescrAnim4;
			}
			set
			{
				if ((this._ShowDescrAnim4 != value))
				{
					this.OnShowDescrAnim4Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim4 = value;
					this.SendPropertyChanged("ShowDescrAnim4");
					this.OnShowDescrAnim4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim5", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim5
		{
			get
			{
				return this._ShowDescrAnim5;
			}
			set
			{
				if ((this._ShowDescrAnim5 != value))
				{
					this.OnShowDescrAnim5Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim5 = value;
					this.SendPropertyChanged("ShowDescrAnim5");
					this.OnShowDescrAnim5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionA", DbType="NVarChar(MAX)")]
		public string StaticDescriptionA
		{
			get
			{
				return this._StaticDescriptionA;
			}
			set
			{
				if ((this._StaticDescriptionA != value))
				{
					this.OnStaticDescriptionAChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionA = value;
					this.SendPropertyChanged("StaticDescriptionA");
					this.OnStaticDescriptionAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionB", DbType="NVarChar(MAX)")]
		public string StaticDescriptionB
		{
			get
			{
				return this._StaticDescriptionB;
			}
			set
			{
				if ((this._StaticDescriptionB != value))
				{
					this.OnStaticDescriptionBChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionB = value;
					this.SendPropertyChanged("StaticDescriptionB");
					this.OnStaticDescriptionBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionC", DbType="NVarChar(MAX)")]
		public string StaticDescriptionC
		{
			get
			{
				return this._StaticDescriptionC;
			}
			set
			{
				if ((this._StaticDescriptionC != value))
				{
					this.OnStaticDescriptionCChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionC = value;
					this.SendPropertyChanged("StaticDescriptionC");
					this.OnStaticDescriptionCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreProductsToCategory", Storage="_StoreProductsToCategories", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<StoreProductsToCategory> StoreProductsToCategories
		{
			get
			{
				return this._StoreProductsToCategories;
			}
			set
			{
				this._StoreProductsToCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreCategory", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<StoreCategory> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreCategoryRelation", Storage="_StoreCategoryRelations", ThisKey="ID", OtherKey="BaseCategoryID")]
		public EntitySet<StoreCategoryRelation> StoreCategoryRelations
		{
			get
			{
				return this._StoreCategoryRelations;
			}
			set
			{
				this._StoreCategoryRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_Filter", Storage="_Filters", ThisKey="ID", OtherKey="CatID")]
		public EntitySet<Filter> Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				this._Filters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_AnimeBlock", Storage="_AnimeBlocks", ThisKey="ID", OtherKey="CatID")]
		public EntitySet<AnimeBlock> AnimeBlocks
		{
			get
			{
				return this._AnimeBlocks;
			}
			set
			{
				this._AnimeBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreProductListImageCategory", Storage="_StoreProductListImageCategories", ThisKey="ID", OtherKey="CatID")]
		public EntitySet<StoreProductListImageCategory> StoreProductListImageCategories
		{
			get
			{
				return this._StoreProductListImageCategories;
			}
			set
			{
				this._StoreProductListImageCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_CMSPageSlider", Storage="_CMSPageSliders", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this._CMSPageSliders;
			}
			set
			{
				this._CMSPageSliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreFile", Storage="_StoreFiles", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<StoreFile> StoreFiles
		{
			get
			{
				return this._StoreFiles;
			}
			set
			{
				this._StoreFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_CMSPageVideo", Storage="_CMSPageVideos", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<CMSPageVideo> CMSPageVideos
		{
			get
			{
				return this._CMSPageVideos;
			}
			set
			{
				this._CMSPageVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreCategory", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public StoreCategory Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				StoreCategory previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreProductsToCategories(StoreProductsToCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_StoreProductsToCategories(StoreProductsToCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_Children(StoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(StoreCategory entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_StoreCategoryRelations(StoreCategoryRelation entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_StoreCategoryRelations(StoreCategoryRelation entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_AnimeBlocks(AnimeBlock entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_AnimeBlocks(AnimeBlock entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_StoreProductListImageCategories(StoreProductListImageCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_StoreProductListImageCategories(StoreProductListImageCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_StoreFiles(StoreFile entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_StoreFiles(StoreFile entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
		
		private void attach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = this;
		}
		
		private void detach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.StoreCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreImporter")]
	public partial class StoreImporter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ColumnName;
		
		private int _RowNum;
		
		private int _ColumnNum;
		
		private string _Header;
		
		private bool _ShowInFilter;
		
		private bool _ShowInList;
		
		private int _Priority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnRowNumChanging(int value);
    partial void OnRowNumChanged();
    partial void OnColumnNumChanging(int value);
    partial void OnColumnNumChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnShowInFilterChanging(bool value);
    partial void OnShowInFilterChanged();
    partial void OnShowInListChanging(bool value);
    partial void OnShowInListChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public StoreImporter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="Int NOT NULL")]
		public int RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNum", DbType="Int NOT NULL")]
		public int ColumnNum
		{
			get
			{
				return this._ColumnNum;
			}
			set
			{
				if ((this._ColumnNum != value))
				{
					this.OnColumnNumChanging(value);
					this.SendPropertyChanging();
					this._ColumnNum = value;
					this.SendPropertyChanged("ColumnNum");
					this.OnColumnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInFilter", DbType="Bit NOT NULL")]
		public bool ShowInFilter
		{
			get
			{
				return this._ShowInFilter;
			}
			set
			{
				if ((this._ShowInFilter != value))
				{
					this.OnShowInFilterChanging(value);
					this.SendPropertyChanging();
					this._ShowInFilter = value;
					this.SendPropertyChanged("ShowInFilter");
					this.OnShowInFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInList", DbType="Bit NOT NULL")]
		public bool ShowInList
		{
			get
			{
				return this._ShowInList;
			}
			set
			{
				if ((this._ShowInList != value))
				{
					this.OnShowInListChanging(value);
					this.SendPropertyChanging();
					this._ShowInList = value;
					this.SendPropertyChanged("ShowInList");
					this.OnShowInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreCategoryRelations")]
	public partial class StoreCategoryRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RelatedProductID;
		
		private string _GroupName;
		
		private int _BaseCategoryID;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRelatedProductIDChanging(System.Nullable<int> value);
    partial void OnRelatedProductIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnBaseCategoryIDChanging(int value);
    partial void OnBaseCategoryIDChanged();
    #endregion
		
		public StoreCategoryRelation()
		{
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedProductID", DbType="Int")]
		public System.Nullable<int> RelatedProductID
		{
			get
			{
				return this._RelatedProductID;
			}
			set
			{
				if ((this._RelatedProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedProductIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedProductID = value;
					this.SendPropertyChanged("RelatedProductID");
					this.OnRelatedProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCategoryID", DbType="Int NOT NULL")]
		public int BaseCategoryID
		{
			get
			{
				return this._BaseCategoryID;
			}
			set
			{
				if ((this._BaseCategoryID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCategoryID = value;
					this.SendPropertyChanged("BaseCategoryID");
					this.OnBaseCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreCategoryRelation", Storage="_StoreCategory", ThisKey="BaseCategoryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.StoreCategoryRelations.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.StoreCategoryRelations.Add(this);
						this._BaseCategoryID = value.ID;
					}
					else
					{
						this._BaseCategoryID = default(int);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreCategoryRelation", Storage="_StoreProduct", ThisKey="RelatedProductID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreCategoryRelations.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreCategoryRelations.Add(this);
						this._RelatedProductID = value.ID;
					}
					else
					{
						this._RelatedProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProducts")]
	public partial class StoreProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _Price;
		
		private System.DateTime _AddDate;
		
		private string _PageTitle;
		
		private string _PageKeywords;
		
		private string _PageDescription;
		
		private string _Article;
		
		private string _Slug;
		
		private System.Nullable<decimal> _OldPrice;
		
		private bool _IsActive;
		
		private string _StaticDescription;
		
		private string _PageH1;
		
		private string _PageH2;
		
		private string _PageH3;
		
		private string _DescrptionLower;
		
		private System.Nullable<decimal> _Volume;
		
		private System.Nullable<decimal> _Weight;
		
		private int _VoteCount;
		
		private int _VoteSum;
		
		private decimal _VoteOverage;
		
		private int _Discount;
		
		private string _RelatedCategories;
		
		private string _SimilarName;
		
		private string _RecomendName;
		
		private string _SameName;
		
		private bool _Deleted;
		
		private string _SearchWords;
		
		private System.DateTime _LastMod;
		
		private string _ShortName;
		
		private bool _ShowDescrAnim;
		
		private int _ViewCount;
		
		private System.Nullable<decimal> _PriceBaseEUR;
		
		private System.Nullable<decimal> _PriceBaseRUR;
		
		private System.Nullable<decimal> _BuyingRate;
		
		private System.Nullable<decimal> _ProfitRate;
		
		private System.Nullable<decimal> _DiscountRate;
		
		private System.Nullable<decimal> _SitePrice;
		
		private string _DeliveryPack;
		
		private bool _ShowCompare;
		
		private bool _ShowDescrAnim2;
		
		private bool _ShowDescrAnim3;
		
		private bool _ShowDescrAnim4;
		
		private bool _ShowDescrAnim5;
		
		private string _StaticDescriptionA;
		
		private string _StaticDescriptionB;
		
		private string _StaticDescriptionC;
		
		private string _StaticDescriptionD;
		
		private EntitySet<StoreProductsToCategory> _StoreProductsToCategories;
		
		private EntitySet<StorePhoto3D> _StorePhoto3Ds;
		
		private EntitySet<OrderedProduct> _OrderedProducts;
		
		private EntitySet<StoreProductFavorite> _StoreProductFavorites;
		
		private EntitySet<StoreProductComment> _StoreProductComments;
		
		private EntitySet<StoreCharacterToProduct> _StoreCharacterToProducts;
		
		private EntitySet<StoreProductTagRel> _StoreProductTagRels;
		
		private EntitySet<StoreProductBlock> _StoreProductBlocks;
		
		private EntitySet<StoreCategoryRelation> _StoreCategoryRelations;
		
		private EntitySet<StoreProductRelation> _StoreProductRelations;
		
		private EntitySet<StoreProductRelation> _StoreProductRelationsReverse;
		
		private EntitySet<CMSPageSlider> _CMSPageSliders;
		
		private EntitySet<ShopCartItem> _ShopCartItems;
		
		private EntitySet<StoreFile> _StoreFiles;
		
		private EntitySet<StoreImage> _StoreImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnAddDateChanging(System.DateTime value);
    partial void OnAddDateChanged();
    partial void OnPageTitleChanging(string value);
    partial void OnPageTitleChanged();
    partial void OnPageKeywordsChanging(string value);
    partial void OnPageKeywordsChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnOldPriceChanging(System.Nullable<decimal> value);
    partial void OnOldPriceChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnStaticDescriptionChanging(string value);
    partial void OnStaticDescriptionChanged();
    partial void OnPageH1Changing(string value);
    partial void OnPageH1Changed();
    partial void OnPageH2Changing(string value);
    partial void OnPageH2Changed();
    partial void OnPageH3Changing(string value);
    partial void OnPageH3Changed();
    partial void OnDescrptionLowerChanging(string value);
    partial void OnDescrptionLowerChanged();
    partial void OnVolumeChanging(System.Nullable<decimal> value);
    partial void OnVolumeChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnVoteCountChanging(int value);
    partial void OnVoteCountChanged();
    partial void OnVoteSumChanging(int value);
    partial void OnVoteSumChanged();
    partial void OnVoteOverageChanging(decimal value);
    partial void OnVoteOverageChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    partial void OnRelatedCategoriesChanging(string value);
    partial void OnRelatedCategoriesChanged();
    partial void OnSimilarNameChanging(string value);
    partial void OnSimilarNameChanged();
    partial void OnRecomendNameChanging(string value);
    partial void OnRecomendNameChanged();
    partial void OnSameNameChanging(string value);
    partial void OnSameNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnSearchWordsChanging(string value);
    partial void OnSearchWordsChanged();
    partial void OnLastModChanging(System.DateTime value);
    partial void OnLastModChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnShowDescrAnimChanging(bool value);
    partial void OnShowDescrAnimChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnPriceBaseEURChanging(System.Nullable<decimal> value);
    partial void OnPriceBaseEURChanged();
    partial void OnPriceBaseRURChanging(System.Nullable<decimal> value);
    partial void OnPriceBaseRURChanged();
    partial void OnBuyingRateChanging(System.Nullable<decimal> value);
    partial void OnBuyingRateChanged();
    partial void OnProfitRateChanging(System.Nullable<decimal> value);
    partial void OnProfitRateChanged();
    partial void OnDiscountRateChanging(System.Nullable<decimal> value);
    partial void OnDiscountRateChanged();
    partial void OnSitePriceChanging(System.Nullable<decimal> value);
    partial void OnSitePriceChanged();
    partial void OnDeliveryPackChanging(string value);
    partial void OnDeliveryPackChanged();
    partial void OnShowCompareChanging(bool value);
    partial void OnShowCompareChanged();
    partial void OnShowDescrAnim2Changing(bool value);
    partial void OnShowDescrAnim2Changed();
    partial void OnShowDescrAnim3Changing(bool value);
    partial void OnShowDescrAnim3Changed();
    partial void OnShowDescrAnim4Changing(bool value);
    partial void OnShowDescrAnim4Changed();
    partial void OnShowDescrAnim5Changing(bool value);
    partial void OnShowDescrAnim5Changed();
    partial void OnStaticDescriptionAChanging(string value);
    partial void OnStaticDescriptionAChanged();
    partial void OnStaticDescriptionBChanging(string value);
    partial void OnStaticDescriptionBChanged();
    partial void OnStaticDescriptionCChanging(string value);
    partial void OnStaticDescriptionCChanged();
    partial void OnStaticDescriptionDChanging(string value);
    partial void OnStaticDescriptionDChanged();
    #endregion
		
		public StoreProduct()
		{
			this._StoreProductsToCategories = new EntitySet<StoreProductsToCategory>(new Action<StoreProductsToCategory>(this.attach_StoreProductsToCategories), new Action<StoreProductsToCategory>(this.detach_StoreProductsToCategories));
			this._StorePhoto3Ds = new EntitySet<StorePhoto3D>(new Action<StorePhoto3D>(this.attach_StorePhoto3Ds), new Action<StorePhoto3D>(this.detach_StorePhoto3Ds));
			this._OrderedProducts = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProducts), new Action<OrderedProduct>(this.detach_OrderedProducts));
			this._StoreProductFavorites = new EntitySet<StoreProductFavorite>(new Action<StoreProductFavorite>(this.attach_StoreProductFavorites), new Action<StoreProductFavorite>(this.detach_StoreProductFavorites));
			this._StoreProductComments = new EntitySet<StoreProductComment>(new Action<StoreProductComment>(this.attach_StoreProductComments), new Action<StoreProductComment>(this.detach_StoreProductComments));
			this._StoreCharacterToProducts = new EntitySet<StoreCharacterToProduct>(new Action<StoreCharacterToProduct>(this.attach_StoreCharacterToProducts), new Action<StoreCharacterToProduct>(this.detach_StoreCharacterToProducts));
			this._StoreProductTagRels = new EntitySet<StoreProductTagRel>(new Action<StoreProductTagRel>(this.attach_StoreProductTagRels), new Action<StoreProductTagRel>(this.detach_StoreProductTagRels));
			this._StoreProductBlocks = new EntitySet<StoreProductBlock>(new Action<StoreProductBlock>(this.attach_StoreProductBlocks), new Action<StoreProductBlock>(this.detach_StoreProductBlocks));
			this._StoreCategoryRelations = new EntitySet<StoreCategoryRelation>(new Action<StoreCategoryRelation>(this.attach_StoreCategoryRelations), new Action<StoreCategoryRelation>(this.detach_StoreCategoryRelations));
			this._StoreProductRelations = new EntitySet<StoreProductRelation>(new Action<StoreProductRelation>(this.attach_StoreProductRelations), new Action<StoreProductRelation>(this.detach_StoreProductRelations));
			this._StoreProductRelationsReverse = new EntitySet<StoreProductRelation>(new Action<StoreProductRelation>(this.attach_StoreProductRelationsReverse), new Action<StoreProductRelation>(this.detach_StoreProductRelationsReverse));
			this._CMSPageSliders = new EntitySet<CMSPageSlider>(new Action<CMSPageSlider>(this.attach_CMSPageSliders), new Action<CMSPageSlider>(this.detach_CMSPageSliders));
			this._ShopCartItems = new EntitySet<ShopCartItem>(new Action<ShopCartItem>(this.attach_ShopCartItems), new Action<ShopCartItem>(this.detach_ShopCartItems));
			this._StoreFiles = new EntitySet<StoreFile>(new Action<StoreFile>(this.attach_StoreFiles), new Action<StoreFile>(this.detach_StoreFiles));
			this._StoreImages = new EntitySet<StoreImage>(new Action<StoreImage>(this.attach_StoreImages), new Action<StoreImage>(this.detach_StoreImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime NOT NULL")]
		public System.DateTime AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageTitle", DbType="NVarChar(MAX)")]
		public string PageTitle
		{
			get
			{
				return this._PageTitle;
			}
			set
			{
				if ((this._PageTitle != value))
				{
					this.OnPageTitleChanging(value);
					this.SendPropertyChanging();
					this._PageTitle = value;
					this.SendPropertyChanged("PageTitle");
					this.OnPageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKeywords", DbType="NVarChar(MAX)")]
		public string PageKeywords
		{
			get
			{
				return this._PageKeywords;
			}
			set
			{
				if ((this._PageKeywords != value))
				{
					this.OnPageKeywordsChanging(value);
					this.SendPropertyChanging();
					this._PageKeywords = value;
					this.SendPropertyChanged("PageKeywords");
					this.OnPageKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="NVarChar(MAX)")]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(64)")]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(256)")]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPrice", DbType="Money")]
		public System.Nullable<decimal> OldPrice
		{
			get
			{
				return this._OldPrice;
			}
			set
			{
				if ((this._OldPrice != value))
				{
					this.OnOldPriceChanging(value);
					this.SendPropertyChanging();
					this._OldPrice = value;
					this.SendPropertyChanged("OldPrice");
					this.OnOldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescription", DbType="NVarChar(MAX)")]
		public string StaticDescription
		{
			get
			{
				return this._StaticDescription;
			}
			set
			{
				if ((this._StaticDescription != value))
				{
					this.OnStaticDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StaticDescription = value;
					this.SendPropertyChanged("StaticDescription");
					this.OnStaticDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageH1", DbType="NVarChar(MAX)")]
		public string PageH1
		{
			get
			{
				return this._PageH1;
			}
			set
			{
				if ((this._PageH1 != value))
				{
					this.OnPageH1Changing(value);
					this.SendPropertyChanging();
					this._PageH1 = value;
					this.SendPropertyChanged("PageH1");
					this.OnPageH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageH2", DbType="NVarChar(MAX)")]
		public string PageH2
		{
			get
			{
				return this._PageH2;
			}
			set
			{
				if ((this._PageH2 != value))
				{
					this.OnPageH2Changing(value);
					this.SendPropertyChanging();
					this._PageH2 = value;
					this.SendPropertyChanged("PageH2");
					this.OnPageH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageH3", DbType="NVarChar(MAX)")]
		public string PageH3
		{
			get
			{
				return this._PageH3;
			}
			set
			{
				if ((this._PageH3 != value))
				{
					this.OnPageH3Changing(value);
					this.SendPropertyChanging();
					this._PageH3 = value;
					this.SendPropertyChanged("PageH3");
					this.OnPageH3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrptionLower", DbType="NVarChar(MAX)")]
		public string DescrptionLower
		{
			get
			{
				return this._DescrptionLower;
			}
			set
			{
				if ((this._DescrptionLower != value))
				{
					this.OnDescrptionLowerChanging(value);
					this.SendPropertyChanging();
					this._DescrptionLower = value;
					this.SendPropertyChanged("DescrptionLower");
					this.OnDescrptionLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteCount", DbType="Int NOT NULL")]
		public int VoteCount
		{
			get
			{
				return this._VoteCount;
			}
			set
			{
				if ((this._VoteCount != value))
				{
					this.OnVoteCountChanging(value);
					this.SendPropertyChanging();
					this._VoteCount = value;
					this.SendPropertyChanged("VoteCount");
					this.OnVoteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteSum", DbType="Int NOT NULL")]
		public int VoteSum
		{
			get
			{
				return this._VoteSum;
			}
			set
			{
				if ((this._VoteSum != value))
				{
					this.OnVoteSumChanging(value);
					this.SendPropertyChanging();
					this._VoteSum = value;
					this.SendPropertyChanged("VoteSum");
					this.OnVoteSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteOverage", DbType="Decimal(18,2) NOT NULL")]
		public decimal VoteOverage
		{
			get
			{
				return this._VoteOverage;
			}
			set
			{
				if ((this._VoteOverage != value))
				{
					this.OnVoteOverageChanging(value);
					this.SendPropertyChanging();
					this._VoteOverage = value;
					this.SendPropertyChanged("VoteOverage");
					this.OnVoteOverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedCategories", DbType="NVarChar(MAX)")]
		public string RelatedCategories
		{
			get
			{
				return this._RelatedCategories;
			}
			set
			{
				if ((this._RelatedCategories != value))
				{
					this.OnRelatedCategoriesChanging(value);
					this.SendPropertyChanging();
					this._RelatedCategories = value;
					this.SendPropertyChanged("RelatedCategories");
					this.OnRelatedCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimilarName", DbType="NVarChar(200)")]
		public string SimilarName
		{
			get
			{
				return this._SimilarName;
			}
			set
			{
				if ((this._SimilarName != value))
				{
					this.OnSimilarNameChanging(value);
					this.SendPropertyChanging();
					this._SimilarName = value;
					this.SendPropertyChanged("SimilarName");
					this.OnSimilarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecomendName", DbType="NVarChar(200)")]
		public string RecomendName
		{
			get
			{
				return this._RecomendName;
			}
			set
			{
				if ((this._RecomendName != value))
				{
					this.OnRecomendNameChanging(value);
					this.SendPropertyChanging();
					this._RecomendName = value;
					this.SendPropertyChanged("RecomendName");
					this.OnRecomendNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SameName", DbType="NVarChar(200)")]
		public string SameName
		{
			get
			{
				return this._SameName;
			}
			set
			{
				if ((this._SameName != value))
				{
					this.OnSameNameChanging(value);
					this.SendPropertyChanging();
					this._SameName = value;
					this.SendPropertyChanged("SameName");
					this.OnSameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchWords", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string SearchWords
		{
			get
			{
				return this._SearchWords;
			}
			set
			{
				if ((this._SearchWords != value))
				{
					this.OnSearchWordsChanging(value);
					this.SendPropertyChanging();
					this._SearchWords = value;
					this.SendPropertyChanged("SearchWords");
					this.OnSearchWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMod", DbType="DateTime NOT NULL")]
		public System.DateTime LastMod
		{
			get
			{
				return this._LastMod;
			}
			set
			{
				if ((this._LastMod != value))
				{
					this.OnLastModChanging(value);
					this.SendPropertyChanging();
					this._LastMod = value;
					this.SendPropertyChanged("LastMod");
					this.OnLastModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim
		{
			get
			{
				return this._ShowDescrAnim;
			}
			set
			{
				if ((this._ShowDescrAnim != value))
				{
					this.OnShowDescrAnimChanging(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim = value;
					this.SendPropertyChanged("ShowDescrAnim");
					this.OnShowDescrAnimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int NOT NULL")]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBaseEUR", DbType="Money")]
		public System.Nullable<decimal> PriceBaseEUR
		{
			get
			{
				return this._PriceBaseEUR;
			}
			set
			{
				if ((this._PriceBaseEUR != value))
				{
					this.OnPriceBaseEURChanging(value);
					this.SendPropertyChanging();
					this._PriceBaseEUR = value;
					this.SendPropertyChanged("PriceBaseEUR");
					this.OnPriceBaseEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBaseRUR", DbType="Money")]
		public System.Nullable<decimal> PriceBaseRUR
		{
			get
			{
				return this._PriceBaseRUR;
			}
			set
			{
				if ((this._PriceBaseRUR != value))
				{
					this.OnPriceBaseRURChanging(value);
					this.SendPropertyChanging();
					this._PriceBaseRUR = value;
					this.SendPropertyChanged("PriceBaseRUR");
					this.OnPriceBaseRURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyingRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyingRate
		{
			get
			{
				return this._BuyingRate;
			}
			set
			{
				if ((this._BuyingRate != value))
				{
					this.OnBuyingRateChanging(value);
					this.SendPropertyChanging();
					this._BuyingRate = value;
					this.SendPropertyChanged("BuyingRate");
					this.OnBuyingRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ProfitRate
		{
			get
			{
				return this._ProfitRate;
			}
			set
			{
				if ((this._ProfitRate != value))
				{
					this.OnProfitRateChanging(value);
					this.SendPropertyChanging();
					this._ProfitRate = value;
					this.SendPropertyChanged("ProfitRate");
					this.OnProfitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SitePrice", DbType="Money")]
		public System.Nullable<decimal> SitePrice
		{
			get
			{
				return this._SitePrice;
			}
			set
			{
				if ((this._SitePrice != value))
				{
					this.OnSitePriceChanging(value);
					this.SendPropertyChanging();
					this._SitePrice = value;
					this.SendPropertyChanged("SitePrice");
					this.OnSitePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPack", DbType="NVarChar(MAX)")]
		public string DeliveryPack
		{
			get
			{
				return this._DeliveryPack;
			}
			set
			{
				if ((this._DeliveryPack != value))
				{
					this.OnDeliveryPackChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPack = value;
					this.SendPropertyChanged("DeliveryPack");
					this.OnDeliveryPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowCompare", DbType="Bit NOT NULL")]
		public bool ShowCompare
		{
			get
			{
				return this._ShowCompare;
			}
			set
			{
				if ((this._ShowCompare != value))
				{
					this.OnShowCompareChanging(value);
					this.SendPropertyChanging();
					this._ShowCompare = value;
					this.SendPropertyChanged("ShowCompare");
					this.OnShowCompareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim2", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim2
		{
			get
			{
				return this._ShowDescrAnim2;
			}
			set
			{
				if ((this._ShowDescrAnim2 != value))
				{
					this.OnShowDescrAnim2Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim2 = value;
					this.SendPropertyChanged("ShowDescrAnim2");
					this.OnShowDescrAnim2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim3", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim3
		{
			get
			{
				return this._ShowDescrAnim3;
			}
			set
			{
				if ((this._ShowDescrAnim3 != value))
				{
					this.OnShowDescrAnim3Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim3 = value;
					this.SendPropertyChanged("ShowDescrAnim3");
					this.OnShowDescrAnim3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim4", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim4
		{
			get
			{
				return this._ShowDescrAnim4;
			}
			set
			{
				if ((this._ShowDescrAnim4 != value))
				{
					this.OnShowDescrAnim4Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim4 = value;
					this.SendPropertyChanged("ShowDescrAnim4");
					this.OnShowDescrAnim4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDescrAnim5", DbType="Bit NOT NULL")]
		public bool ShowDescrAnim5
		{
			get
			{
				return this._ShowDescrAnim5;
			}
			set
			{
				if ((this._ShowDescrAnim5 != value))
				{
					this.OnShowDescrAnim5Changing(value);
					this.SendPropertyChanging();
					this._ShowDescrAnim5 = value;
					this.SendPropertyChanged("ShowDescrAnim5");
					this.OnShowDescrAnim5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionA", DbType="NVarChar(MAX)")]
		public string StaticDescriptionA
		{
			get
			{
				return this._StaticDescriptionA;
			}
			set
			{
				if ((this._StaticDescriptionA != value))
				{
					this.OnStaticDescriptionAChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionA = value;
					this.SendPropertyChanged("StaticDescriptionA");
					this.OnStaticDescriptionAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionB", DbType="NVarChar(MAX)")]
		public string StaticDescriptionB
		{
			get
			{
				return this._StaticDescriptionB;
			}
			set
			{
				if ((this._StaticDescriptionB != value))
				{
					this.OnStaticDescriptionBChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionB = value;
					this.SendPropertyChanged("StaticDescriptionB");
					this.OnStaticDescriptionBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionC", DbType="NVarChar(MAX)")]
		public string StaticDescriptionC
		{
			get
			{
				return this._StaticDescriptionC;
			}
			set
			{
				if ((this._StaticDescriptionC != value))
				{
					this.OnStaticDescriptionCChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionC = value;
					this.SendPropertyChanged("StaticDescriptionC");
					this.OnStaticDescriptionCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticDescriptionD", DbType="NVarChar(MAX)")]
		public string StaticDescriptionD
		{
			get
			{
				return this._StaticDescriptionD;
			}
			set
			{
				if ((this._StaticDescriptionD != value))
				{
					this.OnStaticDescriptionDChanging(value);
					this.SendPropertyChanging();
					this._StaticDescriptionD = value;
					this.SendPropertyChanged("StaticDescriptionD");
					this.OnStaticDescriptionDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductsToCategory", Storage="_StoreProductsToCategories", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreProductsToCategory> StoreProductsToCategories
		{
			get
			{
				return this._StoreProductsToCategories;
			}
			set
			{
				this._StoreProductsToCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StorePhoto3D", Storage="_StorePhoto3Ds", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StorePhoto3D> StorePhoto3Ds
		{
			get
			{
				return this._StorePhoto3Ds;
			}
			set
			{
				this._StorePhoto3Ds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_OrderedProduct", Storage="_OrderedProducts", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<OrderedProduct> OrderedProducts
		{
			get
			{
				return this._OrderedProducts;
			}
			set
			{
				this._OrderedProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductFavorite", Storage="_StoreProductFavorites", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreProductFavorite> StoreProductFavorites
		{
			get
			{
				return this._StoreProductFavorites;
			}
			set
			{
				this._StoreProductFavorites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductComment", Storage="_StoreProductComments", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreProductComment> StoreProductComments
		{
			get
			{
				return this._StoreProductComments;
			}
			set
			{
				this._StoreProductComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreCharacterToProduct", Storage="_StoreCharacterToProducts", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreCharacterToProduct> StoreCharacterToProducts
		{
			get
			{
				return this._StoreCharacterToProducts;
			}
			set
			{
				this._StoreCharacterToProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductTagRel", Storage="_StoreProductTagRels", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreProductTagRel> StoreProductTagRels
		{
			get
			{
				return this._StoreProductTagRels;
			}
			set
			{
				this._StoreProductTagRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductBlock", Storage="_StoreProductBlocks", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreProductBlock> StoreProductBlocks
		{
			get
			{
				return this._StoreProductBlocks;
			}
			set
			{
				this._StoreProductBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreCategoryRelation", Storage="_StoreCategoryRelations", ThisKey="ID", OtherKey="RelatedProductID")]
		public EntitySet<StoreCategoryRelation> StoreCategoryRelations
		{
			get
			{
				return this._StoreCategoryRelations;
			}
			set
			{
				this._StoreCategoryRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductRelation", Storage="_StoreProductRelations", ThisKey="ID", OtherKey="BaseProductID")]
		public EntitySet<StoreProductRelation> StoreProductRelations
		{
			get
			{
				return this._StoreProductRelations;
			}
			set
			{
				this._StoreProductRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductRelation1", Storage="_StoreProductRelationsReverse", ThisKey="ID", OtherKey="RelatedProductID")]
		public EntitySet<StoreProductRelation> StoreProductRelationsReverse
		{
			get
			{
				return this._StoreProductRelationsReverse;
			}
			set
			{
				this._StoreProductRelationsReverse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_CMSPageSlider", Storage="_CMSPageSliders", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this._CMSPageSliders;
			}
			set
			{
				this._CMSPageSliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_ShopCartItem", Storage="_ShopCartItems", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<ShopCartItem> ShopCartItems
		{
			get
			{
				return this._ShopCartItems;
			}
			set
			{
				this._ShopCartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreFile", Storage="_StoreFiles", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreFile> StoreFiles
		{
			get
			{
				return this._StoreFiles;
			}
			set
			{
				this._StoreFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreImage", Storage="_StoreImages", ThisKey="ID", OtherKey="ProductID")]
		public EntitySet<StoreImage> StoreImages
		{
			get
			{
				return this._StoreImages;
			}
			set
			{
				this._StoreImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreProductsToCategories(StoreProductsToCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreProductsToCategories(StoreProductsToCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StorePhoto3Ds(StorePhoto3D entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StorePhoto3Ds(StorePhoto3D entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_OrderedProducts(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreProductFavorites(StoreProductFavorite entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreProductFavorites(StoreProductFavorite entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreProductComments(StoreProductComment entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreProductComments(StoreProductComment entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreCharacterToProducts(StoreCharacterToProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreCharacterToProducts(StoreCharacterToProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreProductTagRels(StoreProductTagRel entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreProductTagRels(StoreProductTagRel entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreProductBlocks(StoreProductBlock entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreProductBlocks(StoreProductBlock entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreCategoryRelations(StoreCategoryRelation entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreCategoryRelations(StoreCategoryRelation entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreProductRelations(StoreProductRelation entity)
		{
			this.SendPropertyChanging();
			entity.BaseProduct = this;
		}
		
		private void detach_StoreProductRelations(StoreProductRelation entity)
		{
			this.SendPropertyChanging();
			entity.BaseProduct = null;
		}
		
		private void attach_StoreProductRelationsReverse(StoreProductRelation entity)
		{
			this.SendPropertyChanging();
			entity.BaseProductReverse = this;
		}
		
		private void detach_StoreProductRelationsReverse(StoreProductRelation entity)
		{
			this.SendPropertyChanging();
			entity.BaseProductReverse = null;
		}
		
		private void attach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreFiles(StoreFile entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreFiles(StoreFile entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
		
		private void attach_StoreImages(StoreImage entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = this;
		}
		
		private void detach_StoreImages(StoreImage entity)
		{
			this.SendPropertyChanging();
			entity.StoreProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductRelations")]
	public partial class StoreProductRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RelatedProductID;
		
		private string _GroupName;
		
		private int _BaseProductID;
		
		private EntityRef<StoreProduct> _BaseProduct;
		
		private EntityRef<StoreProduct> _BaseProductReverse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRelatedProductIDChanging(System.Nullable<int> value);
    partial void OnRelatedProductIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnBaseProductIDChanging(int value);
    partial void OnBaseProductIDChanged();
    #endregion
		
		public StoreProductRelation()
		{
			this._BaseProduct = default(EntityRef<StoreProduct>);
			this._BaseProductReverse = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedProductID", DbType="Int")]
		public System.Nullable<int> RelatedProductID
		{
			get
			{
				return this._RelatedProductID;
			}
			set
			{
				if ((this._RelatedProductID != value))
				{
					if (this._BaseProductReverse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelatedProductIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedProductID = value;
					this.SendPropertyChanged("RelatedProductID");
					this.OnRelatedProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseProductID", DbType="Int NOT NULL")]
		public int BaseProductID
		{
			get
			{
				return this._BaseProductID;
			}
			set
			{
				if ((this._BaseProductID != value))
				{
					if (this._BaseProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseProductIDChanging(value);
					this.SendPropertyChanging();
					this._BaseProductID = value;
					this.SendPropertyChanged("BaseProductID");
					this.OnBaseProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductRelation", Storage="_BaseProduct", ThisKey="BaseProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct BaseProduct
		{
			get
			{
				return this._BaseProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._BaseProduct.Entity;
				if (((previousValue != value) 
							|| (this._BaseProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseProduct.Entity = null;
						previousValue.StoreProductRelations.Remove(this);
					}
					this._BaseProduct.Entity = value;
					if ((value != null))
					{
						value.StoreProductRelations.Add(this);
						this._BaseProductID = value.ID;
					}
					else
					{
						this._BaseProductID = default(int);
					}
					this.SendPropertyChanged("BaseProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreProductRelation1", Storage="_BaseProductReverse", ThisKey="RelatedProductID", OtherKey="ID", IsForeignKey=true)]
		public StoreProduct BaseProductReverse
		{
			get
			{
				return this._BaseProductReverse.Entity;
			}
			set
			{
				StoreProduct previousValue = this._BaseProductReverse.Entity;
				if (((previousValue != value) 
							|| (this._BaseProductReverse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaseProductReverse.Entity = null;
						previousValue.StoreProductRelationsReverse.Remove(this);
					}
					this._BaseProductReverse.Entity = value;
					if ((value != null))
					{
						value.StoreProductRelationsReverse.Add(this);
						this._RelatedProductID = value.ID;
					}
					else
					{
						this._RelatedProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaseProductReverse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Filters")]
	public partial class Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CatID;
		
		private System.Nullable<int> _PageID;
		
		private bool _Visible;
		
		private EntitySet<FilterItem> _FilterItems;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    #endregion
		
		public Filter()
		{
			this._FilterItems = new EntitySet<FilterItem>(new Action<FilterItem>(this.attach_FilterItems), new Action<FilterItem>(this.detach_FilterItems));
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_FilterItem", Storage="_FilterItems", ThisKey="ID", OtherKey="FilterID")]
		public EntitySet<FilterItem> FilterItems
		{
			get
			{
				return this._FilterItems;
			}
			set
			{
				this._FilterItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_Filter", Storage="_StoreCategory", ThisKey="CatID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.Filters.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.Filters.Add(this);
						this._CatID = value.ID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_Filter", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.Filters.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.Filters.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterItems(FilterItem entity)
		{
			this.SendPropertyChanging();
			entity.Filter = this;
		}
		
		private void detach_FilterItems(FilterItem entity)
		{
			this.SendPropertyChanging();
			entity.Filter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnimeBlockItems")]
	public partial class AnimeBlockItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Link;
		
		private string _Text;
		
		private int _XPos;
		
		private int _YPos;
		
		private int _AnimeBlockID;
		
		private EntityRef<AnimeBlock> _AnimeBlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnXPosChanging(int value);
    partial void OnXPosChanged();
    partial void OnYPosChanging(int value);
    partial void OnYPosChanged();
    partial void OnAnimeBlockIDChanging(int value);
    partial void OnAnimeBlockIDChanged();
    #endregion
		
		public AnimeBlockItem()
		{
			this._AnimeBlock = default(EntityRef<AnimeBlock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPos", DbType="Int NOT NULL")]
		public int XPos
		{
			get
			{
				return this._XPos;
			}
			set
			{
				if ((this._XPos != value))
				{
					this.OnXPosChanging(value);
					this.SendPropertyChanging();
					this._XPos = value;
					this.SendPropertyChanged("XPos");
					this.OnXPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YPos", DbType="Int NOT NULL")]
		public int YPos
		{
			get
			{
				return this._YPos;
			}
			set
			{
				if ((this._YPos != value))
				{
					this.OnYPosChanging(value);
					this.SendPropertyChanging();
					this._YPos = value;
					this.SendPropertyChanged("YPos");
					this.OnYPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimeBlockID", DbType="Int NOT NULL")]
		public int AnimeBlockID
		{
			get
			{
				return this._AnimeBlockID;
			}
			set
			{
				if ((this._AnimeBlockID != value))
				{
					if (this._AnimeBlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimeBlockIDChanging(value);
					this.SendPropertyChanging();
					this._AnimeBlockID = value;
					this.SendPropertyChanged("AnimeBlockID");
					this.OnAnimeBlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnimeBlock_AnimeBlockItem", Storage="_AnimeBlock", ThisKey="AnimeBlockID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AnimeBlock AnimeBlock
		{
			get
			{
				return this._AnimeBlock.Entity;
			}
			set
			{
				AnimeBlock previousValue = this._AnimeBlock.Entity;
				if (((previousValue != value) 
							|| (this._AnimeBlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnimeBlock.Entity = null;
						previousValue.AnimeBlockItems.Remove(this);
					}
					this._AnimeBlock.Entity = value;
					if ((value != null))
					{
						value.AnimeBlockItems.Add(this);
						this._AnimeBlockID = value.ID;
					}
					else
					{
						this._AnimeBlockID = default(int);
					}
					this.SendPropertyChanged("AnimeBlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnimeBlocks")]
	public partial class AnimeBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CatID;
		
		private System.Nullable<int> _PageID;
		
		private bool _Visible;
		
		private int _Width;
		
		private int _Height;
		
		private string _Background;
		
		private string _Wheel;
		
		private EntitySet<AnimeBlockItem> _AnimeBlockItems;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<CMSPage> _CMSPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCatIDChanging(System.Nullable<int> value);
    partial void OnCatIDChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnBackgroundChanging(string value);
    partial void OnBackgroundChanged();
    partial void OnWheelChanging(string value);
    partial void OnWheelChanged();
    #endregion
		
		public AnimeBlock()
		{
			this._AnimeBlockItems = new EntitySet<AnimeBlockItem>(new Action<AnimeBlockItem>(this.attach_AnimeBlockItems), new Action<AnimeBlockItem>(this.detach_AnimeBlockItems));
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._CMSPage = default(EntityRef<CMSPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Background", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Background
		{
			get
			{
				return this._Background;
			}
			set
			{
				if ((this._Background != value))
				{
					this.OnBackgroundChanging(value);
					this.SendPropertyChanging();
					this._Background = value;
					this.SendPropertyChanged("Background");
					this.OnBackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wheel", DbType="NVarChar(500)")]
		public string Wheel
		{
			get
			{
				return this._Wheel;
			}
			set
			{
				if ((this._Wheel != value))
				{
					this.OnWheelChanging(value);
					this.SendPropertyChanging();
					this._Wheel = value;
					this.SendPropertyChanged("Wheel");
					this.OnWheelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnimeBlock_AnimeBlockItem", Storage="_AnimeBlockItems", ThisKey="ID", OtherKey="AnimeBlockID")]
		public EntitySet<AnimeBlockItem> AnimeBlockItems
		{
			get
			{
				return this._AnimeBlockItems;
			}
			set
			{
				this._AnimeBlockItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_AnimeBlock", Storage="_StoreCategory", ThisKey="CatID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.AnimeBlocks.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.AnimeBlocks.Add(this);
						this._CatID = value.ID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_AnimeBlock", Storage="_CMSPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.AnimeBlocks.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.AnimeBlocks.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnimeBlockItems(AnimeBlockItem entity)
		{
			this.SendPropertyChanging();
			entity.AnimeBlock = this;
		}
		
		private void detach_AnimeBlockItems(AnimeBlockItem entity)
		{
			this.SendPropertyChanging();
			entity.AnimeBlock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPagePopupData")]
	public partial class CMSPagePopupData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CMSPageID;
		
		private int _LangID;
		
		private string _Text;
		
		private int _ViewID;
		
		private bool _Visible;
		
		private int _OrderNum;
		
		private EntityRef<CMSPageCellView> _CMSPageCellView;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCMSPageIDChanging(int value);
    partial void OnCMSPageIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnViewIDChanging(int value);
    partial void OnViewIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    #endregion
		
		public CMSPagePopupData()
		{
			this._CMSPageCellView = default(EntityRef<CMSPageCellView>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSPageID", DbType="Int NOT NULL")]
		public int CMSPageID
		{
			get
			{
				return this._CMSPageID;
			}
			set
			{
				if ((this._CMSPageID != value))
				{
					this.OnCMSPageIDChanging(value);
					this.SendPropertyChanging();
					this._CMSPageID = value;
					this.SendPropertyChanged("CMSPageID");
					this.OnCMSPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="Int NOT NULL")]
		public int ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					if (this._CMSPageCellView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPagePopupData", Storage="_CMSPageCellView", ThisKey="ViewID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageCellView CMSPageCellView
		{
			get
			{
				return this._CMSPageCellView.Entity;
			}
			set
			{
				CMSPageCellView previousValue = this._CMSPageCellView.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCellView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCellView.Entity = null;
						previousValue.CMSPagePopupDatas.Remove(this);
					}
					this._CMSPageCellView.Entity = value;
					if ((value != null))
					{
						value.CMSPagePopupDatas.Add(this);
						this._ViewID = value.ID;
					}
					else
					{
						this._ViewID = default(int);
					}
					this.SendPropertyChanged("CMSPageCellView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPagePopupData", Storage="_Language", ThisKey="LangID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CMSPagePopupDatas.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CMSPagePopupDatas.Add(this);
						this._LangID = value.ID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductListImage")]
	public partial class StoreProductListImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private EntitySet<StoreProductListImageCategory> _StoreProductListImageCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    #endregion
		
		public StoreProductListImage()
		{
			this._StoreProductListImageCategories = new EntitySet<StoreProductListImageCategory>(new Action<StoreProductListImageCategory>(this.attach_StoreProductListImageCategories), new Action<StoreProductListImageCategory>(this.detach_StoreProductListImageCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProductListImage_StoreProductListImageCategory", Storage="_StoreProductListImageCategories", ThisKey="ID", OtherKey="ImageID")]
		public EntitySet<StoreProductListImageCategory> StoreProductListImageCategories
		{
			get
			{
				return this._StoreProductListImageCategories;
			}
			set
			{
				this._StoreProductListImageCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreProductListImageCategories(StoreProductListImageCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreProductListImage = this;
		}
		
		private void detach_StoreProductListImageCategories(StoreProductListImageCategory entity)
		{
			this.SendPropertyChanging();
			entity.StoreProductListImage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductListImageCategory")]
	public partial class StoreProductListImageCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CatID;
		
		private int _ImageID;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<StoreProductListImage> _StoreProductListImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCatIDChanging(int value);
    partial void OnCatIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    #endregion
		
		public StoreProductListImageCategory()
		{
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._StoreProductListImage = default(EntityRef<StoreProductListImage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL")]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL")]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._StoreProductListImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreProductListImageCategory", Storage="_StoreCategory", ThisKey="CatID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.StoreProductListImageCategories.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.StoreProductListImageCategories.Add(this);
						this._CatID = value.ID;
					}
					else
					{
						this._CatID = default(int);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProductListImage_StoreProductListImageCategory", Storage="_StoreProductListImage", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProductListImage StoreProductListImage
		{
			get
			{
				return this._StoreProductListImage.Entity;
			}
			set
			{
				StoreProductListImage previousValue = this._StoreProductListImage.Entity;
				if (((previousValue != value) 
							|| (this._StoreProductListImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProductListImage.Entity = null;
						previousValue.StoreProductListImageCategories.Remove(this);
					}
					this._StoreProductListImage.Entity = value;
					if ((value != null))
					{
						value.StoreProductListImageCategories.Add(this);
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(int);
					}
					this.SendPropertyChanged("StoreProductListImage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSAuthFiles")]
	public partial class CMSAuthFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FileName;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public CMSAuthFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPages")]
	public partial class CMSPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _URL;
		
		private System.Nullable<int> _ParentID;
		
		private bool _Visible;
		
		private int _Type;
		
		private int _OrderNum;
		
		private bool _ViewMenu;
		
		private bool _Deleted;
		
		private System.DateTime _LastMod;
		
		private EntitySet<CMSPageRoleRel> _CMSPageRoleRels;
		
		private EntitySet<Lenta> _Lentas;
		
		private EntitySet<CMSPageTextData> _CMSPageTextDatas;
		
		private EntitySet<CMSPageLang> _CMSPageLangs;
		
		private EntitySet<Filter> _Filters;
		
		private EntitySet<AnimeBlock> _AnimeBlocks;
		
		private EntitySet<CMSPage> _Children;
		
		private EntitySet<CMSPageSlider> _CMSPageSliders;
		
		private EntitySet<CMSPageVideo> _CMSPageVideos;
		
		private EntityRef<CMSPage> _Parent;
		
		private EntityRef<PageType> _PageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnViewMenuChanging(bool value);
    partial void OnViewMenuChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnLastModChanging(System.DateTime value);
    partial void OnLastModChanged();
    #endregion
		
		public CMSPage()
		{
			this._CMSPageRoleRels = new EntitySet<CMSPageRoleRel>(new Action<CMSPageRoleRel>(this.attach_CMSPageRoleRels), new Action<CMSPageRoleRel>(this.detach_CMSPageRoleRels));
			this._Lentas = new EntitySet<Lenta>(new Action<Lenta>(this.attach_Lentas), new Action<Lenta>(this.detach_Lentas));
			this._CMSPageTextDatas = new EntitySet<CMSPageTextData>(new Action<CMSPageTextData>(this.attach_CMSPageTextDatas), new Action<CMSPageTextData>(this.detach_CMSPageTextDatas));
			this._CMSPageLangs = new EntitySet<CMSPageLang>(new Action<CMSPageLang>(this.attach_CMSPageLangs), new Action<CMSPageLang>(this.detach_CMSPageLangs));
			this._Filters = new EntitySet<Filter>(new Action<Filter>(this.attach_Filters), new Action<Filter>(this.detach_Filters));
			this._AnimeBlocks = new EntitySet<AnimeBlock>(new Action<AnimeBlock>(this.attach_AnimeBlocks), new Action<AnimeBlock>(this.detach_AnimeBlocks));
			this._Children = new EntitySet<CMSPage>(new Action<CMSPage>(this.attach_Children), new Action<CMSPage>(this.detach_Children));
			this._CMSPageSliders = new EntitySet<CMSPageSlider>(new Action<CMSPageSlider>(this.attach_CMSPageSliders), new Action<CMSPageSlider>(this.detach_CMSPageSliders));
			this._CMSPageVideos = new EntitySet<CMSPageVideo>(new Action<CMSPageVideo>(this.attach_CMSPageVideos), new Action<CMSPageVideo>(this.detach_CMSPageVideos));
			this._Parent = default(EntityRef<CMSPage>);
			this._PageType = default(EntityRef<PageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._PageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewMenu", DbType="Bit NOT NULL")]
		public bool ViewMenu
		{
			get
			{
				return this._ViewMenu;
			}
			set
			{
				if ((this._ViewMenu != value))
				{
					this.OnViewMenuChanging(value);
					this.SendPropertyChanging();
					this._ViewMenu = value;
					this.SendPropertyChanged("ViewMenu");
					this.OnViewMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMod", DbType="DateTime NOT NULL")]
		public System.DateTime LastMod
		{
			get
			{
				return this._LastMod;
			}
			set
			{
				if ((this._LastMod != value))
				{
					this.OnLastModChanging(value);
					this.SendPropertyChanging();
					this._LastMod = value;
					this.SendPropertyChanged("LastMod");
					this.OnLastModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageRoleRel", Storage="_CMSPageRoleRels", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<CMSPageRoleRel> CMSPageRoleRels
		{
			get
			{
				return this._CMSPageRoleRels;
			}
			set
			{
				this._CMSPageRoleRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_Lenta", Storage="_Lentas", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<Lenta> Lentas
		{
			get
			{
				return this._Lentas;
			}
			set
			{
				this._Lentas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageTextData", Storage="_CMSPageTextDatas", ThisKey="ID", OtherKey="CMSPageID")]
		public EntitySet<CMSPageTextData> CMSPageTextDatas
		{
			get
			{
				return this._CMSPageTextDatas;
			}
			set
			{
				this._CMSPageTextDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageLang", Storage="_CMSPageLangs", ThisKey="ID", OtherKey="CMSPageID")]
		public EntitySet<CMSPageLang> CMSPageLangs
		{
			get
			{
				return this._CMSPageLangs;
			}
			set
			{
				this._CMSPageLangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_Filter", Storage="_Filters", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<Filter> Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				this._Filters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_AnimeBlock", Storage="_AnimeBlocks", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<AnimeBlock> AnimeBlocks
		{
			get
			{
				return this._AnimeBlocks;
			}
			set
			{
				this._AnimeBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPage", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<CMSPage> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageSlider", Storage="_CMSPageSliders", ThisKey="ID", OtherKey="CMSPageID")]
		public EntitySet<CMSPageSlider> CMSPageSliders
		{
			get
			{
				return this._CMSPageSliders;
			}
			set
			{
				this._CMSPageSliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageVideo", Storage="_CMSPageVideos", ThisKey="ID", OtherKey="CMSPageID")]
		public EntitySet<CMSPageVideo> CMSPageVideos
		{
			get
			{
				return this._CMSPageVideos;
			}
			set
			{
				this._CMSPageVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPage", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public CMSPage Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				CMSPage previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PageType_CMSPage", Storage="_PageType", ThisKey="Type", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PageType PageType
		{
			get
			{
				return this._PageType.Entity;
			}
			set
			{
				PageType previousValue = this._PageType.Entity;
				if (((previousValue != value) 
							|| (this._PageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PageType.Entity = null;
						previousValue.CMSPages.Remove(this);
					}
					this._PageType.Entity = value;
					if ((value != null))
					{
						value.CMSPages.Add(this);
						this._Type = value.ID;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("PageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CMSPageRoleRels(CMSPageRoleRel entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_CMSPageRoleRels(CMSPageRoleRel entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_Lentas(Lenta entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_Lentas(Lenta entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_CMSPageTextDatas(CMSPageTextData entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_CMSPageLangs(CMSPageLang entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_CMSPageLangs(CMSPageLang entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_AnimeBlocks(AnimeBlock entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_AnimeBlocks(AnimeBlock entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_Children(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(CMSPage entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_CMSPageSliders(CMSPageSlider entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
		
		private void attach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = this;
		}
		
		private void detach_CMSPageVideos(CMSPageVideo entity)
		{
			this.SendPropertyChanging();
			entity.CMSPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageAllowedClientModuls")]
	public partial class CMSPageAllowedClientModul : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Controller;
		
		private string _Action;
		
		private string _Description;
		
		private string _StaticLink;
		
		private string _DinamicController;
		
		private string _DinamicAction;
		
		private int _ID;
		
		private bool _Popup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStaticLinkChanging(string value);
    partial void OnStaticLinkChanged();
    partial void OnDinamicControllerChanging(string value);
    partial void OnDinamicControllerChanged();
    partial void OnDinamicActionChanging(string value);
    partial void OnDinamicActionChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPopupChanging(bool value);
    partial void OnPopupChanged();
    #endregion
		
		public CMSPageAllowedClientModul()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticLink", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string StaticLink
		{
			get
			{
				return this._StaticLink;
			}
			set
			{
				if ((this._StaticLink != value))
				{
					this.OnStaticLinkChanging(value);
					this.SendPropertyChanging();
					this._StaticLink = value;
					this.SendPropertyChanged("StaticLink");
					this.OnStaticLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DinamicController", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DinamicController
		{
			get
			{
				return this._DinamicController;
			}
			set
			{
				if ((this._DinamicController != value))
				{
					this.OnDinamicControllerChanging(value);
					this.SendPropertyChanging();
					this._DinamicController = value;
					this.SendPropertyChanged("DinamicController");
					this.OnDinamicControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DinamicAction", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DinamicAction
		{
			get
			{
				return this._DinamicAction;
			}
			set
			{
				if ((this._DinamicAction != value))
				{
					this.OnDinamicActionChanging(value);
					this.SendPropertyChanging();
					this._DinamicAction = value;
					this.SendPropertyChanged("DinamicAction");
					this.OnDinamicActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Popup", DbType="Bit NOT NULL")]
		public bool Popup
		{
			get
			{
				return this._Popup;
			}
			set
			{
				if ((this._Popup != value))
				{
					this.OnPopupChanging(value);
					this.SendPropertyChanging();
					this._Popup = value;
					this.SendPropertyChanged("Popup");
					this.OnPopupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageSliders")]
	public partial class CMSPageSlider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _Visible;
		
		private string _Name;
		
		private string _Text;
		
		private System.Nullable<int> _CMSPageID;
		
		private int _LangID;
		
		private System.Nullable<int> _ViewID;
		
		private int _OrderNum;
		
		private System.Data.Linq.Binary _Img;
		
		private string _Alt;
		
		private string _Link;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _ProductID;
		
		private EntityRef<CMSPageCellView> _CMSPageCellView;
		
		private EntityRef<CMSPage> _CMSPage;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCMSPageIDChanging(System.Nullable<int> value);
    partial void OnCMSPageIDChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnViewIDChanging(System.Nullable<int> value);
    partial void OnViewIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnImgChanging(System.Data.Linq.Binary value);
    partial void OnImgChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    #endregion
		
		public CMSPageSlider()
		{
			this._CMSPageCellView = default(EntityRef<CMSPageCellView>);
			this._CMSPage = default(EntityRef<CMSPage>);
			this._Language = default(EntityRef<Language>);
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSPageID", DbType="Int")]
		public System.Nullable<int> CMSPageID
		{
			get
			{
				return this._CMSPageID;
			}
			set
			{
				if ((this._CMSPageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMSPageIDChanging(value);
					this.SendPropertyChanging();
					this._CMSPageID = value;
					this.SendPropertyChanged("CMSPageID");
					this.OnCMSPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="Int")]
		public System.Nullable<int> ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					if (this._CMSPageCellView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageSlider", Storage="_CMSPageCellView", ThisKey="ViewID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPageCellView CMSPageCellView
		{
			get
			{
				return this._CMSPageCellView.Entity;
			}
			set
			{
				CMSPageCellView previousValue = this._CMSPageCellView.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCellView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCellView.Entity = null;
						previousValue.CMSPageSliders.Remove(this);
					}
					this._CMSPageCellView.Entity = value;
					if ((value != null))
					{
						value.CMSPageSliders.Add(this);
						this._ViewID = value.ID;
					}
					else
					{
						this._ViewID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPageCellView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageSlider", Storage="_CMSPage", ThisKey="CMSPageID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.CMSPageSliders.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.CMSPageSliders.Add(this);
						this._CMSPageID = value.ID;
					}
					else
					{
						this._CMSPageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageSlider", Storage="_Language", ThisKey="LangID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CMSPageSliders.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CMSPageSliders.Add(this);
						this._LangID = value.ID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_CMSPageSlider", Storage="_StoreCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.CMSPageSliders.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.CMSPageSliders.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_CMSPageSlider", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.CMSPageSliders.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.CMSPageSliders.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageCellViewSettings")]
	public partial class CMSPageCellViewSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _ViewID;
		
		private string _Value;
		
		private EntityRef<CMSPageCellView> _CMSPageCellView;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnViewIDChanging(int value);
    partial void OnViewIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public CMSPageCellViewSetting()
		{
			this._CMSPageCellView = default(EntityRef<CMSPageCellView>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="Int NOT NULL")]
		public int ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					if (this._CMSPageCellView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageCellViewSetting", Storage="_CMSPageCellView", ThisKey="ViewID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CMSPageCellView CMSPageCellView
		{
			get
			{
				return this._CMSPageCellView.Entity;
			}
			set
			{
				CMSPageCellView previousValue = this._CMSPageCellView.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCellView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCellView.Entity = null;
						previousValue.CMSPageCellViewSettings.Remove(this);
					}
					this._CMSPageCellView.Entity = value;
					if ((value != null))
					{
						value.CMSPageCellViewSettings.Add(this);
						this._ViewID = value.ID;
					}
					else
					{
						this._ViewID = default(int);
					}
					this.SendPropertyChanged("CMSPageCellView");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilterItems")]
	public partial class FilterItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Help;
		
		private System.Nullable<int> _CharID;
		
		private int _FilterID;
		
		private int _Type;
		
		private int _OrderNum;
		
		private System.Nullable<bool> _Visible;
		
		private System.Data.Linq.Binary _Img;
		
		private bool _IsPrice;
		
		private EntityRef<Filter> _Filter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    partial void OnCharIDChanging(System.Nullable<int> value);
    partial void OnCharIDChanged();
    partial void OnFilterIDChanging(int value);
    partial void OnFilterIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    partial void OnImgChanging(System.Data.Linq.Binary value);
    partial void OnImgChanged();
    partial void OnIsPriceChanging(bool value);
    partial void OnIsPriceChanged();
    #endregion
		
		public FilterItem()
		{
			this._Filter = default(EntityRef<Filter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Help", DbType="NVarChar(MAX)")]
		public string Help
		{
			get
			{
				return this._Help;
			}
			set
			{
				if ((this._Help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._Help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharID", DbType="Int")]
		public System.Nullable<int> CharID
		{
			get
			{
				return this._CharID;
			}
			set
			{
				if ((this._CharID != value))
				{
					this.OnCharIDChanging(value);
					this.SendPropertyChanging();
					this._CharID = value;
					this.SendPropertyChanged("CharID");
					this.OnCharIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterID", DbType="Int NOT NULL")]
		public int FilterID
		{
			get
			{
				return this._FilterID;
			}
			set
			{
				if ((this._FilterID != value))
				{
					if (this._Filter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFilterIDChanging(value);
					this.SendPropertyChanging();
					this._FilterID = value;
					this.SendPropertyChanged("FilterID");
					this.OnFilterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrice", DbType="Bit NOT NULL")]
		public bool IsPrice
		{
			get
			{
				return this._IsPrice;
			}
			set
			{
				if ((this._IsPrice != value))
				{
					this.OnIsPriceChanging(value);
					this.SendPropertyChanging();
					this._IsPrice = value;
					this.SendPropertyChanged("IsPrice");
					this.OnIsPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_FilterItem", Storage="_Filter", ThisKey="FilterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Filter Filter
		{
			get
			{
				return this._Filter.Entity;
			}
			set
			{
				Filter previousValue = this._Filter.Entity;
				if (((previousValue != value) 
							|| (this._Filter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filter.Entity = null;
						previousValue.FilterItems.Remove(this);
					}
					this._Filter.Entity = value;
					if ((value != null))
					{
						value.FilterItems.Add(this);
						this._FilterID = value.ID;
					}
					else
					{
						this._FilterID = default(int);
					}
					this.SendPropertyChanged("Filter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreCharacterValues")]
	public partial class StoreCharacterValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Value;
		
		private int _CharacterID;
		
		private System.Nullable<decimal> _DecimalValue;
		
		private EntitySet<StoreCharacterToProduct> _StoreCharacterToProducts;
		
		private EntityRef<StoreCharacter> _StoreCharacter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnDecimalValueChanging(System.Nullable<decimal> value);
    partial void OnDecimalValueChanged();
    #endregion
		
		public StoreCharacterValue()
		{
			this._StoreCharacterToProducts = new EntitySet<StoreCharacterToProduct>(new Action<StoreCharacterToProduct>(this.attach_StoreCharacterToProducts), new Action<StoreCharacterToProduct>(this.detach_StoreCharacterToProducts));
			this._StoreCharacter = default(EntityRef<StoreCharacter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="Int NOT NULL")]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._StoreCharacter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecimalValue", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> DecimalValue
		{
			get
			{
				return this._DecimalValue;
			}
			set
			{
				if ((this._DecimalValue != value))
				{
					this.OnDecimalValueChanging(value);
					this.SendPropertyChanging();
					this._DecimalValue = value;
					this.SendPropertyChanged("DecimalValue");
					this.OnDecimalValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCharacterValue_StoreCharacterToProduct", Storage="_StoreCharacterToProducts", ThisKey="ID", OtherKey="CharacterValueID")]
		public EntitySet<StoreCharacterToProduct> StoreCharacterToProducts
		{
			get
			{
				return this._StoreCharacterToProducts;
			}
			set
			{
				this._StoreCharacterToProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCharacter_StoreCharacterValue", Storage="_StoreCharacter", ThisKey="CharacterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCharacter StoreCharacter
		{
			get
			{
				return this._StoreCharacter.Entity;
			}
			set
			{
				StoreCharacter previousValue = this._StoreCharacter.Entity;
				if (((previousValue != value) 
							|| (this._StoreCharacter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCharacter.Entity = null;
						previousValue.StoreCharacterValues.Remove(this);
					}
					this._StoreCharacter.Entity = value;
					if ((value != null))
					{
						value.StoreCharacterValues.Add(this);
						this._CharacterID = value.ID;
					}
					else
					{
						this._CharacterID = default(int);
					}
					this.SendPropertyChanged("StoreCharacter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreCharacterToProducts(StoreCharacterToProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreCharacterValue = this;
		}
		
		private void detach_StoreCharacterToProducts(StoreCharacterToProduct entity)
		{
			this.SendPropertyChanging();
			entity.StoreCharacterValue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCarts")]
	public partial class ShopCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.Nullable<System.Guid> _TemporaryKey;
		
		private System.DateTime _LastRequested;
		
		private EntitySet<ShopCartItem> _ShopCartItems;
		
		private EntitySet<ShopCartField> _ShopCartFields;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnTemporaryKeyChanging(System.Nullable<System.Guid> value);
    partial void OnTemporaryKeyChanged();
    partial void OnLastRequestedChanging(System.DateTime value);
    partial void OnLastRequestedChanged();
    #endregion
		
		public ShopCart()
		{
			this._ShopCartItems = new EntitySet<ShopCartItem>(new Action<ShopCartItem>(this.attach_ShopCartItems), new Action<ShopCartItem>(this.detach_ShopCartItems));
			this._ShopCartFields = new EntitySet<ShopCartField>(new Action<ShopCartField>(this.attach_ShopCartFields), new Action<ShopCartField>(this.detach_ShopCartFields));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TemporaryKey
		{
			get
			{
				return this._TemporaryKey;
			}
			set
			{
				if ((this._TemporaryKey != value))
				{
					this.OnTemporaryKeyChanging(value);
					this.SendPropertyChanging();
					this._TemporaryKey = value;
					this.SendPropertyChanged("TemporaryKey");
					this.OnTemporaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRequested", DbType="DateTime NOT NULL")]
		public System.DateTime LastRequested
		{
			get
			{
				return this._LastRequested;
			}
			set
			{
				if ((this._LastRequested != value))
				{
					this.OnLastRequestedChanging(value);
					this.SendPropertyChanging();
					this._LastRequested = value;
					this.SendPropertyChanged("LastRequested");
					this.OnLastRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartItem", Storage="_ShopCartItems", ThisKey="ID", OtherKey="ShopCartID")]
		public EntitySet<ShopCartItem> ShopCartItems
		{
			get
			{
				return this._ShopCartItems;
			}
			set
			{
				this._ShopCartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartField", Storage="_ShopCartFields", ThisKey="ID", OtherKey="ShopCartID")]
		public EntitySet<ShopCartField> ShopCartFields
		{
			get
			{
				return this._ShopCartFields;
			}
			set
			{
				this._ShopCartFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ShopCart", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ShopCarts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ShopCarts.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = this;
		}
		
		private void detach_ShopCartItems(ShopCartItem entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = null;
		}
		
		private void attach_ShopCartFields(ShopCartField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = this;
		}
		
		private void detach_ShopCartFields(ShopCartField entity)
		{
			this.SendPropertyChanging();
			entity.ShopCart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCartItems")]
	public partial class ShopCartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProductID;
		
		private int _Count;
		
		private bool _IsDelayed;
		
		private int _ShopCartID;
		
		private bool _IsSpec;
		
		private EntityRef<ShopCart> _ShopCart;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnIsDelayedChanging(bool value);
    partial void OnIsDelayedChanged();
    partial void OnShopCartIDChanging(int value);
    partial void OnShopCartIDChanged();
    partial void OnIsSpecChanging(bool value);
    partial void OnIsSpecChanged();
    #endregion
		
		public ShopCartItem()
		{
			this._ShopCart = default(EntityRef<ShopCart>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelayed", DbType="Bit NOT NULL")]
		public bool IsDelayed
		{
			get
			{
				return this._IsDelayed;
			}
			set
			{
				if ((this._IsDelayed != value))
				{
					this.OnIsDelayedChanging(value);
					this.SendPropertyChanging();
					this._IsDelayed = value;
					this.SendPropertyChanged("IsDelayed");
					this.OnIsDelayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCartID", DbType="Int NOT NULL")]
		public int ShopCartID
		{
			get
			{
				return this._ShopCartID;
			}
			set
			{
				if ((this._ShopCartID != value))
				{
					if (this._ShopCart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShopCartID = value;
					this.SendPropertyChanged("ShopCartID");
					this.OnShopCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpec", DbType="Bit NOT NULL")]
		public bool IsSpec
		{
			get
			{
				return this._IsSpec;
			}
			set
			{
				if ((this._IsSpec != value))
				{
					this.OnIsSpecChanging(value);
					this.SendPropertyChanging();
					this._IsSpec = value;
					this.SendPropertyChanged("IsSpec");
					this.OnIsSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartItem", Storage="_ShopCart", ThisKey="ShopCartID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ShopCart ShopCart
		{
			get
			{
				return this._ShopCart.Entity;
			}
			set
			{
				ShopCart previousValue = this._ShopCart.Entity;
				if (((previousValue != value) 
							|| (this._ShopCart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCart.Entity = null;
						previousValue.ShopCartItems.Remove(this);
					}
					this._ShopCart.Entity = value;
					if ((value != null))
					{
						value.ShopCartItems.Add(this);
						this._ShopCartID = value.ID;
					}
					else
					{
						this._ShopCartID = default(int);
					}
					this.SendPropertyChanged("ShopCart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_ShopCartItem", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.ShopCartItems.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.ShopCartItems.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopCartFields")]
	public partial class ShopCartField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ShopCartID;
		
		private string _Name;
		
		private string _Value;
		
		private EntityRef<ShopCart> _ShopCart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShopCartIDChanging(int value);
    partial void OnShopCartIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ShopCartField()
		{
			this._ShopCart = default(EntityRef<ShopCart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopCartID", DbType="Int NOT NULL")]
		public int ShopCartID
		{
			get
			{
				return this._ShopCartID;
			}
			set
			{
				if ((this._ShopCartID != value))
				{
					if (this._ShopCart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShopCartID = value;
					this.SendPropertyChanged("ShopCartID");
					this.OnShopCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopCart_ShopCartField", Storage="_ShopCart", ThisKey="ShopCartID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ShopCart ShopCart
		{
			get
			{
				return this._ShopCart.Entity;
			}
			set
			{
				ShopCart previousValue = this._ShopCart.Entity;
				if (((previousValue != value) 
							|| (this._ShopCart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopCart.Entity = null;
						previousValue.ShopCartFields.Remove(this);
					}
					this._ShopCart.Entity = value;
					if ((value != null))
					{
						value.ShopCartFields.Add(this);
						this._ShopCartID = value.ID;
					}
					else
					{
						this._ShopCartID = default(int);
					}
					this.SendPropertyChanged("ShopCart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreFiles")]
	public partial class StoreFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Link;
		
		private bool _Download;
		
		private int _OrderNum;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _CategoryID;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDownloadChanging(bool value);
    partial void OnDownloadChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public StoreFile()
		{
			this._StoreCategory = default(EntityRef<StoreCategory>);
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Download", DbType="Bit NOT NULL")]
		public bool Download
		{
			get
			{
				return this._Download;
			}
			set
			{
				if ((this._Download != value))
				{
					this.OnDownloadChanging(value);
					this.SendPropertyChanging();
					this._Download = value;
					this.SendPropertyChanged("Download");
					this.OnDownloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_StoreFile", Storage="_StoreCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.StoreFiles.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.StoreFiles.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreFile", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreFiles.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreFiles.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreImages")]
	public partial class StoreImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private int _ProductID;
		
		private bool _Enabled;
		
		private string _UrlPath;
		
		private string _UrlPathThumbs;
		
		private System.Nullable<int> _OrderNum;
		
		private string _Alt;
		
		private string _Youtube;
		
		private EntityRef<StoreProduct> _StoreProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnUrlPathChanging(string value);
    partial void OnUrlPathChanged();
    partial void OnUrlPathThumbsChanging(string value);
    partial void OnUrlPathThumbsChanged();
    partial void OnOrderNumChanging(System.Nullable<int> value);
    partial void OnOrderNumChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnYoutubeChanging(string value);
    partial void OnYoutubeChanged();
    #endregion
		
		public StoreImage()
		{
			this._StoreProduct = default(EntityRef<StoreProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._StoreProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="NVarChar(512)")]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this.OnUrlPathChanging(value);
					this.SendPropertyChanging();
					this._UrlPath = value;
					this.SendPropertyChanged("UrlPath");
					this.OnUrlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPathThumbs", DbType="NVarChar(512)")]
		public string UrlPathThumbs
		{
			get
			{
				return this._UrlPathThumbs;
			}
			set
			{
				if ((this._UrlPathThumbs != value))
				{
					this.OnUrlPathThumbsChanging(value);
					this.SendPropertyChanging();
					this._UrlPathThumbs = value;
					this.SendPropertyChanged("UrlPathThumbs");
					this.OnUrlPathThumbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int")]
		public System.Nullable<int> OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt", DbType="NVarChar(512)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Youtube", DbType="NVarChar(MAX)")]
		public string Youtube
		{
			get
			{
				return this._Youtube;
			}
			set
			{
				if ((this._Youtube != value))
				{
					this.OnYoutubeChanging(value);
					this.SendPropertyChanging();
					this._Youtube = value;
					this.SendPropertyChanged("Youtube");
					this.OnYoutubeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreProduct_StoreImage", Storage="_StoreProduct", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreProduct StoreProduct
		{
			get
			{
				return this._StoreProduct.Entity;
			}
			set
			{
				StoreProduct previousValue = this._StoreProduct.Entity;
				if (((previousValue != value) 
							|| (this._StoreProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreProduct.Entity = null;
						previousValue.StoreImages.Remove(this);
					}
					this._StoreProduct.Entity = value;
					if ((value != null))
					{
						value.StoreImages.Add(this);
						this._ProductID = value.ID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("StoreProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreCharacters")]
	public partial class StoreCharacter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Tooltip;
		
		private EntitySet<StoreCharacterValue> _StoreCharacterValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTooltipChanging(string value);
    partial void OnTooltipChanged();
    #endregion
		
		public StoreCharacter()
		{
			this._StoreCharacterValues = new EntitySet<StoreCharacterValue>(new Action<StoreCharacterValue>(this.attach_StoreCharacterValues), new Action<StoreCharacterValue>(this.detach_StoreCharacterValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooltip", DbType="NVarChar(MAX)")]
		public string Tooltip
		{
			get
			{
				return this._Tooltip;
			}
			set
			{
				if ((this._Tooltip != value))
				{
					this.OnTooltipChanging(value);
					this.SendPropertyChanging();
					this._Tooltip = value;
					this.SendPropertyChanged("Tooltip");
					this.OnTooltipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCharacter_StoreCharacterValue", Storage="_StoreCharacterValues", ThisKey="ID", OtherKey="CharacterID")]
		public EntitySet<StoreCharacterValue> StoreCharacterValues
		{
			get
			{
				return this._StoreCharacterValues;
			}
			set
			{
				this._StoreCharacterValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreCharacterValues(StoreCharacterValue entity)
		{
			this.SendPropertyChanging();
			entity.StoreCharacter = this;
		}
		
		private void detach_StoreCharacterValues(StoreCharacterValue entity)
		{
			this.SendPropertyChanging();
			entity.StoreCharacter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CMSPageVideo")]
	public partial class CMSPageVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FilePath;
		
		private string _PreviewPath;
		
		private int _Width;
		
		private int _Height;
		
		private bool _AutoPlay;
		
		private System.Nullable<int> _CMSPageID;
		
		private System.Nullable<int> _ViewID;
		
		private string _Name;
		
		private bool _Visible;
		
		private int _LangID;
		
		private int _OrderNum;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Description;
		
		private EntityRef<CMSPageCellView> _CMSPageCellView;
		
		private EntityRef<Language> _Language;
		
		private EntityRef<CMSPage> _CMSPage;
		
		private EntityRef<StoreCategory> _StoreCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnPreviewPathChanging(string value);
    partial void OnPreviewPathChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnAutoPlayChanging(bool value);
    partial void OnAutoPlayChanged();
    partial void OnCMSPageIDChanging(System.Nullable<int> value);
    partial void OnCMSPageIDChanged();
    partial void OnViewIDChanging(System.Nullable<int> value);
    partial void OnViewIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnLangIDChanging(int value);
    partial void OnLangIDChanged();
    partial void OnOrderNumChanging(int value);
    partial void OnOrderNumChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CMSPageVideo()
		{
			this._CMSPageCellView = default(EntityRef<CMSPageCellView>);
			this._Language = default(EntityRef<Language>);
			this._CMSPage = default(EntityRef<CMSPage>);
			this._StoreCategory = default(EntityRef<StoreCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviewPath", DbType="NVarChar(400)")]
		public string PreviewPath
		{
			get
			{
				return this._PreviewPath;
			}
			set
			{
				if ((this._PreviewPath != value))
				{
					this.OnPreviewPathChanging(value);
					this.SendPropertyChanging();
					this._PreviewPath = value;
					this.SendPropertyChanged("PreviewPath");
					this.OnPreviewPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoPlay", DbType="Bit NOT NULL")]
		public bool AutoPlay
		{
			get
			{
				return this._AutoPlay;
			}
			set
			{
				if ((this._AutoPlay != value))
				{
					this.OnAutoPlayChanging(value);
					this.SendPropertyChanging();
					this._AutoPlay = value;
					this.SendPropertyChanged("AutoPlay");
					this.OnAutoPlayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMSPageID", DbType="Int")]
		public System.Nullable<int> CMSPageID
		{
			get
			{
				return this._CMSPageID;
			}
			set
			{
				if ((this._CMSPageID != value))
				{
					if (this._CMSPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMSPageIDChanging(value);
					this.SendPropertyChanging();
					this._CMSPageID = value;
					this.SendPropertyChanged("CMSPageID");
					this.OnCMSPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewID", DbType="Int")]
		public System.Nullable<int> ViewID
		{
			get
			{
				return this._ViewID;
			}
			set
			{
				if ((this._ViewID != value))
				{
					if (this._CMSPageCellView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViewIDChanging(value);
					this.SendPropertyChanging();
					this._ViewID = value;
					this.SendPropertyChanged("ViewID");
					this.OnViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangID", DbType="Int NOT NULL")]
		public int LangID
		{
			get
			{
				return this._LangID;
			}
			set
			{
				if ((this._LangID != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLangIDChanging(value);
					this.SendPropertyChanging();
					this._LangID = value;
					this.SendPropertyChanged("LangID");
					this.OnLangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int NOT NULL")]
		public int OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._StoreCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPageCellView_CMSPageVideo", Storage="_CMSPageCellView", ThisKey="ViewID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPageCellView CMSPageCellView
		{
			get
			{
				return this._CMSPageCellView.Entity;
			}
			set
			{
				CMSPageCellView previousValue = this._CMSPageCellView.Entity;
				if (((previousValue != value) 
							|| (this._CMSPageCellView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPageCellView.Entity = null;
						previousValue.CMSPageVideos.Remove(this);
					}
					this._CMSPageCellView.Entity = value;
					if ((value != null))
					{
						value.CMSPageVideos.Add(this);
						this._ViewID = value.ID;
					}
					else
					{
						this._ViewID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPageCellView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_CMSPageVideo", Storage="_Language", ThisKey="LangID", OtherKey="ID", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.CMSPageVideos.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.CMSPageVideos.Add(this);
						this._LangID = value.ID;
					}
					else
					{
						this._LangID = default(int);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CMSPage_CMSPageVideo", Storage="_CMSPage", ThisKey="CMSPageID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CMSPage CMSPage
		{
			get
			{
				return this._CMSPage.Entity;
			}
			set
			{
				CMSPage previousValue = this._CMSPage.Entity;
				if (((previousValue != value) 
							|| (this._CMSPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CMSPage.Entity = null;
						previousValue.CMSPageVideos.Remove(this);
					}
					this._CMSPage.Entity = value;
					if ((value != null))
					{
						value.CMSPageVideos.Add(this);
						this._CMSPageID = value.ID;
					}
					else
					{
						this._CMSPageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CMSPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCategory_CMSPageVideo", Storage="_StoreCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StoreCategory StoreCategory
		{
			get
			{
				return this._StoreCategory.Entity;
			}
			set
			{
				StoreCategory previousValue = this._StoreCategory.Entity;
				if (((previousValue != value) 
							|| (this._StoreCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCategory.Entity = null;
						previousValue.CMSPageVideos.Remove(this);
					}
					this._StoreCategory.Entity = value;
					if ((value != null))
					{
						value.CMSPageVideos.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StoreCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfiles")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Patrinomic;
		
		private System.Nullable<int> _FromIP;
		
		private System.Nullable<System.DateTime> _RegDate;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _Nick;
		
		private System.Data.Linq.Binary _Avatar;
		
		private string _Town;
		
		private string _Region;
		
		private string _AboutMe;
		
		private string _Specs;
		
		private bool _IsMaster;
		
		private int _ViewCount;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnPatrinomicChanging(string value);
    partial void OnPatrinomicChanged();
    partial void OnFromIPChanging(System.Nullable<int> value);
    partial void OnFromIPChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnNickChanging(string value);
    partial void OnNickChanged();
    partial void OnAvatarChanging(System.Data.Linq.Binary value);
    partial void OnAvatarChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnSpecsChanging(string value);
    partial void OnSpecsChanged();
    partial void OnIsMasterChanging(bool value);
    partial void OnIsMasterChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    #endregion
		
		public UserProfile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patrinomic", DbType="NVarChar(100)")]
		public string Patrinomic
		{
			get
			{
				return this._Patrinomic;
			}
			set
			{
				if ((this._Patrinomic != value))
				{
					this.OnPatrinomicChanging(value);
					this.SendPropertyChanging();
					this._Patrinomic = value;
					this.SendPropertyChanged("Patrinomic");
					this.OnPatrinomicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromIP", DbType="Int")]
		public System.Nullable<int> FromIP
		{
			get
			{
				return this._FromIP;
			}
			set
			{
				if ((this._FromIP != value))
				{
					this.OnFromIPChanging(value);
					this.SendPropertyChanging();
					this._FromIP = value;
					this.SendPropertyChanged("FromIP");
					this.OnFromIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nick", DbType="NVarChar(100)")]
		public string Nick
		{
			get
			{
				return this._Nick;
			}
			set
			{
				if ((this._Nick != value))
				{
					this.OnNickChanging(value);
					this.SendPropertyChanging();
					this._Nick = value;
					this.SendPropertyChanged("Nick");
					this.OnNickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(MAX)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(400)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="NVarChar(MAX)")]
		public string AboutMe
		{
			get
			{
				return this._AboutMe;
			}
			set
			{
				if ((this._AboutMe != value))
				{
					this.OnAboutMeChanging(value);
					this.SendPropertyChanging();
					this._AboutMe = value;
					this.SendPropertyChanged("AboutMe");
					this.OnAboutMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specs", DbType="NVarChar(MAX)")]
		public string Specs
		{
			get
			{
				return this._Specs;
			}
			set
			{
				if ((this._Specs != value))
				{
					this.OnSpecsChanging(value);
					this.SendPropertyChanging();
					this._Specs = value;
					this.SendPropertyChanged("Specs");
					this.OnSpecsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaster", DbType="Bit NOT NULL")]
		public bool IsMaster
		{
			get
			{
				return this._IsMaster;
			}
			set
			{
				if ((this._IsMaster != value))
				{
					this.OnIsMasterChanging(value);
					this.SendPropertyChanging();
					this._IsMaster = value;
					this.SendPropertyChanged("IsMaster");
					this.OnIsMasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int NOT NULL")]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRates")]
	public partial class UserRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private int _Rate;
		
		private int _IPAddress;
		
		private System.DateTime _Date;
		
		private int _ID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnRateChanging(int value);
    partial void OnRateChanged();
    partial void OnIPAddressChanging(int value);
    partial void OnIPAddressChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public UserRate()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Int NOT NULL")]
		public int Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="Int NOT NULL")]
		public int IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRate", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRates.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserImages")]
	public partial class UserImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Path;
		
		private System.Guid _UserID;
		
		private System.DateTime _CreateDate;
		
		private string _Name;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserImage()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserImage", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserImages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserImages.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class getIntListByJoinedStringResult
	{
		
		private System.Nullable<int> _ID;
		
		public getIntListByJoinedStringResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class fSearchResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _PageName;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Rank;
		
		public fSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(MAX)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
	}
	
	public partial class getPageListResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _URL;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<bool> _Visible;
		
		private System.Nullable<bool> _ViewMenu;
		
		private System.Nullable<int> _TreeLevel;
		
		private System.Nullable<int> _Type;
		
		private string _FullURL;
		
		private System.Nullable<int> _OrderNum;
		
		private string _BreadCrumbs;
		
		private string _LinkedBreadCrumbs;
		
		private string _PageName;
		
		private string _FullName;
		
		private string _FullNameH2;
		
		private string _Title;
		
		private string _Keywords;
		
		private string _Description;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _LastMod;
		
		public getPageListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(400)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this._Visible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewMenu", DbType="Bit")]
		public System.Nullable<bool> ViewMenu
		{
			get
			{
				return this._ViewMenu;
			}
			set
			{
				if ((this._ViewMenu != value))
				{
					this._ViewMenu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreeLevel", DbType="Int")]
		public System.Nullable<int> TreeLevel
		{
			get
			{
				return this._TreeLevel;
			}
			set
			{
				if ((this._TreeLevel != value))
				{
					this._TreeLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullURL", DbType="NVarChar(MAX)")]
		public string FullURL
		{
			get
			{
				return this._FullURL;
			}
			set
			{
				if ((this._FullURL != value))
				{
					this._FullURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int")]
		public System.Nullable<int> OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this._OrderNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreadCrumbs", DbType="NVarChar(MAX)")]
		public string BreadCrumbs
		{
			get
			{
				return this._BreadCrumbs;
			}
			set
			{
				if ((this._BreadCrumbs != value))
				{
					this._BreadCrumbs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedBreadCrumbs", DbType="NVarChar(MAX)")]
		public string LinkedBreadCrumbs
		{
			get
			{
				return this._LinkedBreadCrumbs;
			}
			set
			{
				if ((this._LinkedBreadCrumbs != value))
				{
					this._LinkedBreadCrumbs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullNameH2", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string FullNameH2
		{
			get
			{
				return this._FullNameH2;
			}
			set
			{
				if ((this._FullNameH2 != value))
				{
					this._FullNameH2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this._Keywords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMod", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMod
		{
			get
			{
				return this._LastMod;
			}
			set
			{
				if ((this._LastMod != value))
				{
					this._LastMod = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
